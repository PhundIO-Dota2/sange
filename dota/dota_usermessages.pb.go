// Code generated by protoc-gen-go.
// source: dota_usermessages.proto
// DO NOT EDIT!

package dota

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// discarding unused import google_protobuf "github.com/dotabuff/sange/dota/google/protobuf"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type EDotaUserMessages int32

const (
	EDotaUserMessages_DOTA_UM_AddUnitToSelection       EDotaUserMessages = 464
	EDotaUserMessages_DOTA_UM_AIDebugLine              EDotaUserMessages = 465
	EDotaUserMessages_DOTA_UM_ChatEvent                EDotaUserMessages = 466
	EDotaUserMessages_DOTA_UM_CombatHeroPositions      EDotaUserMessages = 467
	EDotaUserMessages_DOTA_UM_CombatLogData            EDotaUserMessages = 468
	EDotaUserMessages_DOTA_UM_CombatLogShowDeath       EDotaUserMessages = 470
	EDotaUserMessages_DOTA_UM_CreateLinearProjectile   EDotaUserMessages = 471
	EDotaUserMessages_DOTA_UM_DestroyLinearProjectile  EDotaUserMessages = 472
	EDotaUserMessages_DOTA_UM_DodgeTrackingProjectiles EDotaUserMessages = 473
	EDotaUserMessages_DOTA_UM_GlobalLightColor         EDotaUserMessages = 474
	EDotaUserMessages_DOTA_UM_GlobalLightDirection     EDotaUserMessages = 475
	EDotaUserMessages_DOTA_UM_InvalidCommand           EDotaUserMessages = 476
	EDotaUserMessages_DOTA_UM_LocationPing             EDotaUserMessages = 477
	EDotaUserMessages_DOTA_UM_MapLine                  EDotaUserMessages = 478
	EDotaUserMessages_DOTA_UM_MiniKillCamInfo          EDotaUserMessages = 479
	EDotaUserMessages_DOTA_UM_MinimapDebugPoint        EDotaUserMessages = 480
	EDotaUserMessages_DOTA_UM_MinimapEvent             EDotaUserMessages = 481
	EDotaUserMessages_DOTA_UM_NevermoreRequiem         EDotaUserMessages = 482
	EDotaUserMessages_DOTA_UM_OverheadEvent            EDotaUserMessages = 483
	EDotaUserMessages_DOTA_UM_SetNextAutobuyItem       EDotaUserMessages = 484
	EDotaUserMessages_DOTA_UM_SharedCooldown           EDotaUserMessages = 485
	EDotaUserMessages_DOTA_UM_SpectatorPlayerClick     EDotaUserMessages = 486
	EDotaUserMessages_DOTA_UM_TutorialTipInfo          EDotaUserMessages = 487
	EDotaUserMessages_DOTA_UM_UnitEvent                EDotaUserMessages = 488
	EDotaUserMessages_DOTA_UM_ParticleManager          EDotaUserMessages = 489
	EDotaUserMessages_DOTA_UM_BotChat                  EDotaUserMessages = 490
	EDotaUserMessages_DOTA_UM_HudError                 EDotaUserMessages = 491
	EDotaUserMessages_DOTA_UM_ItemPurchased            EDotaUserMessages = 492
	EDotaUserMessages_DOTA_UM_Ping                     EDotaUserMessages = 493
	EDotaUserMessages_DOTA_UM_ItemFound                EDotaUserMessages = 494
	EDotaUserMessages_DOTA_UM_CharacterSpeakConcept    EDotaUserMessages = 495
	EDotaUserMessages_DOTA_UM_SwapVerify               EDotaUserMessages = 496
	EDotaUserMessages_DOTA_UM_WorldLine                EDotaUserMessages = 497
	EDotaUserMessages_DOTA_UM_TournamentDrop           EDotaUserMessages = 498
	EDotaUserMessages_DOTA_UM_ItemAlert                EDotaUserMessages = 499
	EDotaUserMessages_DOTA_UM_HalloweenDrops           EDotaUserMessages = 500
	EDotaUserMessages_DOTA_UM_ChatWheel                EDotaUserMessages = 501
	EDotaUserMessages_DOTA_UM_ReceivedXmasGift         EDotaUserMessages = 502
	EDotaUserMessages_DOTA_UM_UpdateSharedContent      EDotaUserMessages = 503
	EDotaUserMessages_DOTA_UM_TutorialRequestExp       EDotaUserMessages = 504
	EDotaUserMessages_DOTA_UM_TutorialPingMinimap      EDotaUserMessages = 505
	EDotaUserMessages_DOTA_UM_GamerulesStateChanged    EDotaUserMessages = 506
	EDotaUserMessages_DOTA_UM_ShowSurvey               EDotaUserMessages = 507
	EDotaUserMessages_DOTA_UM_TutorialFade             EDotaUserMessages = 508
	EDotaUserMessages_DOTA_UM_AddQuestLogEntry         EDotaUserMessages = 509
	EDotaUserMessages_DOTA_UM_SendStatPopup            EDotaUserMessages = 510
	EDotaUserMessages_DOTA_UM_TutorialFinish           EDotaUserMessages = 511
	EDotaUserMessages_DOTA_UM_SendRoshanPopup          EDotaUserMessages = 512
	EDotaUserMessages_DOTA_UM_SendGenericToolTip       EDotaUserMessages = 513
	EDotaUserMessages_DOTA_UM_SendFinalGold            EDotaUserMessages = 514
	EDotaUserMessages_DOTA_UM_CustomMsg                EDotaUserMessages = 515
	EDotaUserMessages_DOTA_UM_CoachHUDPing             EDotaUserMessages = 516
	EDotaUserMessages_DOTA_UM_ClientLoadGridNav        EDotaUserMessages = 517
	EDotaUserMessages_DOTA_UM_TE_Projectile            EDotaUserMessages = 518
	EDotaUserMessages_DOTA_UM_TE_ProjectileLoc         EDotaUserMessages = 519
	EDotaUserMessages_DOTA_UM_TE_DotaBloodImpact       EDotaUserMessages = 520
	EDotaUserMessages_DOTA_UM_TE_UnitAnimation         EDotaUserMessages = 521
	EDotaUserMessages_DOTA_UM_TE_UnitAnimationEnd      EDotaUserMessages = 522
	EDotaUserMessages_DOTA_UM_AbilityPing              EDotaUserMessages = 523
	EDotaUserMessages_DOTA_UM_ShowGenericPopup         EDotaUserMessages = 524
	EDotaUserMessages_DOTA_UM_VoteStart                EDotaUserMessages = 525
	EDotaUserMessages_DOTA_UM_VoteUpdate               EDotaUserMessages = 526
	EDotaUserMessages_DOTA_UM_VoteEnd                  EDotaUserMessages = 527
	EDotaUserMessages_DOTA_UM_BoosterState             EDotaUserMessages = 528
	EDotaUserMessages_DOTA_UM_WillPurchaseAlert        EDotaUserMessages = 529
	EDotaUserMessages_DOTA_UM_TutorialMinimapPosition  EDotaUserMessages = 530
	EDotaUserMessages_DOTA_UM_PlayerMMR                EDotaUserMessages = 531
	EDotaUserMessages_DOTA_UM_AbilitySteal             EDotaUserMessages = 532
	EDotaUserMessages_DOTA_UM_SpeechBubble             EDotaUserMessages = 533
	EDotaUserMessages_DOTA_UM_CustomHeaderMessage      EDotaUserMessages = 534
)

var EDotaUserMessages_name = map[int32]string{
	464: "DOTA_UM_AddUnitToSelection",
	465: "DOTA_UM_AIDebugLine",
	466: "DOTA_UM_ChatEvent",
	467: "DOTA_UM_CombatHeroPositions",
	468: "DOTA_UM_CombatLogData",
	470: "DOTA_UM_CombatLogShowDeath",
	471: "DOTA_UM_CreateLinearProjectile",
	472: "DOTA_UM_DestroyLinearProjectile",
	473: "DOTA_UM_DodgeTrackingProjectiles",
	474: "DOTA_UM_GlobalLightColor",
	475: "DOTA_UM_GlobalLightDirection",
	476: "DOTA_UM_InvalidCommand",
	477: "DOTA_UM_LocationPing",
	478: "DOTA_UM_MapLine",
	479: "DOTA_UM_MiniKillCamInfo",
	480: "DOTA_UM_MinimapDebugPoint",
	481: "DOTA_UM_MinimapEvent",
	482: "DOTA_UM_NevermoreRequiem",
	483: "DOTA_UM_OverheadEvent",
	484: "DOTA_UM_SetNextAutobuyItem",
	485: "DOTA_UM_SharedCooldown",
	486: "DOTA_UM_SpectatorPlayerClick",
	487: "DOTA_UM_TutorialTipInfo",
	488: "DOTA_UM_UnitEvent",
	489: "DOTA_UM_ParticleManager",
	490: "DOTA_UM_BotChat",
	491: "DOTA_UM_HudError",
	492: "DOTA_UM_ItemPurchased",
	493: "DOTA_UM_Ping",
	494: "DOTA_UM_ItemFound",
	495: "DOTA_UM_CharacterSpeakConcept",
	496: "DOTA_UM_SwapVerify",
	497: "DOTA_UM_WorldLine",
	498: "DOTA_UM_TournamentDrop",
	499: "DOTA_UM_ItemAlert",
	500: "DOTA_UM_HalloweenDrops",
	501: "DOTA_UM_ChatWheel",
	502: "DOTA_UM_ReceivedXmasGift",
	503: "DOTA_UM_UpdateSharedContent",
	504: "DOTA_UM_TutorialRequestExp",
	505: "DOTA_UM_TutorialPingMinimap",
	506: "DOTA_UM_GamerulesStateChanged",
	507: "DOTA_UM_ShowSurvey",
	508: "DOTA_UM_TutorialFade",
	509: "DOTA_UM_AddQuestLogEntry",
	510: "DOTA_UM_SendStatPopup",
	511: "DOTA_UM_TutorialFinish",
	512: "DOTA_UM_SendRoshanPopup",
	513: "DOTA_UM_SendGenericToolTip",
	514: "DOTA_UM_SendFinalGold",
	515: "DOTA_UM_CustomMsg",
	516: "DOTA_UM_CoachHUDPing",
	517: "DOTA_UM_ClientLoadGridNav",
	518: "DOTA_UM_TE_Projectile",
	519: "DOTA_UM_TE_ProjectileLoc",
	520: "DOTA_UM_TE_DotaBloodImpact",
	521: "DOTA_UM_TE_UnitAnimation",
	522: "DOTA_UM_TE_UnitAnimationEnd",
	523: "DOTA_UM_AbilityPing",
	524: "DOTA_UM_ShowGenericPopup",
	525: "DOTA_UM_VoteStart",
	526: "DOTA_UM_VoteUpdate",
	527: "DOTA_UM_VoteEnd",
	528: "DOTA_UM_BoosterState",
	529: "DOTA_UM_WillPurchaseAlert",
	530: "DOTA_UM_TutorialMinimapPosition",
	531: "DOTA_UM_PlayerMMR",
	532: "DOTA_UM_AbilitySteal",
	533: "DOTA_UM_SpeechBubble",
	534: "DOTA_UM_CustomHeaderMessage",
}
var EDotaUserMessages_value = map[string]int32{
	"DOTA_UM_AddUnitToSelection":       464,
	"DOTA_UM_AIDebugLine":              465,
	"DOTA_UM_ChatEvent":                466,
	"DOTA_UM_CombatHeroPositions":      467,
	"DOTA_UM_CombatLogData":            468,
	"DOTA_UM_CombatLogShowDeath":       470,
	"DOTA_UM_CreateLinearProjectile":   471,
	"DOTA_UM_DestroyLinearProjectile":  472,
	"DOTA_UM_DodgeTrackingProjectiles": 473,
	"DOTA_UM_GlobalLightColor":         474,
	"DOTA_UM_GlobalLightDirection":     475,
	"DOTA_UM_InvalidCommand":           476,
	"DOTA_UM_LocationPing":             477,
	"DOTA_UM_MapLine":                  478,
	"DOTA_UM_MiniKillCamInfo":          479,
	"DOTA_UM_MinimapDebugPoint":        480,
	"DOTA_UM_MinimapEvent":             481,
	"DOTA_UM_NevermoreRequiem":         482,
	"DOTA_UM_OverheadEvent":            483,
	"DOTA_UM_SetNextAutobuyItem":       484,
	"DOTA_UM_SharedCooldown":           485,
	"DOTA_UM_SpectatorPlayerClick":     486,
	"DOTA_UM_TutorialTipInfo":          487,
	"DOTA_UM_UnitEvent":                488,
	"DOTA_UM_ParticleManager":          489,
	"DOTA_UM_BotChat":                  490,
	"DOTA_UM_HudError":                 491,
	"DOTA_UM_ItemPurchased":            492,
	"DOTA_UM_Ping":                     493,
	"DOTA_UM_ItemFound":                494,
	"DOTA_UM_CharacterSpeakConcept":    495,
	"DOTA_UM_SwapVerify":               496,
	"DOTA_UM_WorldLine":                497,
	"DOTA_UM_TournamentDrop":           498,
	"DOTA_UM_ItemAlert":                499,
	"DOTA_UM_HalloweenDrops":           500,
	"DOTA_UM_ChatWheel":                501,
	"DOTA_UM_ReceivedXmasGift":         502,
	"DOTA_UM_UpdateSharedContent":      503,
	"DOTA_UM_TutorialRequestExp":       504,
	"DOTA_UM_TutorialPingMinimap":      505,
	"DOTA_UM_GamerulesStateChanged":    506,
	"DOTA_UM_ShowSurvey":               507,
	"DOTA_UM_TutorialFade":             508,
	"DOTA_UM_AddQuestLogEntry":         509,
	"DOTA_UM_SendStatPopup":            510,
	"DOTA_UM_TutorialFinish":           511,
	"DOTA_UM_SendRoshanPopup":          512,
	"DOTA_UM_SendGenericToolTip":       513,
	"DOTA_UM_SendFinalGold":            514,
	"DOTA_UM_CustomMsg":                515,
	"DOTA_UM_CoachHUDPing":             516,
	"DOTA_UM_ClientLoadGridNav":        517,
	"DOTA_UM_TE_Projectile":            518,
	"DOTA_UM_TE_ProjectileLoc":         519,
	"DOTA_UM_TE_DotaBloodImpact":       520,
	"DOTA_UM_TE_UnitAnimation":         521,
	"DOTA_UM_TE_UnitAnimationEnd":      522,
	"DOTA_UM_AbilityPing":              523,
	"DOTA_UM_ShowGenericPopup":         524,
	"DOTA_UM_VoteStart":                525,
	"DOTA_UM_VoteUpdate":               526,
	"DOTA_UM_VoteEnd":                  527,
	"DOTA_UM_BoosterState":             528,
	"DOTA_UM_WillPurchaseAlert":        529,
	"DOTA_UM_TutorialMinimapPosition":  530,
	"DOTA_UM_PlayerMMR":                531,
	"DOTA_UM_AbilitySteal":             532,
	"DOTA_UM_SpeechBubble":             533,
	"DOTA_UM_CustomHeaderMessage":      534,
}

func (x EDotaUserMessages) Enum() *EDotaUserMessages {
	p := new(EDotaUserMessages)
	*p = x
	return p
}
func (x EDotaUserMessages) String() string {
	return proto.EnumName(EDotaUserMessages_name, int32(x))
}
func (x *EDotaUserMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDotaUserMessages_value, data, "EDotaUserMessages")
	if err != nil {
		return err
	}
	*x = EDotaUserMessages(value)
	return nil
}

type DOTA_CHAT_MESSAGE int32

const (
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INVALID                                   DOTA_CHAT_MESSAGE = -1
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_KILL                                 DOTA_CHAT_MESSAGE = 0
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_DENY                                 DOTA_CHAT_MESSAGE = 1
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_BARRACKS_KILL                             DOTA_CHAT_MESSAGE = 2
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_TOWER_KILL                                DOTA_CHAT_MESSAGE = 3
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_TOWER_DENY                                DOTA_CHAT_MESSAGE = 4
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_FIRSTBLOOD                                DOTA_CHAT_MESSAGE = 5
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_STREAK_KILL                               DOTA_CHAT_MESSAGE = 6
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_BUYBACK                                   DOTA_CHAT_MESSAGE = 7
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_AEGIS                                     DOTA_CHAT_MESSAGE = 8
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ROSHAN_KILL                               DOTA_CHAT_MESSAGE = 9
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COURIER_LOST                              DOTA_CHAT_MESSAGE = 10
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COURIER_RESPAWNED                         DOTA_CHAT_MESSAGE = 11
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_GLYPH_USED                                DOTA_CHAT_MESSAGE = 12
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEM_PURCHASE                             DOTA_CHAT_MESSAGE = 13
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CONNECT                                   DOTA_CHAT_MESSAGE = 14
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT                                DOTA_CHAT_MESSAGE = 15
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT             DOTA_CHAT_MESSAGE = 16
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_TIME_REMAINING                 DOTA_CHAT_MESSAGE = 17
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL          DOTA_CHAT_MESSAGE = 18
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RECONNECT                                 DOTA_CHAT_MESSAGE = 19
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT                               DOTA_CHAT_MESSAGE = 20
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SAFE_TO_LEAVE                             DOTA_CHAT_MESSAGE = 21
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RUNE_PICKUP                               DOTA_CHAT_MESSAGE = 22
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RUNE_BOTTLE                               DOTA_CHAT_MESSAGE = 23
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INTHEBAG                                  DOTA_CHAT_MESSAGE = 24
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SECRETSHOP                                DOTA_CHAT_MESSAGE = 25
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEM_AUTOPURCHASED                        DOTA_CHAT_MESSAGE = 26
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEMS_COMBINED                            DOTA_CHAT_MESSAGE = 27
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SUPER_CREEPS                              DOTA_CHAT_MESSAGE = 28
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANT_USE_ACTION_ITEM                      DOTA_CHAT_MESSAGE = 29
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CHARGES_EXHAUSTED                         DOTA_CHAT_MESSAGE = 30
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANTPAUSE                                 DOTA_CHAT_MESSAGE = 31
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_NOPAUSESLEFT                              DOTA_CHAT_MESSAGE = 32
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANTPAUSEYET                              DOTA_CHAT_MESSAGE = 33
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PAUSED                                    DOTA_CHAT_MESSAGE = 34
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_UNPAUSE_COUNTDOWN                         DOTA_CHAT_MESSAGE = 35
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_UNPAUSED                                  DOTA_CHAT_MESSAGE = 36
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_AUTO_UNPAUSED                             DOTA_CHAT_MESSAGE = 37
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_YOUPAUSED                                 DOTA_CHAT_MESSAGE = 38
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CANTUNPAUSETEAM                           DOTA_CHAT_MESSAGE = 39
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_VOICE_TEXT_BANNED                         DOTA_CHAT_MESSAGE = 41
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME             DOTA_CHAT_MESSAGE = 42
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_REPORT_REMINDER                           DOTA_CHAT_MESSAGE = 43
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ECON_ITEM                                 DOTA_CHAT_MESSAGE = 44
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_TAUNT                                     DOTA_CHAT_MESSAGE = 45
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RANDOM                                    DOTA_CHAT_MESSAGE = 46
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RD_TURN                                   DOTA_CHAT_MESSAGE = 47
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DROP_RATE_BONUS                           DOTA_CHAT_MESSAGE = 49
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_NO_BATTLE_POINTS                          DOTA_CHAT_MESSAGE = 50
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DENIED_AEGIS                              DOTA_CHAT_MESSAGE = 51
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INFORMATIONAL                             DOTA_CHAT_MESSAGE = 52
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_AEGIS_STOLEN                              DOTA_CHAT_MESSAGE = 53
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ROSHAN_CANDY                              DOTA_CHAT_MESSAGE = 54
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ITEM_GIFTED                               DOTA_CHAT_MESSAGE = 55
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL                    DOTA_CHAT_MESSAGE = 56
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED                   DOTA_CHAT_MESSAGE = 57
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED                    DOTA_CHAT_MESSAGE = 58
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_HOLDOUT_WALL_FINISHED                     DOTA_CHAT_MESSAGE = 59
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO                  DOTA_CHAT_MESSAGE = 62
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION          DOTA_CHAT_MESSAGE = 63
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_DISCONNECT_LIMITED_HERO                   DOTA_CHAT_MESSAGE = 64
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION        DOTA_CHAT_MESSAGE = 65
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS               DOTA_CHAT_MESSAGE = 66
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE          DOTA_CHAT_MESSAGE = 67
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT_AFK                           DOTA_CHAT_MESSAGE = 73
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG         DOTA_CHAT_MESSAGE = 74
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_ABANDONED                          DOTA_CHAT_MESSAGE = 75
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_ABANDONED_AFK                      DOTA_CHAT_MESSAGE = 76
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG    DOTA_CHAT_MESSAGE = 77
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED                        DOTA_CHAT_MESSAGE = 78
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED                 DOTA_CHAT_MESSAGE = 79
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK                DOTA_CHAT_MESSAGE = 80
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED         DOTA_CHAT_MESSAGE = 81
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON                  DOTA_CHAT_MESSAGE = 82
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS DOTA_CHAT_MESSAGE = 83
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY   DOTA_CHAT_MESSAGE = 84
	DOTA_CHAT_MESSAGE_CHAT_MESSAGE_COMPENDIUM_LEVEL                          DOTA_CHAT_MESSAGE = 85
)

var DOTA_CHAT_MESSAGE_name = map[int32]string{
	-1: "CHAT_MESSAGE_INVALID",
	0:  "CHAT_MESSAGE_HERO_KILL",
	1:  "CHAT_MESSAGE_HERO_DENY",
	2:  "CHAT_MESSAGE_BARRACKS_KILL",
	3:  "CHAT_MESSAGE_TOWER_KILL",
	4:  "CHAT_MESSAGE_TOWER_DENY",
	5:  "CHAT_MESSAGE_FIRSTBLOOD",
	6:  "CHAT_MESSAGE_STREAK_KILL",
	7:  "CHAT_MESSAGE_BUYBACK",
	8:  "CHAT_MESSAGE_AEGIS",
	9:  "CHAT_MESSAGE_ROSHAN_KILL",
	10: "CHAT_MESSAGE_COURIER_LOST",
	11: "CHAT_MESSAGE_COURIER_RESPAWNED",
	12: "CHAT_MESSAGE_GLYPH_USED",
	13: "CHAT_MESSAGE_ITEM_PURCHASE",
	14: "CHAT_MESSAGE_CONNECT",
	15: "CHAT_MESSAGE_DISCONNECT",
	16: "CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT",
	17: "CHAT_MESSAGE_DISCONNECT_TIME_REMAINING",
	18: "CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL",
	19: "CHAT_MESSAGE_RECONNECT",
	20: "CHAT_MESSAGE_PLAYER_LEFT",
	21: "CHAT_MESSAGE_SAFE_TO_LEAVE",
	22: "CHAT_MESSAGE_RUNE_PICKUP",
	23: "CHAT_MESSAGE_RUNE_BOTTLE",
	24: "CHAT_MESSAGE_INTHEBAG",
	25: "CHAT_MESSAGE_SECRETSHOP",
	26: "CHAT_MESSAGE_ITEM_AUTOPURCHASED",
	27: "CHAT_MESSAGE_ITEMS_COMBINED",
	28: "CHAT_MESSAGE_SUPER_CREEPS",
	29: "CHAT_MESSAGE_CANT_USE_ACTION_ITEM",
	30: "CHAT_MESSAGE_CHARGES_EXHAUSTED",
	31: "CHAT_MESSAGE_CANTPAUSE",
	32: "CHAT_MESSAGE_NOPAUSESLEFT",
	33: "CHAT_MESSAGE_CANTPAUSEYET",
	34: "CHAT_MESSAGE_PAUSED",
	35: "CHAT_MESSAGE_UNPAUSE_COUNTDOWN",
	36: "CHAT_MESSAGE_UNPAUSED",
	37: "CHAT_MESSAGE_AUTO_UNPAUSED",
	38: "CHAT_MESSAGE_YOUPAUSED",
	39: "CHAT_MESSAGE_CANTUNPAUSETEAM",
	41: "CHAT_MESSAGE_VOICE_TEXT_BANNED",
	42: "CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME",
	43: "CHAT_MESSAGE_REPORT_REMINDER",
	44: "CHAT_MESSAGE_ECON_ITEM",
	45: "CHAT_MESSAGE_TAUNT",
	46: "CHAT_MESSAGE_RANDOM",
	47: "CHAT_MESSAGE_RD_TURN",
	49: "CHAT_MESSAGE_DROP_RATE_BONUS",
	50: "CHAT_MESSAGE_NO_BATTLE_POINTS",
	51: "CHAT_MESSAGE_DENIED_AEGIS",
	52: "CHAT_MESSAGE_INFORMATIONAL",
	53: "CHAT_MESSAGE_AEGIS_STOLEN",
	54: "CHAT_MESSAGE_ROSHAN_CANDY",
	55: "CHAT_MESSAGE_ITEM_GIFTED",
	56: "CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL",
	57: "CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED",
	58: "CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED",
	59: "CHAT_MESSAGE_HOLDOUT_WALL_FINISHED",
	62: "CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO",
	63: "CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION",
	64: "CHAT_MESSAGE_DISCONNECT_LIMITED_HERO",
	65: "CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION",
	66: "CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS",
	67: "CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE",
	73: "CHAT_MESSAGE_PLAYER_LEFT_AFK",
	74: "CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG",
	75: "CHAT_MESSAGE_PLAYER_ABANDONED",
	76: "CHAT_MESSAGE_PLAYER_ABANDONED_AFK",
	77: "CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG",
	78: "CHAT_MESSAGE_WILL_NOT_BE_SCORED",
	79: "CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED",
	80: "CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK",
	81: "CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED",
	82: "CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON",
	83: "CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS",
	84: "CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY",
	85: "CHAT_MESSAGE_COMPENDIUM_LEVEL",
}
var DOTA_CHAT_MESSAGE_value = map[string]int32{
	"CHAT_MESSAGE_INVALID":                                   -1,
	"CHAT_MESSAGE_HERO_KILL":                                 0,
	"CHAT_MESSAGE_HERO_DENY":                                 1,
	"CHAT_MESSAGE_BARRACKS_KILL":                             2,
	"CHAT_MESSAGE_TOWER_KILL":                                3,
	"CHAT_MESSAGE_TOWER_DENY":                                4,
	"CHAT_MESSAGE_FIRSTBLOOD":                                5,
	"CHAT_MESSAGE_STREAK_KILL":                               6,
	"CHAT_MESSAGE_BUYBACK":                                   7,
	"CHAT_MESSAGE_AEGIS":                                     8,
	"CHAT_MESSAGE_ROSHAN_KILL":                               9,
	"CHAT_MESSAGE_COURIER_LOST":                              10,
	"CHAT_MESSAGE_COURIER_RESPAWNED":                         11,
	"CHAT_MESSAGE_GLYPH_USED":                                12,
	"CHAT_MESSAGE_ITEM_PURCHASE":                             13,
	"CHAT_MESSAGE_CONNECT":                                   14,
	"CHAT_MESSAGE_DISCONNECT":                                15,
	"CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT":             16,
	"CHAT_MESSAGE_DISCONNECT_TIME_REMAINING":                 17,
	"CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL":          18,
	"CHAT_MESSAGE_RECONNECT":                                 19,
	"CHAT_MESSAGE_PLAYER_LEFT":                               20,
	"CHAT_MESSAGE_SAFE_TO_LEAVE":                             21,
	"CHAT_MESSAGE_RUNE_PICKUP":                               22,
	"CHAT_MESSAGE_RUNE_BOTTLE":                               23,
	"CHAT_MESSAGE_INTHEBAG":                                  24,
	"CHAT_MESSAGE_SECRETSHOP":                                25,
	"CHAT_MESSAGE_ITEM_AUTOPURCHASED":                        26,
	"CHAT_MESSAGE_ITEMS_COMBINED":                            27,
	"CHAT_MESSAGE_SUPER_CREEPS":                              28,
	"CHAT_MESSAGE_CANT_USE_ACTION_ITEM":                      29,
	"CHAT_MESSAGE_CHARGES_EXHAUSTED":                         30,
	"CHAT_MESSAGE_CANTPAUSE":                                 31,
	"CHAT_MESSAGE_NOPAUSESLEFT":                              32,
	"CHAT_MESSAGE_CANTPAUSEYET":                              33,
	"CHAT_MESSAGE_PAUSED":                                    34,
	"CHAT_MESSAGE_UNPAUSE_COUNTDOWN":                         35,
	"CHAT_MESSAGE_UNPAUSED":                                  36,
	"CHAT_MESSAGE_AUTO_UNPAUSED":                             37,
	"CHAT_MESSAGE_YOUPAUSED":                                 38,
	"CHAT_MESSAGE_CANTUNPAUSETEAM":                           39,
	"CHAT_MESSAGE_VOICE_TEXT_BANNED":                         41,
	"CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME":             42,
	"CHAT_MESSAGE_REPORT_REMINDER":                           43,
	"CHAT_MESSAGE_ECON_ITEM":                                 44,
	"CHAT_MESSAGE_TAUNT":                                     45,
	"CHAT_MESSAGE_RANDOM":                                    46,
	"CHAT_MESSAGE_RD_TURN":                                   47,
	"CHAT_MESSAGE_DROP_RATE_BONUS":                           49,
	"CHAT_MESSAGE_NO_BATTLE_POINTS":                          50,
	"CHAT_MESSAGE_DENIED_AEGIS":                              51,
	"CHAT_MESSAGE_INFORMATIONAL":                             52,
	"CHAT_MESSAGE_AEGIS_STOLEN":                              53,
	"CHAT_MESSAGE_ROSHAN_CANDY":                              54,
	"CHAT_MESSAGE_ITEM_GIFTED":                               55,
	"CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL":                    56,
	"CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED":                   57,
	"CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED":                    58,
	"CHAT_MESSAGE_HOLDOUT_WALL_FINISHED":                     59,
	"CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO":                  62,
	"CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION":          63,
	"CHAT_MESSAGE_DISCONNECT_LIMITED_HERO":                   64,
	"CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION":        65,
	"CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS":               66,
	"CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE":          67,
	"CHAT_MESSAGE_PLAYER_LEFT_AFK":                           73,
	"CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG":         74,
	"CHAT_MESSAGE_PLAYER_ABANDONED":                          75,
	"CHAT_MESSAGE_PLAYER_ABANDONED_AFK":                      76,
	"CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG":    77,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED":                        78,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED":                 79,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK":                80,
	"CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED":         81,
	"CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON":                  82,
	"CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS": 83,
	"CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY":   84,
	"CHAT_MESSAGE_COMPENDIUM_LEVEL":                          85,
}

func (x DOTA_CHAT_MESSAGE) Enum() *DOTA_CHAT_MESSAGE {
	p := new(DOTA_CHAT_MESSAGE)
	*p = x
	return p
}
func (x DOTA_CHAT_MESSAGE) String() string {
	return proto.EnumName(DOTA_CHAT_MESSAGE_name, int32(x))
}
func (x *DOTA_CHAT_MESSAGE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_CHAT_MESSAGE_value, data, "DOTA_CHAT_MESSAGE")
	if err != nil {
		return err
	}
	*x = DOTA_CHAT_MESSAGE(value)
	return nil
}

type DOTA_NO_BATTLE_POINTS_REASONS int32

const (
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_WRONG_LOBBY_TYPE DOTA_NO_BATTLE_POINTS_REASONS = 1
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_PRACTICE_BOTS    DOTA_NO_BATTLE_POINTS_REASONS = 2
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_CHEATS_ENABLED   DOTA_NO_BATTLE_POINTS_REASONS = 3
	DOTA_NO_BATTLE_POINTS_REASONS_NO_BATTLE_POINTS_LOW_PRIORITY     DOTA_NO_BATTLE_POINTS_REASONS = 4
)

var DOTA_NO_BATTLE_POINTS_REASONS_name = map[int32]string{
	1: "NO_BATTLE_POINTS_WRONG_LOBBY_TYPE",
	2: "NO_BATTLE_POINTS_PRACTICE_BOTS",
	3: "NO_BATTLE_POINTS_CHEATS_ENABLED",
	4: "NO_BATTLE_POINTS_LOW_PRIORITY",
}
var DOTA_NO_BATTLE_POINTS_REASONS_value = map[string]int32{
	"NO_BATTLE_POINTS_WRONG_LOBBY_TYPE": 1,
	"NO_BATTLE_POINTS_PRACTICE_BOTS":    2,
	"NO_BATTLE_POINTS_CHEATS_ENABLED":   3,
	"NO_BATTLE_POINTS_LOW_PRIORITY":     4,
}

func (x DOTA_NO_BATTLE_POINTS_REASONS) Enum() *DOTA_NO_BATTLE_POINTS_REASONS {
	p := new(DOTA_NO_BATTLE_POINTS_REASONS)
	*p = x
	return p
}
func (x DOTA_NO_BATTLE_POINTS_REASONS) String() string {
	return proto.EnumName(DOTA_NO_BATTLE_POINTS_REASONS_name, int32(x))
}
func (x *DOTA_NO_BATTLE_POINTS_REASONS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_NO_BATTLE_POINTS_REASONS_value, data, "DOTA_NO_BATTLE_POINTS_REASONS")
	if err != nil {
		return err
	}
	*x = DOTA_NO_BATTLE_POINTS_REASONS(value)
	return nil
}

type DOTA_CHAT_INFORMATIONAL int32

const (
	DOTA_CHAT_INFORMATIONAL_INFO_COOP_BATTLE_POINTS_RULES           DOTA_CHAT_INFORMATIONAL = 1
	DOTA_CHAT_INFORMATIONAL_INFO_FROSTIVUS_ABANDON_REMINDER         DOTA_CHAT_INFORMATIONAL = 2
	DOTA_CHAT_INFORMATIONAL_INFO_RANKED_REMINDER                    DOTA_CHAT_INFORMATIONAL = 3
	DOTA_CHAT_INFORMATIONAL_INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER DOTA_CHAT_INFORMATIONAL = 4
)

var DOTA_CHAT_INFORMATIONAL_name = map[int32]string{
	1: "INFO_COOP_BATTLE_POINTS_RULES",
	2: "INFO_FROSTIVUS_ABANDON_REMINDER",
	3: "INFO_RANKED_REMINDER",
	4: "INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER",
}
var DOTA_CHAT_INFORMATIONAL_value = map[string]int32{
	"INFO_COOP_BATTLE_POINTS_RULES":           1,
	"INFO_FROSTIVUS_ABANDON_REMINDER":         2,
	"INFO_RANKED_REMINDER":                    3,
	"INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER": 4,
}

func (x DOTA_CHAT_INFORMATIONAL) Enum() *DOTA_CHAT_INFORMATIONAL {
	p := new(DOTA_CHAT_INFORMATIONAL)
	*p = x
	return p
}
func (x DOTA_CHAT_INFORMATIONAL) String() string {
	return proto.EnumName(DOTA_CHAT_INFORMATIONAL_name, int32(x))
}
func (x *DOTA_CHAT_INFORMATIONAL) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_CHAT_INFORMATIONAL_value, data, "DOTA_CHAT_INFORMATIONAL")
	if err != nil {
		return err
	}
	*x = DOTA_CHAT_INFORMATIONAL(value)
	return nil
}

type DOTA_ABILITY_PING_TYPE int32

const (
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_READY    DOTA_ABILITY_PING_TYPE = 1
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_MANA     DOTA_ABILITY_PING_TYPE = 2
	DOTA_ABILITY_PING_TYPE_ABILITY_PING_COOLDOWN DOTA_ABILITY_PING_TYPE = 3
)

var DOTA_ABILITY_PING_TYPE_name = map[int32]string{
	1: "ABILITY_PING_READY",
	2: "ABILITY_PING_MANA",
	3: "ABILITY_PING_COOLDOWN",
}
var DOTA_ABILITY_PING_TYPE_value = map[string]int32{
	"ABILITY_PING_READY":    1,
	"ABILITY_PING_MANA":     2,
	"ABILITY_PING_COOLDOWN": 3,
}

func (x DOTA_ABILITY_PING_TYPE) Enum() *DOTA_ABILITY_PING_TYPE {
	p := new(DOTA_ABILITY_PING_TYPE)
	*p = x
	return p
}
func (x DOTA_ABILITY_PING_TYPE) String() string {
	return proto.EnumName(DOTA_ABILITY_PING_TYPE_name, int32(x))
}
func (x *DOTA_ABILITY_PING_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_ABILITY_PING_TYPE_value, data, "DOTA_ABILITY_PING_TYPE")
	if err != nil {
		return err
	}
	*x = DOTA_ABILITY_PING_TYPE(value)
	return nil
}

type DOTA_COMBATLOG_TYPES int32

const (
	DOTA_COMBATLOG_TYPES_DOTA_COMBATLOG_DAMAGE          DOTA_COMBATLOG_TYPES = 0
	DOTA_COMBATLOG_TYPES_DOTA_COMBATLOG_HEAL            DOTA_COMBATLOG_TYPES = 1
	DOTA_COMBATLOG_TYPES_DOTA_COMBATLOG_MODIFIER_ADD    DOTA_COMBATLOG_TYPES = 2
	DOTA_COMBATLOG_TYPES_DOTA_COMBATLOG_MODIFIER_REMOVE DOTA_COMBATLOG_TYPES = 3
	DOTA_COMBATLOG_TYPES_DOTA_COMBATLOG_DEATH           DOTA_COMBATLOG_TYPES = 4
)

var DOTA_COMBATLOG_TYPES_name = map[int32]string{
	0: "DOTA_COMBATLOG_DAMAGE",
	1: "DOTA_COMBATLOG_HEAL",
	2: "DOTA_COMBATLOG_MODIFIER_ADD",
	3: "DOTA_COMBATLOG_MODIFIER_REMOVE",
	4: "DOTA_COMBATLOG_DEATH",
}
var DOTA_COMBATLOG_TYPES_value = map[string]int32{
	"DOTA_COMBATLOG_DAMAGE":          0,
	"DOTA_COMBATLOG_HEAL":            1,
	"DOTA_COMBATLOG_MODIFIER_ADD":    2,
	"DOTA_COMBATLOG_MODIFIER_REMOVE": 3,
	"DOTA_COMBATLOG_DEATH":           4,
}

func (x DOTA_COMBATLOG_TYPES) Enum() *DOTA_COMBATLOG_TYPES {
	p := new(DOTA_COMBATLOG_TYPES)
	*p = x
	return p
}
func (x DOTA_COMBATLOG_TYPES) String() string {
	return proto.EnumName(DOTA_COMBATLOG_TYPES_name, int32(x))
}
func (x *DOTA_COMBATLOG_TYPES) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_COMBATLOG_TYPES_value, data, "DOTA_COMBATLOG_TYPES")
	if err != nil {
		return err
	}
	*x = DOTA_COMBATLOG_TYPES(value)
	return nil
}

type EDotaEntityMessages int32

const (
	EDotaEntityMessages_DOTA_UNIT_SPEECH                  EDotaEntityMessages = 0
	EDotaEntityMessages_DOTA_UNIT_SPEECH_MUTE             EDotaEntityMessages = 1
	EDotaEntityMessages_DOTA_UNIT_ADD_GESTURE             EDotaEntityMessages = 2
	EDotaEntityMessages_DOTA_UNIT_REMOVE_GESTURE          EDotaEntityMessages = 3
	EDotaEntityMessages_DOTA_UNIT_REMOVE_ALL_GESTURES     EDotaEntityMessages = 4
	EDotaEntityMessages_DOTA_UNIT_FADE_GESTURE            EDotaEntityMessages = 6
	EDotaEntityMessages_DOTA_UNIT_SPEECH_CLIENTSIDE_RULES EDotaEntityMessages = 7
)

var EDotaEntityMessages_name = map[int32]string{
	0: "DOTA_UNIT_SPEECH",
	1: "DOTA_UNIT_SPEECH_MUTE",
	2: "DOTA_UNIT_ADD_GESTURE",
	3: "DOTA_UNIT_REMOVE_GESTURE",
	4: "DOTA_UNIT_REMOVE_ALL_GESTURES",
	6: "DOTA_UNIT_FADE_GESTURE",
	7: "DOTA_UNIT_SPEECH_CLIENTSIDE_RULES",
}
var EDotaEntityMessages_value = map[string]int32{
	"DOTA_UNIT_SPEECH":                  0,
	"DOTA_UNIT_SPEECH_MUTE":             1,
	"DOTA_UNIT_ADD_GESTURE":             2,
	"DOTA_UNIT_REMOVE_GESTURE":          3,
	"DOTA_UNIT_REMOVE_ALL_GESTURES":     4,
	"DOTA_UNIT_FADE_GESTURE":            6,
	"DOTA_UNIT_SPEECH_CLIENTSIDE_RULES": 7,
}

func (x EDotaEntityMessages) Enum() *EDotaEntityMessages {
	p := new(EDotaEntityMessages)
	*p = x
	return p
}
func (x EDotaEntityMessages) String() string {
	return proto.EnumName(EDotaEntityMessages_name, int32(x))
}
func (x *EDotaEntityMessages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EDotaEntityMessages_value, data, "EDotaEntityMessages")
	if err != nil {
		return err
	}
	*x = EDotaEntityMessages(value)
	return nil
}

type DOTA_PARTICLE_MESSAGE int32

const (
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_CREATE                          DOTA_PARTICLE_MESSAGE = 0
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_UPDATE                          DOTA_PARTICLE_MESSAGE = 1
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD                  DOTA_PARTICLE_MESSAGE = 2
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION              DOTA_PARTICLE_MESSAGE = 3
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK                 DOTA_PARTICLE_MESSAGE = 4
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT                      DOTA_PARTICLE_MESSAGE = 5
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET                   DOTA_PARTICLE_MESSAGE = 6
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_DESTROY                         DOTA_PARTICLE_MESSAGE = 7
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING               DOTA_PARTICLE_MESSAGE = 8
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_RELEASE                         DOTA_PARTICLE_MESSAGE = 9
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_LATENCY                         DOTA_PARTICLE_MESSAGE = 10
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW                     DOTA_PARTICLE_MESSAGE = 11
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_FROZEN                          DOTA_PARTICLE_MESSAGE = 12
	DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT DOTA_PARTICLE_MESSAGE = 13
)

var DOTA_PARTICLE_MESSAGE_name = map[int32]string{
	0:  "DOTA_PARTICLE_MANAGER_EVENT_CREATE",
	1:  "DOTA_PARTICLE_MANAGER_EVENT_UPDATE",
	2:  "DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD",
	3:  "DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION",
	4:  "DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK",
	5:  "DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT",
	6:  "DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET",
	7:  "DOTA_PARTICLE_MANAGER_EVENT_DESTROY",
	8:  "DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING",
	9:  "DOTA_PARTICLE_MANAGER_EVENT_RELEASE",
	10: "DOTA_PARTICLE_MANAGER_EVENT_LATENCY",
	11: "DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW",
	12: "DOTA_PARTICLE_MANAGER_EVENT_FROZEN",
	13: "DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT",
}
var DOTA_PARTICLE_MESSAGE_value = map[string]int32{
	"DOTA_PARTICLE_MANAGER_EVENT_CREATE":                          0,
	"DOTA_PARTICLE_MANAGER_EVENT_UPDATE":                          1,
	"DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD":                  2,
	"DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION":              3,
	"DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK":                 4,
	"DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT":                      5,
	"DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET":                   6,
	"DOTA_PARTICLE_MANAGER_EVENT_DESTROY":                         7,
	"DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING":               8,
	"DOTA_PARTICLE_MANAGER_EVENT_RELEASE":                         9,
	"DOTA_PARTICLE_MANAGER_EVENT_LATENCY":                         10,
	"DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW":                     11,
	"DOTA_PARTICLE_MANAGER_EVENT_FROZEN":                          12,
	"DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT": 13,
}

func (x DOTA_PARTICLE_MESSAGE) Enum() *DOTA_PARTICLE_MESSAGE {
	p := new(DOTA_PARTICLE_MESSAGE)
	*p = x
	return p
}
func (x DOTA_PARTICLE_MESSAGE) String() string {
	return proto.EnumName(DOTA_PARTICLE_MESSAGE_name, int32(x))
}
func (x *DOTA_PARTICLE_MESSAGE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_PARTICLE_MESSAGE_value, data, "DOTA_PARTICLE_MESSAGE")
	if err != nil {
		return err
	}
	*x = DOTA_PARTICLE_MESSAGE(value)
	return nil
}

type DOTA_OVERHEAD_ALERT int32

const (
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_GOLD                DOTA_OVERHEAD_ALERT = 0
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_DENY                DOTA_OVERHEAD_ALERT = 1
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_CRITICAL            DOTA_OVERHEAD_ALERT = 2
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_XP                  DOTA_OVERHEAD_ALERT = 3
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BONUS_SPELL_DAMAGE  DOTA_OVERHEAD_ALERT = 4
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MISS                DOTA_OVERHEAD_ALERT = 5
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_DAMAGE              DOTA_OVERHEAD_ALERT = 6
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_EVADE               DOTA_OVERHEAD_ALERT = 7
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BLOCK               DOTA_OVERHEAD_ALERT = 8
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_BONUS_POISON_DAMAGE DOTA_OVERHEAD_ALERT = 9
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_HEAL                DOTA_OVERHEAD_ALERT = 10
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MANA_ADD            DOTA_OVERHEAD_ALERT = 11
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_MANA_LOSS           DOTA_OVERHEAD_ALERT = 12
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_LAST_HIT_EARLY      DOTA_OVERHEAD_ALERT = 13
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_LAST_HIT_CLOSE      DOTA_OVERHEAD_ALERT = 14
	DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_LAST_HIT_MISS       DOTA_OVERHEAD_ALERT = 15
)

var DOTA_OVERHEAD_ALERT_name = map[int32]string{
	0:  "OVERHEAD_ALERT_GOLD",
	1:  "OVERHEAD_ALERT_DENY",
	2:  "OVERHEAD_ALERT_CRITICAL",
	3:  "OVERHEAD_ALERT_XP",
	4:  "OVERHEAD_ALERT_BONUS_SPELL_DAMAGE",
	5:  "OVERHEAD_ALERT_MISS",
	6:  "OVERHEAD_ALERT_DAMAGE",
	7:  "OVERHEAD_ALERT_EVADE",
	8:  "OVERHEAD_ALERT_BLOCK",
	9:  "OVERHEAD_ALERT_BONUS_POISON_DAMAGE",
	10: "OVERHEAD_ALERT_HEAL",
	11: "OVERHEAD_ALERT_MANA_ADD",
	12: "OVERHEAD_ALERT_MANA_LOSS",
	13: "OVERHEAD_ALERT_LAST_HIT_EARLY",
	14: "OVERHEAD_ALERT_LAST_HIT_CLOSE",
	15: "OVERHEAD_ALERT_LAST_HIT_MISS",
}
var DOTA_OVERHEAD_ALERT_value = map[string]int32{
	"OVERHEAD_ALERT_GOLD":                0,
	"OVERHEAD_ALERT_DENY":                1,
	"OVERHEAD_ALERT_CRITICAL":            2,
	"OVERHEAD_ALERT_XP":                  3,
	"OVERHEAD_ALERT_BONUS_SPELL_DAMAGE":  4,
	"OVERHEAD_ALERT_MISS":                5,
	"OVERHEAD_ALERT_DAMAGE":              6,
	"OVERHEAD_ALERT_EVADE":               7,
	"OVERHEAD_ALERT_BLOCK":               8,
	"OVERHEAD_ALERT_BONUS_POISON_DAMAGE": 9,
	"OVERHEAD_ALERT_HEAL":                10,
	"OVERHEAD_ALERT_MANA_ADD":            11,
	"OVERHEAD_ALERT_MANA_LOSS":           12,
	"OVERHEAD_ALERT_LAST_HIT_EARLY":      13,
	"OVERHEAD_ALERT_LAST_HIT_CLOSE":      14,
	"OVERHEAD_ALERT_LAST_HIT_MISS":       15,
}

func (x DOTA_OVERHEAD_ALERT) Enum() *DOTA_OVERHEAD_ALERT {
	p := new(DOTA_OVERHEAD_ALERT)
	*p = x
	return p
}
func (x DOTA_OVERHEAD_ALERT) String() string {
	return proto.EnumName(DOTA_OVERHEAD_ALERT_name, int32(x))
}
func (x *DOTA_OVERHEAD_ALERT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_OVERHEAD_ALERT_value, data, "DOTA_OVERHEAD_ALERT")
	if err != nil {
		return err
	}
	*x = DOTA_OVERHEAD_ALERT(value)
	return nil
}

type CDOTAResponseQuerySerialized_Fact_ValueType int32

const (
	CDOTAResponseQuerySerialized_Fact_NUMERIC CDOTAResponseQuerySerialized_Fact_ValueType = 1
	CDOTAResponseQuerySerialized_Fact_STRING  CDOTAResponseQuerySerialized_Fact_ValueType = 2
)

var CDOTAResponseQuerySerialized_Fact_ValueType_name = map[int32]string{
	1: "NUMERIC",
	2: "STRING",
}
var CDOTAResponseQuerySerialized_Fact_ValueType_value = map[string]int32{
	"NUMERIC": 1,
	"STRING":  2,
}

func (x CDOTAResponseQuerySerialized_Fact_ValueType) Enum() *CDOTAResponseQuerySerialized_Fact_ValueType {
	p := new(CDOTAResponseQuerySerialized_Fact_ValueType)
	*p = x
	return p
}
func (x CDOTAResponseQuerySerialized_Fact_ValueType) String() string {
	return proto.EnumName(CDOTAResponseQuerySerialized_Fact_ValueType_name, int32(x))
}
func (x *CDOTAResponseQuerySerialized_Fact_ValueType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CDOTAResponseQuerySerialized_Fact_ValueType_value, data, "CDOTAResponseQuerySerialized_Fact_ValueType")
	if err != nil {
		return err
	}
	*x = CDOTAResponseQuerySerialized_Fact_ValueType(value)
	return nil
}

type CDOTAUserMsg_AIDebugLine struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AIDebugLine) Reset()         { *m = CDOTAUserMsg_AIDebugLine{} }
func (m *CDOTAUserMsg_AIDebugLine) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AIDebugLine) ProtoMessage()    {}

func (m *CDOTAUserMsg_AIDebugLine) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CDOTAUserMsg_Ping struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_Ping) Reset()         { *m = CDOTAUserMsg_Ping{} }
func (m *CDOTAUserMsg_Ping) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_Ping) ProtoMessage()    {}

func (m *CDOTAUserMsg_Ping) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CDOTAUserMsg_SwapVerify struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SwapVerify) Reset()         { *m = CDOTAUserMsg_SwapVerify{} }
func (m *CDOTAUserMsg_SwapVerify) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SwapVerify) ProtoMessage()    {}

func (m *CDOTAUserMsg_SwapVerify) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAUserMsg_ChatEvent struct {
	Type             *DOTA_CHAT_MESSAGE `protobuf:"varint,1,req,name=type,enum=dota.DOTA_CHAT_MESSAGE,def=-1" json:"type,omitempty"`
	Value            *uint32            `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	Playerid_1       *int32             `protobuf:"zigzag32,3,opt,name=playerid_1,def=-1" json:"playerid_1,omitempty"`
	Playerid_2       *int32             `protobuf:"zigzag32,4,opt,name=playerid_2,def=-1" json:"playerid_2,omitempty"`
	Playerid_3       *int32             `protobuf:"zigzag32,5,opt,name=playerid_3,def=-1" json:"playerid_3,omitempty"`
	Playerid_4       *int32             `protobuf:"zigzag32,6,opt,name=playerid_4,def=-1" json:"playerid_4,omitempty"`
	Playerid_5       *int32             `protobuf:"zigzag32,7,opt,name=playerid_5,def=-1" json:"playerid_5,omitempty"`
	Playerid_6       *int32             `protobuf:"zigzag32,8,opt,name=playerid_6,def=-1" json:"playerid_6,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CDOTAUserMsg_ChatEvent) Reset()         { *m = CDOTAUserMsg_ChatEvent{} }
func (m *CDOTAUserMsg_ChatEvent) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ChatEvent) ProtoMessage()    {}

const Default_CDOTAUserMsg_ChatEvent_Type DOTA_CHAT_MESSAGE = DOTA_CHAT_MESSAGE_CHAT_MESSAGE_INVALID
const Default_CDOTAUserMsg_ChatEvent_Playerid_1 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_2 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_3 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_4 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_5 int32 = -1
const Default_CDOTAUserMsg_ChatEvent_Playerid_6 int32 = -1

func (m *CDOTAUserMsg_ChatEvent) GetType() DOTA_CHAT_MESSAGE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTAUserMsg_ChatEvent_Type
}

func (m *CDOTAUserMsg_ChatEvent) GetValue() uint32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_1() int32 {
	if m != nil && m.Playerid_1 != nil {
		return *m.Playerid_1
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_1
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_2() int32 {
	if m != nil && m.Playerid_2 != nil {
		return *m.Playerid_2
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_2
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_3() int32 {
	if m != nil && m.Playerid_3 != nil {
		return *m.Playerid_3
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_3
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_4() int32 {
	if m != nil && m.Playerid_4 != nil {
		return *m.Playerid_4
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_4
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_5() int32 {
	if m != nil && m.Playerid_5 != nil {
		return *m.Playerid_5
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_5
}

func (m *CDOTAUserMsg_ChatEvent) GetPlayerid_6() int32 {
	if m != nil && m.Playerid_6 != nil {
		return *m.Playerid_6
	}
	return Default_CDOTAUserMsg_ChatEvent_Playerid_6
}

type CDOTAUserMsg_CombatLogData struct {
	Type             *DOTA_COMBATLOG_TYPES `protobuf:"varint,1,opt,name=type,enum=dota.DOTA_COMBATLOG_TYPES,def=0" json:"type,omitempty"`
	TargetName       *uint32               `protobuf:"varint,2,opt,name=target_name" json:"target_name,omitempty"`
	AttackerName     *uint32               `protobuf:"varint,3,opt,name=attacker_name" json:"attacker_name,omitempty"`
	AttackerIllusion *bool                 `protobuf:"varint,4,opt,name=attacker_illusion" json:"attacker_illusion,omitempty"`
	TargetIllusion   *bool                 `protobuf:"varint,5,opt,name=target_illusion" json:"target_illusion,omitempty"`
	InflictorName    *uint32               `protobuf:"varint,6,opt,name=inflictor_name" json:"inflictor_name,omitempty"`
	Value            *int32                `protobuf:"varint,7,opt,name=value" json:"value,omitempty"`
	Health           *int32                `protobuf:"varint,8,opt,name=health" json:"health,omitempty"`
	Time             *float32              `protobuf:"fixed32,9,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CDOTAUserMsg_CombatLogData) Reset()         { *m = CDOTAUserMsg_CombatLogData{} }
func (m *CDOTAUserMsg_CombatLogData) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CombatLogData) ProtoMessage()    {}

const Default_CDOTAUserMsg_CombatLogData_Type DOTA_COMBATLOG_TYPES = DOTA_COMBATLOG_TYPES_DOTA_COMBATLOG_DAMAGE

func (m *CDOTAUserMsg_CombatLogData) GetType() DOTA_COMBATLOG_TYPES {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTAUserMsg_CombatLogData_Type
}

func (m *CDOTAUserMsg_CombatLogData) GetTargetName() uint32 {
	if m != nil && m.TargetName != nil {
		return *m.TargetName
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogData) GetAttackerName() uint32 {
	if m != nil && m.AttackerName != nil {
		return *m.AttackerName
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogData) GetAttackerIllusion() bool {
	if m != nil && m.AttackerIllusion != nil {
		return *m.AttackerIllusion
	}
	return false
}

func (m *CDOTAUserMsg_CombatLogData) GetTargetIllusion() bool {
	if m != nil && m.TargetIllusion != nil {
		return *m.TargetIllusion
	}
	return false
}

func (m *CDOTAUserMsg_CombatLogData) GetInflictorName() uint32 {
	if m != nil && m.InflictorName != nil {
		return *m.InflictorName
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogData) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogData) GetHealth() int32 {
	if m != nil && m.Health != nil {
		return *m.Health
	}
	return 0
}

func (m *CDOTAUserMsg_CombatLogData) GetTime() float32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CDOTAUserMsg_CombatLogShowDeath struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_CombatLogShowDeath) Reset()         { *m = CDOTAUserMsg_CombatLogShowDeath{} }
func (m *CDOTAUserMsg_CombatLogShowDeath) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CombatLogShowDeath) ProtoMessage()    {}

type CDOTAUserMsg_BotChat struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	Format           *string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Target           *string `protobuf:"bytes,4,opt,name=target" json:"target,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_BotChat) Reset()         { *m = CDOTAUserMsg_BotChat{} }
func (m *CDOTAUserMsg_BotChat) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BotChat) ProtoMessage()    {}

func (m *CDOTAUserMsg_BotChat) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_BotChat) GetFormat() string {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return ""
}

func (m *CDOTAUserMsg_BotChat) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_BotChat) GetTarget() string {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return ""
}

type CDOTAUserMsg_CombatHeroPositions struct {
	Index            *uint32       `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Time             *int32        `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	WorldPos         *CMsgVector2D `protobuf:"bytes,3,opt,name=world_pos" json:"world_pos,omitempty"`
	Health           *int32        `protobuf:"varint,4,opt,name=health" json:"health,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CDOTAUserMsg_CombatHeroPositions) Reset()         { *m = CDOTAUserMsg_CombatHeroPositions{} }
func (m *CDOTAUserMsg_CombatHeroPositions) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CombatHeroPositions) ProtoMessage()    {}

func (m *CDOTAUserMsg_CombatHeroPositions) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetWorldPos() *CMsgVector2D {
	if m != nil {
		return m.WorldPos
	}
	return nil
}

func (m *CDOTAUserMsg_CombatHeroPositions) GetHealth() int32 {
	if m != nil && m.Health != nil {
		return *m.Health
	}
	return 0
}

type CDOTAUserMsg_MiniKillCamInfo struct {
	Attackers        []*CDOTAUserMsg_MiniKillCamInfo_Attacker `protobuf:"bytes,1,rep,name=attackers" json:"attackers,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CDOTAUserMsg_MiniKillCamInfo) Reset()         { *m = CDOTAUserMsg_MiniKillCamInfo{} }
func (m *CDOTAUserMsg_MiniKillCamInfo) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MiniKillCamInfo) ProtoMessage()    {}

func (m *CDOTAUserMsg_MiniKillCamInfo) GetAttackers() []*CDOTAUserMsg_MiniKillCamInfo_Attacker {
	if m != nil {
		return m.Attackers
	}
	return nil
}

type CDOTAUserMsg_MiniKillCamInfo_Attacker struct {
	Attacker         *uint32                                          `protobuf:"varint,1,opt,name=attacker" json:"attacker,omitempty"`
	TotalDamage      *int32                                           `protobuf:"varint,2,opt,name=total_damage" json:"total_damage,omitempty"`
	Abilities        []*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability `protobuf:"bytes,3,rep,name=abilities" json:"abilities,omitempty"`
	XXX_unrecognized []byte                                           `json:"-"`
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) Reset()         { *m = CDOTAUserMsg_MiniKillCamInfo_Attacker{} }
func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MiniKillCamInfo_Attacker) ProtoMessage()    {}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetAttacker() uint32 {
	if m != nil && m.Attacker != nil {
		return *m.Attacker
	}
	return 0
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetTotalDamage() int32 {
	if m != nil && m.TotalDamage != nil {
		return *m.TotalDamage
	}
	return 0
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker) GetAbilities() []*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability {
	if m != nil {
		return m.Abilities
	}
	return nil
}

type CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability struct {
	Ability          *uint32 `protobuf:"varint,1,opt,name=ability" json:"ability,omitempty"`
	Damage           *int32  `protobuf:"varint,2,opt,name=damage" json:"damage,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) Reset() {
	*m = CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability{}
}
func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) ProtoMessage() {}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) GetAbility() uint32 {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return 0
}

func (m *CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability) GetDamage() int32 {
	if m != nil && m.Damage != nil {
		return *m.Damage
	}
	return 0
}

type CDOTAUserMsg_GlobalLightColor struct {
	Color            *uint32  `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_GlobalLightColor) Reset()         { *m = CDOTAUserMsg_GlobalLightColor{} }
func (m *CDOTAUserMsg_GlobalLightColor) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GlobalLightColor) ProtoMessage()    {}

func (m *CDOTAUserMsg_GlobalLightColor) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *CDOTAUserMsg_GlobalLightColor) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CDOTAUserMsg_GlobalLightDirection struct {
	Direction        *CMsgVector `protobuf:"bytes,1,opt,name=direction" json:"direction,omitempty"`
	Duration         *float32    `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_GlobalLightDirection) Reset()         { *m = CDOTAUserMsg_GlobalLightDirection{} }
func (m *CDOTAUserMsg_GlobalLightDirection) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GlobalLightDirection) ProtoMessage()    {}

func (m *CDOTAUserMsg_GlobalLightDirection) GetDirection() *CMsgVector {
	if m != nil {
		return m.Direction
	}
	return nil
}

func (m *CDOTAUserMsg_GlobalLightDirection) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CDOTAUserMsg_LocationPing struct {
	PlayerId         *uint32                `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	LocationPing     *CDOTAMsg_LocationPing `protobuf:"bytes,2,opt,name=location_ping" json:"location_ping,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CDOTAUserMsg_LocationPing) Reset()         { *m = CDOTAUserMsg_LocationPing{} }
func (m *CDOTAUserMsg_LocationPing) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_LocationPing) ProtoMessage()    {}

func (m *CDOTAUserMsg_LocationPing) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_LocationPing) GetLocationPing() *CDOTAMsg_LocationPing {
	if m != nil {
		return m.LocationPing
	}
	return nil
}

type CDOTAUserMsg_ItemAlert struct {
	PlayerId         *uint32             `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	ItemAlert        *CDOTAMsg_ItemAlert `protobuf:"bytes,2,opt,name=item_alert" json:"item_alert,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CDOTAUserMsg_ItemAlert) Reset()         { *m = CDOTAUserMsg_ItemAlert{} }
func (m *CDOTAUserMsg_ItemAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemAlert) ProtoMessage()    {}

func (m *CDOTAUserMsg_ItemAlert) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ItemAlert) GetItemAlert() *CDOTAMsg_ItemAlert {
	if m != nil {
		return m.ItemAlert
	}
	return nil
}

type CDOTAUserMsg_WillPurchaseAlert struct {
	Itemid           *int32 `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	PlayerId         *int32 `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_WillPurchaseAlert) Reset()         { *m = CDOTAUserMsg_WillPurchaseAlert{} }
func (m *CDOTAUserMsg_WillPurchaseAlert) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_WillPurchaseAlert) ProtoMessage()    {}

func (m *CDOTAUserMsg_WillPurchaseAlert) GetItemid() int32 {
	if m != nil && m.Itemid != nil {
		return *m.Itemid
	}
	return 0
}

func (m *CDOTAUserMsg_WillPurchaseAlert) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

type CDOTAUserMsg_MinimapEvent struct {
	EventType        *int32 `protobuf:"varint,1,opt,name=event_type" json:"event_type,omitempty"`
	EntityHandle     *int32 `protobuf:"varint,2,opt,name=entity_handle" json:"entity_handle,omitempty"`
	X                *int32 `protobuf:"varint,3,opt,name=x" json:"x,omitempty"`
	Y                *int32 `protobuf:"varint,4,opt,name=y" json:"y,omitempty"`
	Duration         *int32 `protobuf:"varint,5,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_MinimapEvent) Reset()         { *m = CDOTAUserMsg_MinimapEvent{} }
func (m *CDOTAUserMsg_MinimapEvent) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MinimapEvent) ProtoMessage()    {}

func (m *CDOTAUserMsg_MinimapEvent) GetEventType() int32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapEvent) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CDOTAUserMsg_MapLine struct {
	PlayerId         *int32            `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	Mapline          *CDOTAMsg_MapLine `protobuf:"bytes,2,opt,name=mapline" json:"mapline,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CDOTAUserMsg_MapLine) Reset()         { *m = CDOTAUserMsg_MapLine{} }
func (m *CDOTAUserMsg_MapLine) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MapLine) ProtoMessage()    {}

func (m *CDOTAUserMsg_MapLine) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_MapLine) GetMapline() *CDOTAMsg_MapLine {
	if m != nil {
		return m.Mapline
	}
	return nil
}

type CDOTAUserMsg_MinimapDebugPoint struct {
	Location         *CMsgVector `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
	Color            *uint32     `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	Size             *int32      `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Duration         *float32    `protobuf:"fixed32,4,opt,name=duration" json:"duration,omitempty"`
	Index            *int32      `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_MinimapDebugPoint) Reset()         { *m = CDOTAUserMsg_MinimapDebugPoint{} }
func (m *CDOTAUserMsg_MinimapDebugPoint) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_MinimapDebugPoint) ProtoMessage()    {}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetLocation() *CMsgVector {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetColor() uint32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_MinimapDebugPoint) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CDOTAUserMsg_CreateLinearProjectile struct {
	Origin           *CMsgVector   `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Velocity         *CMsgVector2D `protobuf:"bytes,2,opt,name=velocity" json:"velocity,omitempty"`
	Latency          *int32        `protobuf:"varint,3,opt,name=latency" json:"latency,omitempty"`
	Entindex         *int32        `protobuf:"varint,4,opt,name=entindex" json:"entindex,omitempty"`
	ParticleIndex    *uint64       `protobuf:"varint,5,opt,name=particle_index" json:"particle_index,omitempty"`
	Handle           *int32        `protobuf:"varint,6,opt,name=handle" json:"handle,omitempty"`
	Acceleration     *CMsgVector2D `protobuf:"bytes,7,opt,name=acceleration" json:"acceleration,omitempty"`
	MaxSpeed         *float32      `protobuf:"fixed32,8,opt,name=max_speed" json:"max_speed,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CDOTAUserMsg_CreateLinearProjectile) Reset()         { *m = CDOTAUserMsg_CreateLinearProjectile{} }
func (m *CDOTAUserMsg_CreateLinearProjectile) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CreateLinearProjectile) ProtoMessage()    {}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetOrigin() *CMsgVector {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetVelocity() *CMsgVector2D {
	if m != nil {
		return m.Velocity
	}
	return nil
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetLatency() int32 {
	if m != nil && m.Latency != nil {
		return *m.Latency
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetParticleIndex() uint64 {
	if m != nil && m.ParticleIndex != nil {
		return *m.ParticleIndex
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetAcceleration() *CMsgVector2D {
	if m != nil {
		return m.Acceleration
	}
	return nil
}

func (m *CDOTAUserMsg_CreateLinearProjectile) GetMaxSpeed() float32 {
	if m != nil && m.MaxSpeed != nil {
		return *m.MaxSpeed
	}
	return 0
}

type CDOTAUserMsg_DestroyLinearProjectile struct {
	Handle           *int32 `protobuf:"varint,1,opt,name=handle" json:"handle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_DestroyLinearProjectile) Reset()         { *m = CDOTAUserMsg_DestroyLinearProjectile{} }
func (m *CDOTAUserMsg_DestroyLinearProjectile) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_DestroyLinearProjectile) ProtoMessage()    {}

func (m *CDOTAUserMsg_DestroyLinearProjectile) GetHandle() int32 {
	if m != nil && m.Handle != nil {
		return *m.Handle
	}
	return 0
}

type CDOTAUserMsg_DodgeTrackingProjectiles struct {
	Entindex         *int32 `protobuf:"varint,1,req,name=entindex" json:"entindex,omitempty"`
	AttacksOnly      *bool  `protobuf:"varint,2,opt,name=attacks_only" json:"attacks_only,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_DodgeTrackingProjectiles) Reset()         { *m = CDOTAUserMsg_DodgeTrackingProjectiles{} }
func (m *CDOTAUserMsg_DodgeTrackingProjectiles) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_DodgeTrackingProjectiles) ProtoMessage()    {}

func (m *CDOTAUserMsg_DodgeTrackingProjectiles) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_DodgeTrackingProjectiles) GetAttacksOnly() bool {
	if m != nil && m.AttacksOnly != nil {
		return *m.AttacksOnly
	}
	return false
}

type CDOTAUserMsg_SpectatorPlayerClick struct {
	Entindex         *int32 `protobuf:"varint,1,req,name=entindex" json:"entindex,omitempty"`
	OrderType        *int32 `protobuf:"varint,2,opt,name=order_type" json:"order_type,omitempty"`
	TargetIndex      *int32 `protobuf:"varint,3,opt,name=target_index" json:"target_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) Reset()         { *m = CDOTAUserMsg_SpectatorPlayerClick{} }
func (m *CDOTAUserMsg_SpectatorPlayerClick) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SpectatorPlayerClick) ProtoMessage()    {}

func (m *CDOTAUserMsg_SpectatorPlayerClick) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) GetOrderType() int32 {
	if m != nil && m.OrderType != nil {
		return *m.OrderType
	}
	return 0
}

func (m *CDOTAUserMsg_SpectatorPlayerClick) GetTargetIndex() int32 {
	if m != nil && m.TargetIndex != nil {
		return *m.TargetIndex
	}
	return 0
}

type CDOTAUserMsg_NevermoreRequiem struct {
	EntityHandle     *int32      `protobuf:"varint,1,opt,name=entity_handle" json:"entity_handle,omitempty"`
	Lines            *int32      `protobuf:"varint,2,opt,name=lines" json:"lines,omitempty"`
	Origin           *CMsgVector `protobuf:"bytes,3,opt,name=origin" json:"origin,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_NevermoreRequiem) Reset()         { *m = CDOTAUserMsg_NevermoreRequiem{} }
func (m *CDOTAUserMsg_NevermoreRequiem) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_NevermoreRequiem) ProtoMessage()    {}

func (m *CDOTAUserMsg_NevermoreRequiem) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CDOTAUserMsg_NevermoreRequiem) GetLines() int32 {
	if m != nil && m.Lines != nil {
		return *m.Lines
	}
	return 0
}

func (m *CDOTAUserMsg_NevermoreRequiem) GetOrigin() *CMsgVector {
	if m != nil {
		return m.Origin
	}
	return nil
}

type CDOTAUserMsg_InvalidCommand struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_InvalidCommand) Reset()         { *m = CDOTAUserMsg_InvalidCommand{} }
func (m *CDOTAUserMsg_InvalidCommand) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_InvalidCommand) ProtoMessage()    {}

func (m *CDOTAUserMsg_InvalidCommand) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CDOTAUserMsg_HudError struct {
	OrderId          *int32 `protobuf:"varint,1,opt,name=order_id" json:"order_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_HudError) Reset()         { *m = CDOTAUserMsg_HudError{} }
func (m *CDOTAUserMsg_HudError) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_HudError) ProtoMessage()    {}

func (m *CDOTAUserMsg_HudError) GetOrderId() int32 {
	if m != nil && m.OrderId != nil {
		return *m.OrderId
	}
	return 0
}

type CDOTAUserMsg_SharedCooldown struct {
	Entindex         *int32   `protobuf:"varint,1,opt,name=entindex" json:"entindex,omitempty"`
	Name             *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Cooldown         *float32 `protobuf:"fixed32,3,opt,name=cooldown" json:"cooldown,omitempty"`
	NameIndex        *int32   `protobuf:"varint,4,opt,name=name_index" json:"name_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_SharedCooldown) Reset()         { *m = CDOTAUserMsg_SharedCooldown{} }
func (m *CDOTAUserMsg_SharedCooldown) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SharedCooldown) ProtoMessage()    {}

func (m *CDOTAUserMsg_SharedCooldown) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SharedCooldown) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDOTAUserMsg_SharedCooldown) GetCooldown() float32 {
	if m != nil && m.Cooldown != nil {
		return *m.Cooldown
	}
	return 0
}

func (m *CDOTAUserMsg_SharedCooldown) GetNameIndex() int32 {
	if m != nil && m.NameIndex != nil {
		return *m.NameIndex
	}
	return 0
}

type CDOTAUserMsg_SetNextAutobuyItem struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SetNextAutobuyItem) Reset()         { *m = CDOTAUserMsg_SetNextAutobuyItem{} }
func (m *CDOTAUserMsg_SetNextAutobuyItem) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SetNextAutobuyItem) ProtoMessage()    {}

func (m *CDOTAUserMsg_SetNextAutobuyItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CDOTAUserMsg_HalloweenDrops struct {
	ItemDefs         []uint32 `protobuf:"varint,1,rep,name=item_defs" json:"item_defs,omitempty"`
	PlayerIds        []uint32 `protobuf:"varint,2,rep,name=player_ids" json:"player_ids,omitempty"`
	PrizeList        *uint32  `protobuf:"varint,3,opt,name=prize_list" json:"prize_list,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_HalloweenDrops) Reset()         { *m = CDOTAUserMsg_HalloweenDrops{} }
func (m *CDOTAUserMsg_HalloweenDrops) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_HalloweenDrops) ProtoMessage()    {}

func (m *CDOTAUserMsg_HalloweenDrops) GetItemDefs() []uint32 {
	if m != nil {
		return m.ItemDefs
	}
	return nil
}

func (m *CDOTAUserMsg_HalloweenDrops) GetPlayerIds() []uint32 {
	if m != nil {
		return m.PlayerIds
	}
	return nil
}

func (m *CDOTAUserMsg_HalloweenDrops) GetPrizeList() uint32 {
	if m != nil && m.PrizeList != nil {
		return *m.PrizeList
	}
	return 0
}

type CDOTAResponseQuerySerialized struct {
	Facts            []*CDOTAResponseQuerySerialized_Fact `protobuf:"bytes,1,rep,name=facts" json:"facts,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *CDOTAResponseQuerySerialized) Reset()         { *m = CDOTAResponseQuerySerialized{} }
func (m *CDOTAResponseQuerySerialized) String() string { return proto.CompactTextString(m) }
func (*CDOTAResponseQuerySerialized) ProtoMessage()    {}

func (m *CDOTAResponseQuerySerialized) GetFacts() []*CDOTAResponseQuerySerialized_Fact {
	if m != nil {
		return m.Facts
	}
	return nil
}

type CDOTAResponseQuerySerialized_Fact struct {
	Key              *int32                                       `protobuf:"varint,1,req,name=key" json:"key,omitempty"`
	Valtype          *CDOTAResponseQuerySerialized_Fact_ValueType `protobuf:"varint,2,req,name=valtype,enum=dota.CDOTAResponseQuerySerialized_Fact_ValueType,def=1" json:"valtype,omitempty"`
	ValNumeric       *float32                                     `protobuf:"fixed32,3,opt,name=val_numeric" json:"val_numeric,omitempty"`
	ValString        *string                                      `protobuf:"bytes,4,opt,name=val_string" json:"val_string,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CDOTAResponseQuerySerialized_Fact) Reset()         { *m = CDOTAResponseQuerySerialized_Fact{} }
func (m *CDOTAResponseQuerySerialized_Fact) String() string { return proto.CompactTextString(m) }
func (*CDOTAResponseQuerySerialized_Fact) ProtoMessage()    {}

const Default_CDOTAResponseQuerySerialized_Fact_Valtype CDOTAResponseQuerySerialized_Fact_ValueType = CDOTAResponseQuerySerialized_Fact_NUMERIC

func (m *CDOTAResponseQuerySerialized_Fact) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *CDOTAResponseQuerySerialized_Fact) GetValtype() CDOTAResponseQuerySerialized_Fact_ValueType {
	if m != nil && m.Valtype != nil {
		return *m.Valtype
	}
	return Default_CDOTAResponseQuerySerialized_Fact_Valtype
}

func (m *CDOTAResponseQuerySerialized_Fact) GetValNumeric() float32 {
	if m != nil && m.ValNumeric != nil {
		return *m.ValNumeric
	}
	return 0
}

func (m *CDOTAResponseQuerySerialized_Fact) GetValString() string {
	if m != nil && m.ValString != nil {
		return *m.ValString
	}
	return ""
}

type CDOTASpeechMatchOnClient struct {
	Concept          *int32                        `protobuf:"varint,1,opt,name=concept" json:"concept,omitempty"`
	RecipientType    *int32                        `protobuf:"varint,2,opt,name=recipient_type" json:"recipient_type,omitempty"`
	Responsequery    *CDOTAResponseQuerySerialized `protobuf:"bytes,3,opt,name=responsequery" json:"responsequery,omitempty"`
	Randomseed       *int32                        `protobuf:"fixed32,4,opt,name=randomseed,def=0" json:"randomseed,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CDOTASpeechMatchOnClient) Reset()         { *m = CDOTASpeechMatchOnClient{} }
func (m *CDOTASpeechMatchOnClient) String() string { return proto.CompactTextString(m) }
func (*CDOTASpeechMatchOnClient) ProtoMessage()    {}

const Default_CDOTASpeechMatchOnClient_Randomseed int32 = 0

func (m *CDOTASpeechMatchOnClient) GetConcept() int32 {
	if m != nil && m.Concept != nil {
		return *m.Concept
	}
	return 0
}

func (m *CDOTASpeechMatchOnClient) GetRecipientType() int32 {
	if m != nil && m.RecipientType != nil {
		return *m.RecipientType
	}
	return 0
}

func (m *CDOTASpeechMatchOnClient) GetResponsequery() *CDOTAResponseQuerySerialized {
	if m != nil {
		return m.Responsequery
	}
	return nil
}

func (m *CDOTASpeechMatchOnClient) GetRandomseed() int32 {
	if m != nil && m.Randomseed != nil {
		return *m.Randomseed
	}
	return Default_CDOTASpeechMatchOnClient_Randomseed
}

type CDOTAUserMsg_UnitEvent struct {
	MsgType             *EDotaEntityMessages                  `protobuf:"varint,1,req,name=msg_type,enum=dota.EDotaEntityMessages,def=0" json:"msg_type,omitempty"`
	EntityIndex         *int32                                `protobuf:"varint,2,req,name=entity_index" json:"entity_index,omitempty"`
	Speech              *CDOTAUserMsg_UnitEvent_Speech        `protobuf:"bytes,3,opt,name=speech" json:"speech,omitempty"`
	SpeechMute          *CDOTAUserMsg_UnitEvent_SpeechMute    `protobuf:"bytes,4,opt,name=speech_mute" json:"speech_mute,omitempty"`
	AddGesture          *CDOTAUserMsg_UnitEvent_AddGesture    `protobuf:"bytes,5,opt,name=add_gesture" json:"add_gesture,omitempty"`
	RemoveGesture       *CDOTAUserMsg_UnitEvent_RemoveGesture `protobuf:"bytes,6,opt,name=remove_gesture" json:"remove_gesture,omitempty"`
	BloodImpact         *CDOTAUserMsg_UnitEvent_BloodImpact   `protobuf:"bytes,7,opt,name=blood_impact" json:"blood_impact,omitempty"`
	FadeGesture         *CDOTAUserMsg_UnitEvent_FadeGesture   `protobuf:"bytes,8,opt,name=fade_gesture" json:"fade_gesture,omitempty"`
	SpeechMatchOnClient *CDOTASpeechMatchOnClient             `protobuf:"bytes,9,opt,name=speech_match_on_client" json:"speech_match_on_client,omitempty"`
	XXX_unrecognized    []byte                                `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent) Reset()         { *m = CDOTAUserMsg_UnitEvent{} }
func (m *CDOTAUserMsg_UnitEvent) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent) ProtoMessage()    {}

const Default_CDOTAUserMsg_UnitEvent_MsgType EDotaEntityMessages = EDotaEntityMessages_DOTA_UNIT_SPEECH

func (m *CDOTAUserMsg_UnitEvent) GetMsgType() EDotaEntityMessages {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return Default_CDOTAUserMsg_UnitEvent_MsgType
}

func (m *CDOTAUserMsg_UnitEvent) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent) GetSpeech() *CDOTAUserMsg_UnitEvent_Speech {
	if m != nil {
		return m.Speech
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetSpeechMute() *CDOTAUserMsg_UnitEvent_SpeechMute {
	if m != nil {
		return m.SpeechMute
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetAddGesture() *CDOTAUserMsg_UnitEvent_AddGesture {
	if m != nil {
		return m.AddGesture
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetRemoveGesture() *CDOTAUserMsg_UnitEvent_RemoveGesture {
	if m != nil {
		return m.RemoveGesture
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetBloodImpact() *CDOTAUserMsg_UnitEvent_BloodImpact {
	if m != nil {
		return m.BloodImpact
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetFadeGesture() *CDOTAUserMsg_UnitEvent_FadeGesture {
	if m != nil {
		return m.FadeGesture
	}
	return nil
}

func (m *CDOTAUserMsg_UnitEvent) GetSpeechMatchOnClient() *CDOTASpeechMatchOnClient {
	if m != nil {
		return m.SpeechMatchOnClient
	}
	return nil
}

type CDOTAUserMsg_UnitEvent_Speech struct {
	Concept          *int32  `protobuf:"varint,1,opt,name=concept" json:"concept,omitempty"`
	Response         *string `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
	RecipientType    *int32  `protobuf:"varint,3,opt,name=recipient_type" json:"recipient_type,omitempty"`
	Level            *int32  `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Muteable         *bool   `protobuf:"varint,5,opt,name=muteable,def=0" json:"muteable,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_Speech) Reset()         { *m = CDOTAUserMsg_UnitEvent_Speech{} }
func (m *CDOTAUserMsg_UnitEvent_Speech) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_Speech) ProtoMessage()    {}

const Default_CDOTAUserMsg_UnitEvent_Speech_Muteable bool = false

func (m *CDOTAUserMsg_UnitEvent_Speech) GetConcept() int32 {
	if m != nil && m.Concept != nil {
		return *m.Concept
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetResponse() string {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return ""
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetRecipientType() int32 {
	if m != nil && m.RecipientType != nil {
		return *m.RecipientType
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_Speech) GetMuteable() bool {
	if m != nil && m.Muteable != nil {
		return *m.Muteable
	}
	return Default_CDOTAUserMsg_UnitEvent_Speech_Muteable
}

type CDOTAUserMsg_UnitEvent_SpeechMute struct {
	Delay            *float32 `protobuf:"fixed32,1,opt,name=delay,def=0.5" json:"delay,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_SpeechMute) Reset()         { *m = CDOTAUserMsg_UnitEvent_SpeechMute{} }
func (m *CDOTAUserMsg_UnitEvent_SpeechMute) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_SpeechMute) ProtoMessage()    {}

const Default_CDOTAUserMsg_UnitEvent_SpeechMute_Delay float32 = 0.5

func (m *CDOTAUserMsg_UnitEvent_SpeechMute) GetDelay() float32 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return Default_CDOTAUserMsg_UnitEvent_SpeechMute_Delay
}

type CDOTAUserMsg_UnitEvent_AddGesture struct {
	Activity         *int32   `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	Slot             *int32   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	FadeIn           *float32 `protobuf:"fixed32,3,opt,name=fade_in,def=0" json:"fade_in,omitempty"`
	FadeOut          *float32 `protobuf:"fixed32,4,opt,name=fade_out,def=0.1" json:"fade_out,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) Reset()         { *m = CDOTAUserMsg_UnitEvent_AddGesture{} }
func (m *CDOTAUserMsg_UnitEvent_AddGesture) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_AddGesture) ProtoMessage()    {}

const Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeIn float32 = 0
const Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeOut float32 = 0.1

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetFadeIn() float32 {
	if m != nil && m.FadeIn != nil {
		return *m.FadeIn
	}
	return Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeIn
}

func (m *CDOTAUserMsg_UnitEvent_AddGesture) GetFadeOut() float32 {
	if m != nil && m.FadeOut != nil {
		return *m.FadeOut
	}
	return Default_CDOTAUserMsg_UnitEvent_AddGesture_FadeOut
}

type CDOTAUserMsg_UnitEvent_RemoveGesture struct {
	Activity         *int32 `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_RemoveGesture) Reset()         { *m = CDOTAUserMsg_UnitEvent_RemoveGesture{} }
func (m *CDOTAUserMsg_UnitEvent_RemoveGesture) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_RemoveGesture) ProtoMessage()    {}

func (m *CDOTAUserMsg_UnitEvent_RemoveGesture) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

type CDOTAUserMsg_UnitEvent_BloodImpact struct {
	Scale            *int32 `protobuf:"varint,1,opt,name=scale" json:"scale,omitempty"`
	XNormal          *int32 `protobuf:"varint,2,opt,name=x_normal" json:"x_normal,omitempty"`
	YNormal          *int32 `protobuf:"varint,3,opt,name=y_normal" json:"y_normal,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) Reset()         { *m = CDOTAUserMsg_UnitEvent_BloodImpact{} }
func (m *CDOTAUserMsg_UnitEvent_BloodImpact) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_BloodImpact) ProtoMessage()    {}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) GetScale() int32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) GetXNormal() int32 {
	if m != nil && m.XNormal != nil {
		return *m.XNormal
	}
	return 0
}

func (m *CDOTAUserMsg_UnitEvent_BloodImpact) GetYNormal() int32 {
	if m != nil && m.YNormal != nil {
		return *m.YNormal
	}
	return 0
}

type CDOTAUserMsg_UnitEvent_FadeGesture struct {
	Activity         *int32 `protobuf:"varint,1,opt,name=activity" json:"activity,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UnitEvent_FadeGesture) Reset()         { *m = CDOTAUserMsg_UnitEvent_FadeGesture{} }
func (m *CDOTAUserMsg_UnitEvent_FadeGesture) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UnitEvent_FadeGesture) ProtoMessage()    {}

func (m *CDOTAUserMsg_UnitEvent_FadeGesture) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

type CDOTAUserMsg_ItemPurchased struct {
	ItemIndex        *int32 `protobuf:"varint,1,opt,name=item_index" json:"item_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ItemPurchased) Reset()         { *m = CDOTAUserMsg_ItemPurchased{} }
func (m *CDOTAUserMsg_ItemPurchased) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemPurchased) ProtoMessage()    {}

func (m *CDOTAUserMsg_ItemPurchased) GetItemIndex() int32 {
	if m != nil && m.ItemIndex != nil {
		return *m.ItemIndex
	}
	return 0
}

type CDOTAUserMsg_ItemFound struct {
	Player           *int32 `protobuf:"varint,1,opt,name=player" json:"player,omitempty"`
	Quality          *int32 `protobuf:"varint,2,opt,name=quality" json:"quality,omitempty"`
	Rarity           *int32 `protobuf:"varint,3,opt,name=rarity" json:"rarity,omitempty"`
	Method           *int32 `protobuf:"varint,4,opt,name=method" json:"method,omitempty"`
	Itemdef          *int32 `protobuf:"varint,5,opt,name=itemdef" json:"itemdef,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ItemFound) Reset()         { *m = CDOTAUserMsg_ItemFound{} }
func (m *CDOTAUserMsg_ItemFound) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ItemFound) ProtoMessage()    {}

func (m *CDOTAUserMsg_ItemFound) GetPlayer() int32 {
	if m != nil && m.Player != nil {
		return *m.Player
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetRarity() int32 {
	if m != nil && m.Rarity != nil {
		return *m.Rarity
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetMethod() int32 {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return 0
}

func (m *CDOTAUserMsg_ItemFound) GetItemdef() int32 {
	if m != nil && m.Itemdef != nil {
		return *m.Itemdef
	}
	return 0
}

type CDOTAUserMsg_ParticleManager struct {
	Type                         *DOTA_PARTICLE_MESSAGE                                     `protobuf:"varint,1,req,name=type,enum=dota.DOTA_PARTICLE_MESSAGE,def=0" json:"type,omitempty"`
	Index                        *uint32                                                    `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	ReleaseParticleIndex         *CDOTAUserMsg_ParticleManager_ReleaseParticleIndex         `protobuf:"bytes,3,opt,name=release_particle_index" json:"release_particle_index,omitempty"`
	CreateParticle               *CDOTAUserMsg_ParticleManager_CreateParticle               `protobuf:"bytes,4,opt,name=create_particle" json:"create_particle,omitempty"`
	DestroyParticle              *CDOTAUserMsg_ParticleManager_DestroyParticle              `protobuf:"bytes,5,opt,name=destroy_particle" json:"destroy_particle,omitempty"`
	DestroyParticleInvolving     *CDOTAUserMsg_ParticleManager_DestroyParticleInvolving     `protobuf:"bytes,6,opt,name=destroy_particle_involving" json:"destroy_particle_involving,omitempty"`
	UpdateParticle               *CDOTAUserMsg_ParticleManager_UpdateParticle               `protobuf:"bytes,7,opt,name=update_particle" json:"update_particle,omitempty"`
	UpdateParticleFwd            *CDOTAUserMsg_ParticleManager_UpdateParticleFwd            `protobuf:"bytes,8,opt,name=update_particle_fwd" json:"update_particle_fwd,omitempty"`
	UpdateParticleOrient         *CDOTAUserMsg_ParticleManager_UpdateParticleOrient         `protobuf:"bytes,9,opt,name=update_particle_orient" json:"update_particle_orient,omitempty"`
	UpdateParticleFallback       *CDOTAUserMsg_ParticleManager_UpdateParticleFallback       `protobuf:"bytes,10,opt,name=update_particle_fallback" json:"update_particle_fallback,omitempty"`
	UpdateParticleOffset         *CDOTAUserMsg_ParticleManager_UpdateParticleOffset         `protobuf:"bytes,11,opt,name=update_particle_offset" json:"update_particle_offset,omitempty"`
	UpdateParticleEnt            *CDOTAUserMsg_ParticleManager_UpdateParticleEnt            `protobuf:"bytes,12,opt,name=update_particle_ent" json:"update_particle_ent,omitempty"`
	UpdateParticleShouldDraw     *CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw     `protobuf:"bytes,14,opt,name=update_particle_should_draw" json:"update_particle_should_draw,omitempty"`
	UpdateParticleSetFrozen      *CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen      `protobuf:"bytes,15,opt,name=update_particle_set_frozen" json:"update_particle_set_frozen,omitempty"`
	ChangeControlPointAttachment *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment `protobuf:"bytes,16,opt,name=change_control_point_attachment" json:"change_control_point_attachment,omitempty"`
	XXX_unrecognized             []byte                                                     `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager) Reset()         { *m = CDOTAUserMsg_ParticleManager{} }
func (m *CDOTAUserMsg_ParticleManager) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ParticleManager) ProtoMessage()    {}

const Default_CDOTAUserMsg_ParticleManager_Type DOTA_PARTICLE_MESSAGE = DOTA_PARTICLE_MESSAGE_DOTA_PARTICLE_MANAGER_EVENT_CREATE

func (m *CDOTAUserMsg_ParticleManager) GetType() DOTA_PARTICLE_MESSAGE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTAUserMsg_ParticleManager_Type
}

func (m *CDOTAUserMsg_ParticleManager) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager) GetReleaseParticleIndex() *CDOTAUserMsg_ParticleManager_ReleaseParticleIndex {
	if m != nil {
		return m.ReleaseParticleIndex
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetCreateParticle() *CDOTAUserMsg_ParticleManager_CreateParticle {
	if m != nil {
		return m.CreateParticle
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetDestroyParticle() *CDOTAUserMsg_ParticleManager_DestroyParticle {
	if m != nil {
		return m.DestroyParticle
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetDestroyParticleInvolving() *CDOTAUserMsg_ParticleManager_DestroyParticleInvolving {
	if m != nil {
		return m.DestroyParticleInvolving
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticle() *CDOTAUserMsg_ParticleManager_UpdateParticle {
	if m != nil {
		return m.UpdateParticle
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleFwd() *CDOTAUserMsg_ParticleManager_UpdateParticleFwd {
	if m != nil {
		return m.UpdateParticleFwd
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleOrient() *CDOTAUserMsg_ParticleManager_UpdateParticleOrient {
	if m != nil {
		return m.UpdateParticleOrient
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleFallback() *CDOTAUserMsg_ParticleManager_UpdateParticleFallback {
	if m != nil {
		return m.UpdateParticleFallback
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleOffset() *CDOTAUserMsg_ParticleManager_UpdateParticleOffset {
	if m != nil {
		return m.UpdateParticleOffset
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleEnt() *CDOTAUserMsg_ParticleManager_UpdateParticleEnt {
	if m != nil {
		return m.UpdateParticleEnt
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleShouldDraw() *CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw {
	if m != nil {
		return m.UpdateParticleShouldDraw
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetUpdateParticleSetFrozen() *CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen {
	if m != nil {
		return m.UpdateParticleSetFrozen
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager) GetChangeControlPointAttachment() *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment {
	if m != nil {
		return m.ChangeControlPointAttachment
	}
	return nil
}

type CDOTAUserMsg_ParticleManager_ReleaseParticleIndex struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_ReleaseParticleIndex) Reset() {
	*m = CDOTAUserMsg_ParticleManager_ReleaseParticleIndex{}
}
func (m *CDOTAUserMsg_ParticleManager_ReleaseParticleIndex) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_ReleaseParticleIndex) ProtoMessage() {}

type CDOTAUserMsg_ParticleManager_CreateParticle struct {
	ParticleNameIndex *uint64 `protobuf:"fixed64,1,opt,name=particle_name_index" json:"particle_name_index,omitempty"`
	AttachType        *int32  `protobuf:"varint,2,opt,name=attach_type" json:"attach_type,omitempty"`
	EntityHandle      *int32  `protobuf:"varint,3,opt,name=entity_handle" json:"entity_handle,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_CreateParticle) Reset() {
	*m = CDOTAUserMsg_ParticleManager_CreateParticle{}
}
func (m *CDOTAUserMsg_ParticleManager_CreateParticle) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_CreateParticle) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_CreateParticle) GetParticleNameIndex() uint64 {
	if m != nil && m.ParticleNameIndex != nil {
		return *m.ParticleNameIndex
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_CreateParticle) GetAttachType() int32 {
	if m != nil && m.AttachType != nil {
		return *m.AttachType
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_CreateParticle) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

type CDOTAUserMsg_ParticleManager_DestroyParticle struct {
	DestroyImmediately *bool  `protobuf:"varint,1,opt,name=destroy_immediately" json:"destroy_immediately,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_DestroyParticle) Reset() {
	*m = CDOTAUserMsg_ParticleManager_DestroyParticle{}
}
func (m *CDOTAUserMsg_ParticleManager_DestroyParticle) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_DestroyParticle) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_DestroyParticle) GetDestroyImmediately() bool {
	if m != nil && m.DestroyImmediately != nil {
		return *m.DestroyImmediately
	}
	return false
}

type CDOTAUserMsg_ParticleManager_DestroyParticleInvolving struct {
	DestroyImmediately *bool  `protobuf:"varint,1,opt,name=destroy_immediately" json:"destroy_immediately,omitempty"`
	EntityHandle       *int32 `protobuf:"varint,3,opt,name=entity_handle" json:"entity_handle,omitempty"`
	XXX_unrecognized   []byte `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_DestroyParticleInvolving) Reset() {
	*m = CDOTAUserMsg_ParticleManager_DestroyParticleInvolving{}
}
func (m *CDOTAUserMsg_ParticleManager_DestroyParticleInvolving) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_DestroyParticleInvolving) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_DestroyParticleInvolving) GetDestroyImmediately() bool {
	if m != nil && m.DestroyImmediately != nil {
		return *m.DestroyImmediately
	}
	return false
}

func (m *CDOTAUserMsg_ParticleManager_DestroyParticleInvolving) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

type CDOTAUserMsg_ParticleManager_UpdateParticle struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point" json:"control_point,omitempty"`
	Position         *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticle) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticle{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticle) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticle) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticle) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticle) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

type CDOTAUserMsg_ParticleManager_UpdateParticleFwd struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point" json:"control_point,omitempty"`
	Forward          *CMsgVector `protobuf:"bytes,2,opt,name=forward" json:"forward,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFwd) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleFwd{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFwd) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleFwd) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFwd) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFwd) GetForward() *CMsgVector {
	if m != nil {
		return m.Forward
	}
	return nil
}

type CDOTAUserMsg_ParticleManager_UpdateParticleOrient struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point" json:"control_point,omitempty"`
	Forward          *CMsgVector `protobuf:"bytes,2,opt,name=forward" json:"forward,omitempty"`
	Right            *CMsgVector `protobuf:"bytes,3,opt,name=right" json:"right,omitempty"`
	Up               *CMsgVector `protobuf:"bytes,4,opt,name=up" json:"up,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOrient) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleOrient{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOrient) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleOrient) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOrient) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOrient) GetForward() *CMsgVector {
	if m != nil {
		return m.Forward
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOrient) GetRight() *CMsgVector {
	if m != nil {
		return m.Right
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOrient) GetUp() *CMsgVector {
	if m != nil {
		return m.Up
	}
	return nil
}

type CDOTAUserMsg_ParticleManager_UpdateParticleFallback struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point" json:"control_point,omitempty"`
	Position         *CMsgVector `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFallback) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleFallback{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFallback) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleFallback) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFallback) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleFallback) GetPosition() *CMsgVector {
	if m != nil {
		return m.Position
	}
	return nil
}

type CDOTAUserMsg_ParticleManager_UpdateParticleOffset struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point" json:"control_point,omitempty"`
	OriginOffset     *CMsgVector `protobuf:"bytes,2,opt,name=origin_offset" json:"origin_offset,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOffset) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleOffset{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOffset) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleOffset) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOffset) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleOffset) GetOriginOffset() *CMsgVector {
	if m != nil {
		return m.OriginOffset
	}
	return nil
}

type CDOTAUserMsg_ParticleManager_UpdateParticleEnt struct {
	ControlPoint     *int32      `protobuf:"varint,1,opt,name=control_point" json:"control_point,omitempty"`
	EntityHandle     *int32      `protobuf:"varint,2,opt,name=entity_handle" json:"entity_handle,omitempty"`
	AttachType       *int32      `protobuf:"varint,3,opt,name=attach_type" json:"attach_type,omitempty"`
	Attachment       *int32      `protobuf:"varint,4,opt,name=attachment" json:"attachment,omitempty"`
	FallbackPosition *CMsgVector `protobuf:"bytes,5,opt,name=fallback_position" json:"fallback_position,omitempty"`
	IncludeWearables *bool       `protobuf:"varint,6,opt,name=include_wearables" json:"include_wearables,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleEnt{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleEnt) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) GetControlPoint() int32 {
	if m != nil && m.ControlPoint != nil {
		return *m.ControlPoint
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) GetAttachType() int32 {
	if m != nil && m.AttachType != nil {
		return *m.AttachType
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) GetAttachment() int32 {
	if m != nil && m.Attachment != nil {
		return *m.Attachment
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) GetFallbackPosition() *CMsgVector {
	if m != nil {
		return m.FallbackPosition
	}
	return nil
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleEnt) GetIncludeWearables() bool {
	if m != nil && m.IncludeWearables != nil {
		return *m.IncludeWearables
	}
	return false
}

type CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen struct {
	SetFrozen        *bool  `protobuf:"varint,1,opt,name=set_frozen" json:"set_frozen,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen) GetSetFrozen() bool {
	if m != nil && m.SetFrozen != nil {
		return *m.SetFrozen
	}
	return false
}

type CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw struct {
	ShouldDraw       *bool  `protobuf:"varint,1,opt,name=should_draw" json:"should_draw,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw) Reset() {
	*m = CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw{}
}
func (m *CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw) GetShouldDraw() bool {
	if m != nil && m.ShouldDraw != nil {
		return *m.ShouldDraw
	}
	return false
}

type CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment struct {
	AttachmentOld    *int32 `protobuf:"varint,1,opt,name=attachment_old" json:"attachment_old,omitempty"`
	AttachmentNew    *int32 `protobuf:"varint,2,opt,name=attachment_new" json:"attachment_new,omitempty"`
	EntityHandle     *int32 `protobuf:"varint,3,opt,name=entity_handle" json:"entity_handle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment) Reset() {
	*m = CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment{}
}
func (m *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment) String() string {
	return proto.CompactTextString(m)
}
func (*CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment) ProtoMessage() {}

func (m *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment) GetAttachmentOld() int32 {
	if m != nil && m.AttachmentOld != nil {
		return *m.AttachmentOld
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment) GetAttachmentNew() int32 {
	if m != nil && m.AttachmentNew != nil {
		return *m.AttachmentNew
	}
	return 0
}

func (m *CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment) GetEntityHandle() int32 {
	if m != nil && m.EntityHandle != nil {
		return *m.EntityHandle
	}
	return 0
}

type CDOTAUserMsg_OverheadEvent struct {
	MessageType          *DOTA_OVERHEAD_ALERT `protobuf:"varint,1,req,name=message_type,enum=dota.DOTA_OVERHEAD_ALERT,def=0" json:"message_type,omitempty"`
	Value                *int32               `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
	TargetPlayerEntindex *int32               `protobuf:"varint,3,opt,name=target_player_entindex" json:"target_player_entindex,omitempty"`
	TargetEntindex       *int32               `protobuf:"varint,4,opt,name=target_entindex" json:"target_entindex,omitempty"`
	SourcePlayerEntindex *int32               `protobuf:"varint,5,opt,name=source_player_entindex" json:"source_player_entindex,omitempty"`
	XXX_unrecognized     []byte               `json:"-"`
}

func (m *CDOTAUserMsg_OverheadEvent) Reset()         { *m = CDOTAUserMsg_OverheadEvent{} }
func (m *CDOTAUserMsg_OverheadEvent) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_OverheadEvent) ProtoMessage()    {}

const Default_CDOTAUserMsg_OverheadEvent_MessageType DOTA_OVERHEAD_ALERT = DOTA_OVERHEAD_ALERT_OVERHEAD_ALERT_GOLD

func (m *CDOTAUserMsg_OverheadEvent) GetMessageType() DOTA_OVERHEAD_ALERT {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return Default_CDOTAUserMsg_OverheadEvent_MessageType
}

func (m *CDOTAUserMsg_OverheadEvent) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func (m *CDOTAUserMsg_OverheadEvent) GetTargetPlayerEntindex() int32 {
	if m != nil && m.TargetPlayerEntindex != nil {
		return *m.TargetPlayerEntindex
	}
	return 0
}

func (m *CDOTAUserMsg_OverheadEvent) GetTargetEntindex() int32 {
	if m != nil && m.TargetEntindex != nil {
		return *m.TargetEntindex
	}
	return 0
}

func (m *CDOTAUserMsg_OverheadEvent) GetSourcePlayerEntindex() int32 {
	if m != nil && m.SourcePlayerEntindex != nil {
		return *m.SourcePlayerEntindex
	}
	return 0
}

type CDOTAUserMsg_TutorialTipInfo struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Progress         *int32  `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_TutorialTipInfo) Reset()         { *m = CDOTAUserMsg_TutorialTipInfo{} }
func (m *CDOTAUserMsg_TutorialTipInfo) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialTipInfo) ProtoMessage()    {}

func (m *CDOTAUserMsg_TutorialTipInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialTipInfo) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type CDOTAUserMsg_TutorialFinish struct {
	Heading          *string `protobuf:"bytes,1,opt,name=heading" json:"heading,omitempty"`
	Emblem           *string `protobuf:"bytes,2,opt,name=emblem" json:"emblem,omitempty"`
	Body             *string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Success          *bool   `protobuf:"varint,4,opt,name=success" json:"success,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_TutorialFinish) Reset()         { *m = CDOTAUserMsg_TutorialFinish{} }
func (m *CDOTAUserMsg_TutorialFinish) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialFinish) ProtoMessage()    {}

func (m *CDOTAUserMsg_TutorialFinish) GetHeading() string {
	if m != nil && m.Heading != nil {
		return *m.Heading
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialFinish) GetEmblem() string {
	if m != nil && m.Emblem != nil {
		return *m.Emblem
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialFinish) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *CDOTAUserMsg_TutorialFinish) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

type CDOTAUserMsg_TutorialMinimapPosition struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TutorialMinimapPosition) Reset()         { *m = CDOTAUserMsg_TutorialMinimapPosition{} }
func (m *CDOTAUserMsg_TutorialMinimapPosition) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialMinimapPosition) ProtoMessage()    {}

type CDOTAUserMsg_SendGenericToolTip struct {
	Title            *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Text             *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Entindex         *int32  `protobuf:"varint,3,opt,name=entindex" json:"entindex,omitempty"`
	Close            *bool   `protobuf:"varint,4,opt,name=close" json:"close,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_SendGenericToolTip) Reset()         { *m = CDOTAUserMsg_SendGenericToolTip{} }
func (m *CDOTAUserMsg_SendGenericToolTip) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendGenericToolTip) ProtoMessage()    {}

func (m *CDOTAUserMsg_SendGenericToolTip) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetEntindex() int32 {
	if m != nil && m.Entindex != nil {
		return *m.Entindex
	}
	return 0
}

func (m *CDOTAUserMsg_SendGenericToolTip) GetClose() bool {
	if m != nil && m.Close != nil {
		return *m.Close
	}
	return false
}

type CDOTAUserMsg_WorldLine struct {
	PlayerId         *int32              `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	Worldline        *CDOTAMsg_WorldLine `protobuf:"bytes,2,opt,name=worldline" json:"worldline,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CDOTAUserMsg_WorldLine) Reset()         { *m = CDOTAUserMsg_WorldLine{} }
func (m *CDOTAUserMsg_WorldLine) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_WorldLine) ProtoMessage()    {}

func (m *CDOTAUserMsg_WorldLine) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_WorldLine) GetWorldline() *CDOTAMsg_WorldLine {
	if m != nil {
		return m.Worldline
	}
	return nil
}

type CDOTAUserMsg_ChatWheel struct {
	ChatMessage      *EDOTAChatWheelMessage `protobuf:"varint,1,opt,name=chat_message,enum=dota.EDOTAChatWheelMessage,def=0" json:"chat_message,omitempty"`
	PlayerId         *uint32                `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	AccountId        *uint32                `protobuf:"varint,3,opt,name=account_id" json:"account_id,omitempty"`
	ParamHeroId      *uint32                `protobuf:"varint,4,opt,name=param_hero_id" json:"param_hero_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CDOTAUserMsg_ChatWheel) Reset()         { *m = CDOTAUserMsg_ChatWheel{} }
func (m *CDOTAUserMsg_ChatWheel) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ChatWheel) ProtoMessage()    {}

const Default_CDOTAUserMsg_ChatWheel_ChatMessage EDOTAChatWheelMessage = EDOTAChatWheelMessage_k_EDOTA_CW_Ok

func (m *CDOTAUserMsg_ChatWheel) GetChatMessage() EDOTAChatWheelMessage {
	if m != nil && m.ChatMessage != nil {
		return *m.ChatMessage
	}
	return Default_CDOTAUserMsg_ChatWheel_ChatMessage
}

func (m *CDOTAUserMsg_ChatWheel) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ChatWheel) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CDOTAUserMsg_ChatWheel) GetParamHeroId() uint32 {
	if m != nil && m.ParamHeroId != nil {
		return *m.ParamHeroId
	}
	return 0
}

type CDOTAUserMsg_ReceivedXmasGift struct {
	PlayerId         *int32  `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	ItemName         *string `protobuf:"bytes,2,opt,name=item_name" json:"item_name,omitempty"`
	InventorySlot    *int32  `protobuf:"varint,3,opt,name=inventory_slot" json:"inventory_slot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ReceivedXmasGift) Reset()         { *m = CDOTAUserMsg_ReceivedXmasGift{} }
func (m *CDOTAUserMsg_ReceivedXmasGift) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ReceivedXmasGift) ProtoMessage()    {}

func (m *CDOTAUserMsg_ReceivedXmasGift) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_ReceivedXmasGift) GetItemName() string {
	if m != nil && m.ItemName != nil {
		return *m.ItemName
	}
	return ""
}

func (m *CDOTAUserMsg_ReceivedXmasGift) GetInventorySlot() int32 {
	if m != nil && m.InventorySlot != nil {
		return *m.InventorySlot
	}
	return 0
}

type CDOTAUserMsg_ShowSurvey struct {
	SurveyId         *int32  `protobuf:"varint,1,opt,name=survey_id" json:"survey_id,omitempty"`
	MatchId          *uint32 `protobuf:"varint,2,opt,name=match_id" json:"match_id,omitempty"`
	ResponseStyle    *string `protobuf:"bytes,3,opt,name=response_style" json:"response_style,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ShowSurvey) Reset()         { *m = CDOTAUserMsg_ShowSurvey{} }
func (m *CDOTAUserMsg_ShowSurvey) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ShowSurvey) ProtoMessage()    {}

func (m *CDOTAUserMsg_ShowSurvey) GetSurveyId() int32 {
	if m != nil && m.SurveyId != nil {
		return *m.SurveyId
	}
	return 0
}

func (m *CDOTAUserMsg_ShowSurvey) GetMatchId() uint32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CDOTAUserMsg_ShowSurvey) GetResponseStyle() string {
	if m != nil && m.ResponseStyle != nil {
		return *m.ResponseStyle
	}
	return ""
}

type CDOTAUserMsg_UpdateSharedContent struct {
	SlotType         *int32 `protobuf:"varint,1,opt,name=slot_type" json:"slot_type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_UpdateSharedContent) Reset()         { *m = CDOTAUserMsg_UpdateSharedContent{} }
func (m *CDOTAUserMsg_UpdateSharedContent) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_UpdateSharedContent) ProtoMessage()    {}

func (m *CDOTAUserMsg_UpdateSharedContent) GetSlotType() int32 {
	if m != nil && m.SlotType != nil {
		return *m.SlotType
	}
	return 0
}

type CDOTAUserMsg_TutorialRequestExp struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TutorialRequestExp) Reset()         { *m = CDOTAUserMsg_TutorialRequestExp{} }
func (m *CDOTAUserMsg_TutorialRequestExp) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialRequestExp) ProtoMessage()    {}

type CDOTAUserMsg_TutorialFade struct {
	TgtAlpha         *int32 `protobuf:"varint,1,opt,name=tgt_alpha" json:"tgt_alpha,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TutorialFade) Reset()         { *m = CDOTAUserMsg_TutorialFade{} }
func (m *CDOTAUserMsg_TutorialFade) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialFade) ProtoMessage()    {}

func (m *CDOTAUserMsg_TutorialFade) GetTgtAlpha() int32 {
	if m != nil && m.TgtAlpha != nil {
		return *m.TgtAlpha
	}
	return 0
}

type CDOTAUserMsg_TutorialPingMinimap struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	PosX             *float32 `protobuf:"fixed32,2,opt,name=pos_x" json:"pos_x,omitempty"`
	PosY             *float32 `protobuf:"fixed32,3,opt,name=pos_y" json:"pos_y,omitempty"`
	PosZ             *float32 `protobuf:"fixed32,4,opt,name=pos_z" json:"pos_z,omitempty"`
	EntityIndex      *int32   `protobuf:"varint,5,opt,name=entity_index" json:"entity_index,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TutorialPingMinimap) Reset()         { *m = CDOTAUserMsg_TutorialPingMinimap{} }
func (m *CDOTAUserMsg_TutorialPingMinimap) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TutorialPingMinimap) ProtoMessage()    {}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPosX() float32 {
	if m != nil && m.PosX != nil {
		return *m.PosX
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPosY() float32 {
	if m != nil && m.PosY != nil {
		return *m.PosY
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetPosZ() float32 {
	if m != nil && m.PosZ != nil {
		return *m.PosZ
	}
	return 0
}

func (m *CDOTAUserMsg_TutorialPingMinimap) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

type CDOTAUserMsg_GamerulesStateChanged struct {
	State            *uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_GamerulesStateChanged) Reset()         { *m = CDOTAUserMsg_GamerulesStateChanged{} }
func (m *CDOTAUserMsg_GamerulesStateChanged) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_GamerulesStateChanged) ProtoMessage()    {}

func (m *CDOTAUserMsg_GamerulesStateChanged) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

type CDOTAUserMsg_AddQuestLogEntry struct {
	NpcName          *string `protobuf:"bytes,1,opt,name=npc_name" json:"npc_name,omitempty"`
	NpcDialog        *string `protobuf:"bytes,2,opt,name=npc_dialog" json:"npc_dialog,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AddQuestLogEntry) Reset()         { *m = CDOTAUserMsg_AddQuestLogEntry{} }
func (m *CDOTAUserMsg_AddQuestLogEntry) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AddQuestLogEntry) ProtoMessage()    {}

func (m *CDOTAUserMsg_AddQuestLogEntry) GetNpcName() string {
	if m != nil && m.NpcName != nil {
		return *m.NpcName
	}
	return ""
}

func (m *CDOTAUserMsg_AddQuestLogEntry) GetNpcDialog() string {
	if m != nil && m.NpcDialog != nil {
		return *m.NpcDialog
	}
	return ""
}

type CDOTAUserMsg_SendStatPopup struct {
	PlayerId         *int32                  `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	Statpopup        *CDOTAMsg_SendStatPopup `protobuf:"bytes,2,opt,name=statpopup" json:"statpopup,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTAUserMsg_SendStatPopup) Reset()         { *m = CDOTAUserMsg_SendStatPopup{} }
func (m *CDOTAUserMsg_SendStatPopup) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendStatPopup) ProtoMessage()    {}

func (m *CDOTAUserMsg_SendStatPopup) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_SendStatPopup) GetStatpopup() *CDOTAMsg_SendStatPopup {
	if m != nil {
		return m.Statpopup
	}
	return nil
}

type CDOTAUserMsg_SendRoshanPopup struct {
	Reclaimed        *bool  `protobuf:"varint,1,opt,name=reclaimed" json:"reclaimed,omitempty"`
	Gametime         *int32 `protobuf:"varint,2,opt,name=gametime" json:"gametime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_SendRoshanPopup) Reset()         { *m = CDOTAUserMsg_SendRoshanPopup{} }
func (m *CDOTAUserMsg_SendRoshanPopup) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendRoshanPopup) ProtoMessage()    {}

func (m *CDOTAUserMsg_SendRoshanPopup) GetReclaimed() bool {
	if m != nil && m.Reclaimed != nil {
		return *m.Reclaimed
	}
	return false
}

func (m *CDOTAUserMsg_SendRoshanPopup) GetGametime() int32 {
	if m != nil && m.Gametime != nil {
		return *m.Gametime
	}
	return 0
}

type CDOTAUserMsg_SendFinalGold struct {
	ReliableGold     []uint32 `protobuf:"varint,1,rep,name=reliable_gold" json:"reliable_gold,omitempty"`
	UnreliableGold   []uint32 `protobuf:"varint,2,rep,name=unreliable_gold" json:"unreliable_gold,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_SendFinalGold) Reset()         { *m = CDOTAUserMsg_SendFinalGold{} }
func (m *CDOTAUserMsg_SendFinalGold) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SendFinalGold) ProtoMessage()    {}

func (m *CDOTAUserMsg_SendFinalGold) GetReliableGold() []uint32 {
	if m != nil {
		return m.ReliableGold
	}
	return nil
}

func (m *CDOTAUserMsg_SendFinalGold) GetUnreliableGold() []uint32 {
	if m != nil {
		return m.UnreliableGold
	}
	return nil
}

type CDOTAUserMsg_CustomMsg struct {
	Message          *string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	PlayerId         *int32  `protobuf:"varint,2,opt,name=player_id" json:"player_id,omitempty"`
	Value            *int32  `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_CustomMsg) Reset()         { *m = CDOTAUserMsg_CustomMsg{} }
func (m *CDOTAUserMsg_CustomMsg) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomMsg) ProtoMessage()    {}

func (m *CDOTAUserMsg_CustomMsg) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_CustomMsg) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CustomMsg) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

type CDOTAUserMsg_CoachHUDPing struct {
	PlayerId         *uint32                `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	HudPing          *CDOTAMsg_CoachHUDPing `protobuf:"bytes,2,opt,name=hud_ping" json:"hud_ping,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CDOTAUserMsg_CoachHUDPing) Reset()         { *m = CDOTAUserMsg_CoachHUDPing{} }
func (m *CDOTAUserMsg_CoachHUDPing) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CoachHUDPing) ProtoMessage()    {}

func (m *CDOTAUserMsg_CoachHUDPing) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CoachHUDPing) GetHudPing() *CDOTAMsg_CoachHUDPing {
	if m != nil {
		return m.HudPing
	}
	return nil
}

type CDOTAUserMsg_ClientLoadGridNav struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_ClientLoadGridNav) Reset()         { *m = CDOTAUserMsg_ClientLoadGridNav{} }
func (m *CDOTAUserMsg_ClientLoadGridNav) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ClientLoadGridNav) ProtoMessage()    {}

type CDOTAUserMsg_TE_Projectile struct {
	HSource              *int32   `protobuf:"varint,1,opt,name=hSource" json:"hSource,omitempty"`
	HTarget              *int32   `protobuf:"varint,2,opt,name=hTarget" json:"hTarget,omitempty"`
	MoveSpeed            *int32   `protobuf:"varint,3,opt,name=moveSpeed" json:"moveSpeed,omitempty"`
	SourceAttachment     *int32   `protobuf:"varint,4,opt,name=sourceAttachment" json:"sourceAttachment,omitempty"`
	ParticleSystemHandle *int64   `protobuf:"varint,5,opt,name=particleSystemHandle" json:"particleSystemHandle,omitempty"`
	Dodgeable            *bool    `protobuf:"varint,6,opt,name=dodgeable" json:"dodgeable,omitempty"`
	IsAttack             *bool    `protobuf:"varint,7,opt,name=isAttack" json:"isAttack,omitempty"`
	ExpireTime           *float32 `protobuf:"fixed32,8,opt,name=expireTime" json:"expireTime,omitempty"`
	XXX_unrecognized     []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TE_Projectile) Reset()         { *m = CDOTAUserMsg_TE_Projectile{} }
func (m *CDOTAUserMsg_TE_Projectile) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_Projectile) ProtoMessage()    {}

func (m *CDOTAUserMsg_TE_Projectile) GetHSource() int32 {
	if m != nil && m.HSource != nil {
		return *m.HSource
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetHTarget() int32 {
	if m != nil && m.HTarget != nil {
		return *m.HTarget
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetMoveSpeed() int32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetSourceAttachment() int32 {
	if m != nil && m.SourceAttachment != nil {
		return *m.SourceAttachment
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetParticleSystemHandle() int64 {
	if m != nil && m.ParticleSystemHandle != nil {
		return *m.ParticleSystemHandle
	}
	return 0
}

func (m *CDOTAUserMsg_TE_Projectile) GetDodgeable() bool {
	if m != nil && m.Dodgeable != nil {
		return *m.Dodgeable
	}
	return false
}

func (m *CDOTAUserMsg_TE_Projectile) GetIsAttack() bool {
	if m != nil && m.IsAttack != nil {
		return *m.IsAttack
	}
	return false
}

func (m *CDOTAUserMsg_TE_Projectile) GetExpireTime() float32 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

type CDOTAUserMsg_TE_ProjectileLoc struct {
	VSourceLoc           *CMsgVector `protobuf:"bytes,1,opt,name=vSourceLoc" json:"vSourceLoc,omitempty"`
	HTarget              *int32      `protobuf:"varint,2,opt,name=hTarget" json:"hTarget,omitempty"`
	MoveSpeed            *int32      `protobuf:"varint,3,opt,name=moveSpeed" json:"moveSpeed,omitempty"`
	ParticleSystemHandle *int64      `protobuf:"varint,4,opt,name=particleSystemHandle" json:"particleSystemHandle,omitempty"`
	Dodgeable            *bool       `protobuf:"varint,5,opt,name=dodgeable" json:"dodgeable,omitempty"`
	IsAttack             *bool       `protobuf:"varint,6,opt,name=isAttack" json:"isAttack,omitempty"`
	ExpireTime           *float32    `protobuf:"fixed32,7,opt,name=expireTime" json:"expireTime,omitempty"`
	XXX_unrecognized     []byte      `json:"-"`
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) Reset()         { *m = CDOTAUserMsg_TE_ProjectileLoc{} }
func (m *CDOTAUserMsg_TE_ProjectileLoc) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_ProjectileLoc) ProtoMessage()    {}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetVSourceLoc() *CMsgVector {
	if m != nil {
		return m.VSourceLoc
	}
	return nil
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetHTarget() int32 {
	if m != nil && m.HTarget != nil {
		return *m.HTarget
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetMoveSpeed() int32 {
	if m != nil && m.MoveSpeed != nil {
		return *m.MoveSpeed
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetParticleSystemHandle() int64 {
	if m != nil && m.ParticleSystemHandle != nil {
		return *m.ParticleSystemHandle
	}
	return 0
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetDodgeable() bool {
	if m != nil && m.Dodgeable != nil {
		return *m.Dodgeable
	}
	return false
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetIsAttack() bool {
	if m != nil && m.IsAttack != nil {
		return *m.IsAttack
	}
	return false
}

func (m *CDOTAUserMsg_TE_ProjectileLoc) GetExpireTime() float32 {
	if m != nil && m.ExpireTime != nil {
		return *m.ExpireTime
	}
	return 0
}

type CDOTAUserMsg_TE_DotaBloodImpact struct {
	Entity           *int32   `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Scale            *float32 `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	Xnormal          *float32 `protobuf:"fixed32,3,opt,name=xnormal" json:"xnormal,omitempty"`
	Ynormal          *float32 `protobuf:"fixed32,4,opt,name=ynormal" json:"ynormal,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) Reset()         { *m = CDOTAUserMsg_TE_DotaBloodImpact{} }
func (m *CDOTAUserMsg_TE_DotaBloodImpact) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_DotaBloodImpact) ProtoMessage()    {}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return 0
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetXnormal() float32 {
	if m != nil && m.Xnormal != nil {
		return *m.Xnormal
	}
	return 0
}

func (m *CDOTAUserMsg_TE_DotaBloodImpact) GetYnormal() float32 {
	if m != nil && m.Ynormal != nil {
		return *m.Ynormal
	}
	return 0
}

type CDOTAUserMsg_AbilityPing struct {
	PlayerId         *uint32                 `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	AbilityId        *uint32                 `protobuf:"varint,2,opt,name=ability_id" json:"ability_id,omitempty"`
	Type             *DOTA_ABILITY_PING_TYPE `protobuf:"varint,3,opt,name=type,enum=dota.DOTA_ABILITY_PING_TYPE,def=1" json:"type,omitempty"`
	CooldownSeconds  *uint32                 `protobuf:"varint,4,opt,name=cooldown_seconds" json:"cooldown_seconds,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CDOTAUserMsg_AbilityPing) Reset()         { *m = CDOTAUserMsg_AbilityPing{} }
func (m *CDOTAUserMsg_AbilityPing) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AbilityPing) ProtoMessage()    {}

const Default_CDOTAUserMsg_AbilityPing_Type DOTA_ABILITY_PING_TYPE = DOTA_ABILITY_PING_TYPE_ABILITY_PING_READY

func (m *CDOTAUserMsg_AbilityPing) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilityPing) GetType() DOTA_ABILITY_PING_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CDOTAUserMsg_AbilityPing_Type
}

func (m *CDOTAUserMsg_AbilityPing) GetCooldownSeconds() uint32 {
	if m != nil && m.CooldownSeconds != nil {
		return *m.CooldownSeconds
	}
	return 0
}

type CDOTAUserMsg_TE_UnitAnimation struct {
	Entity           *int32   `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	SequenceVariant  *int32   `protobuf:"varint,2,opt,name=sequenceVariant" json:"sequenceVariant,omitempty"`
	Playbackrate     *float32 `protobuf:"fixed32,3,opt,name=playbackrate" json:"playbackrate,omitempty"`
	Castpoint        *float32 `protobuf:"fixed32,4,opt,name=castpoint" json:"castpoint,omitempty"`
	Type             *int32   `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	Activity         *int32   `protobuf:"varint,6,opt,name=activity" json:"activity,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_TE_UnitAnimation) Reset()         { *m = CDOTAUserMsg_TE_UnitAnimation{} }
func (m *CDOTAUserMsg_TE_UnitAnimation) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_UnitAnimation) ProtoMessage()    {}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetSequenceVariant() int32 {
	if m != nil && m.SequenceVariant != nil {
		return *m.SequenceVariant
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetPlaybackrate() float32 {
	if m != nil && m.Playbackrate != nil {
		return *m.Playbackrate
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetCastpoint() float32 {
	if m != nil && m.Castpoint != nil {
		return *m.Castpoint
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimation) GetActivity() int32 {
	if m != nil && m.Activity != nil {
		return *m.Activity
	}
	return 0
}

type CDOTAUserMsg_TE_UnitAnimationEnd struct {
	Entity           *int32 `protobuf:"varint,1,opt,name=entity" json:"entity,omitempty"`
	Snap             *bool  `protobuf:"varint,2,opt,name=snap" json:"snap,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_TE_UnitAnimationEnd) Reset()         { *m = CDOTAUserMsg_TE_UnitAnimationEnd{} }
func (m *CDOTAUserMsg_TE_UnitAnimationEnd) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_TE_UnitAnimationEnd) ProtoMessage()    {}

func (m *CDOTAUserMsg_TE_UnitAnimationEnd) GetEntity() int32 {
	if m != nil && m.Entity != nil {
		return *m.Entity
	}
	return 0
}

func (m *CDOTAUserMsg_TE_UnitAnimationEnd) GetSnap() bool {
	if m != nil && m.Snap != nil {
		return *m.Snap
	}
	return false
}

type CDOTAUserMsg_ShowGenericPopup struct {
	Header             *string `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Body               *string `protobuf:"bytes,2,req,name=body" json:"body,omitempty"`
	Param1             *string `protobuf:"bytes,3,opt,name=param1" json:"param1,omitempty"`
	Param2             *string `protobuf:"bytes,4,opt,name=param2" json:"param2,omitempty"`
	TintScreen         *bool   `protobuf:"varint,5,opt,name=tint_screen" json:"tint_screen,omitempty"`
	ShowNoOtherDialogs *bool   `protobuf:"varint,6,opt,name=show_no_other_dialogs" json:"show_no_other_dialogs,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *CDOTAUserMsg_ShowGenericPopup) Reset()         { *m = CDOTAUserMsg_ShowGenericPopup{} }
func (m *CDOTAUserMsg_ShowGenericPopup) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_ShowGenericPopup) ProtoMessage()    {}

func (m *CDOTAUserMsg_ShowGenericPopup) GetHeader() string {
	if m != nil && m.Header != nil {
		return *m.Header
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetParam1() string {
	if m != nil && m.Param1 != nil {
		return *m.Param1
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetParam2() string {
	if m != nil && m.Param2 != nil {
		return *m.Param2
	}
	return ""
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetTintScreen() bool {
	if m != nil && m.TintScreen != nil {
		return *m.TintScreen
	}
	return false
}

func (m *CDOTAUserMsg_ShowGenericPopup) GetShowNoOtherDialogs() bool {
	if m != nil && m.ShowNoOtherDialogs != nil {
		return *m.ShowNoOtherDialogs
	}
	return false
}

type CDOTAUserMsg_VoteStart struct {
	Title            *string  `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	ChoiceCount      *int32   `protobuf:"varint,3,opt,name=choice_count" json:"choice_count,omitempty"`
	Choices          []string `protobuf:"bytes,4,rep,name=choices" json:"choices,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_VoteStart) Reset()         { *m = CDOTAUserMsg_VoteStart{} }
func (m *CDOTAUserMsg_VoteStart) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_VoteStart) ProtoMessage()    {}

func (m *CDOTAUserMsg_VoteStart) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CDOTAUserMsg_VoteStart) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_VoteStart) GetChoiceCount() int32 {
	if m != nil && m.ChoiceCount != nil {
		return *m.ChoiceCount
	}
	return 0
}

func (m *CDOTAUserMsg_VoteStart) GetChoices() []string {
	if m != nil {
		return m.Choices
	}
	return nil
}

type CDOTAUserMsg_VoteUpdate struct {
	ChoiceCounts     []int32 `protobuf:"varint,1,rep,name=choice_counts" json:"choice_counts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_VoteUpdate) Reset()         { *m = CDOTAUserMsg_VoteUpdate{} }
func (m *CDOTAUserMsg_VoteUpdate) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_VoteUpdate) ProtoMessage()    {}

func (m *CDOTAUserMsg_VoteUpdate) GetChoiceCounts() []int32 {
	if m != nil {
		return m.ChoiceCounts
	}
	return nil
}

type CDOTAUserMsg_VoteEnd struct {
	SelectedChoice   *int32 `protobuf:"varint,1,opt,name=selected_choice" json:"selected_choice,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_VoteEnd) Reset()         { *m = CDOTAUserMsg_VoteEnd{} }
func (m *CDOTAUserMsg_VoteEnd) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_VoteEnd) ProtoMessage()    {}

func (m *CDOTAUserMsg_VoteEnd) GetSelectedChoice() int32 {
	if m != nil && m.SelectedChoice != nil {
		return *m.SelectedChoice
	}
	return 0
}

type CDOTAUserMsg_BoosterStatePlayer struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	Bonus            *float32 `protobuf:"fixed32,2,opt,name=bonus" json:"bonus,omitempty"`
	EventBonus       *float32 `protobuf:"fixed32,3,opt,name=event_bonus" json:"event_bonus,omitempty"`
	BonusItemId      *uint32  `protobuf:"varint,4,opt,name=bonus_item_id" json:"bonus_item_id,omitempty"`
	EventBonusItemId *uint32  `protobuf:"varint,5,opt,name=event_bonus_item_id" json:"event_bonus_item_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_BoosterStatePlayer) Reset()         { *m = CDOTAUserMsg_BoosterStatePlayer{} }
func (m *CDOTAUserMsg_BoosterStatePlayer) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BoosterStatePlayer) ProtoMessage()    {}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetBonus() float32 {
	if m != nil && m.Bonus != nil {
		return *m.Bonus
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetEventBonus() float32 {
	if m != nil && m.EventBonus != nil {
		return *m.EventBonus
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetBonusItemId() uint32 {
	if m != nil && m.BonusItemId != nil {
		return *m.BonusItemId
	}
	return 0
}

func (m *CDOTAUserMsg_BoosterStatePlayer) GetEventBonusItemId() uint32 {
	if m != nil && m.EventBonusItemId != nil {
		return *m.EventBonusItemId
	}
	return 0
}

type CDOTAUserMsg_BoosterState struct {
	BoostedPlayers   []*CDOTAUserMsg_BoosterStatePlayer `protobuf:"bytes,1,rep,name=boosted_players" json:"boosted_players,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CDOTAUserMsg_BoosterState) Reset()         { *m = CDOTAUserMsg_BoosterState{} }
func (m *CDOTAUserMsg_BoosterState) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_BoosterState) ProtoMessage()    {}

func (m *CDOTAUserMsg_BoosterState) GetBoostedPlayers() []*CDOTAUserMsg_BoosterStatePlayer {
	if m != nil {
		return m.BoostedPlayers
	}
	return nil
}

type CDOTAUserMsg_PlayerMMR struct {
	Mmr              []int32 `protobuf:"zigzag32,1,rep,packed,name=mmr" json:"mmr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_PlayerMMR) Reset()         { *m = CDOTAUserMsg_PlayerMMR{} }
func (m *CDOTAUserMsg_PlayerMMR) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_PlayerMMR) ProtoMessage()    {}

func (m *CDOTAUserMsg_PlayerMMR) GetMmr() []int32 {
	if m != nil {
		return m.Mmr
	}
	return nil
}

type CDOTAUserMsg_AbilitySteal struct {
	PlayerId         *uint32 `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	AbilityId        *uint32 `protobuf:"varint,2,opt,name=ability_id" json:"ability_id,omitempty"`
	AbilityLevel     *uint32 `protobuf:"varint,3,opt,name=ability_level" json:"ability_level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CDOTAUserMsg_AbilitySteal) Reset()         { *m = CDOTAUserMsg_AbilitySteal{} }
func (m *CDOTAUserMsg_AbilitySteal) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_AbilitySteal) ProtoMessage()    {}

func (m *CDOTAUserMsg_AbilitySteal) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilitySteal) GetAbilityId() uint32 {
	if m != nil && m.AbilityId != nil {
		return *m.AbilityId
	}
	return 0
}

func (m *CDOTAUserMsg_AbilitySteal) GetAbilityLevel() uint32 {
	if m != nil && m.AbilityLevel != nil {
		return *m.AbilityLevel
	}
	return 0
}

type CDOTAUserMsg_SpeechBubble struct {
	DestroyAll       *bool  `protobuf:"varint,1,opt,name=destroy_all" json:"destroy_all,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CDOTAUserMsg_SpeechBubble) Reset()         { *m = CDOTAUserMsg_SpeechBubble{} }
func (m *CDOTAUserMsg_SpeechBubble) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_SpeechBubble) ProtoMessage()    {}

func (m *CDOTAUserMsg_SpeechBubble) GetDestroyAll() bool {
	if m != nil && m.DestroyAll != nil {
		return *m.DestroyAll
	}
	return false
}

type CDOTAUserMsg_CustomHeaderMessage struct {
	PlayerId         *uint32  `protobuf:"varint,1,opt,name=player_id" json:"player_id,omitempty"`
	Duration         *float32 `protobuf:"fixed32,2,opt,name=duration" json:"duration,omitempty"`
	Message          *string  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Value            *int32   `protobuf:"varint,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CDOTAUserMsg_CustomHeaderMessage) Reset()         { *m = CDOTAUserMsg_CustomHeaderMessage{} }
func (m *CDOTAUserMsg_CustomHeaderMessage) String() string { return proto.CompactTextString(m) }
func (*CDOTAUserMsg_CustomHeaderMessage) ProtoMessage()    {}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetPlayerId() uint32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetDuration() float32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CDOTAUserMsg_CustomHeaderMessage) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func init() {
	proto.RegisterEnum("dota.EDotaUserMessages", EDotaUserMessages_name, EDotaUserMessages_value)
	proto.RegisterEnum("dota.DOTA_CHAT_MESSAGE", DOTA_CHAT_MESSAGE_name, DOTA_CHAT_MESSAGE_value)
	proto.RegisterEnum("dota.DOTA_NO_BATTLE_POINTS_REASONS", DOTA_NO_BATTLE_POINTS_REASONS_name, DOTA_NO_BATTLE_POINTS_REASONS_value)
	proto.RegisterEnum("dota.DOTA_CHAT_INFORMATIONAL", DOTA_CHAT_INFORMATIONAL_name, DOTA_CHAT_INFORMATIONAL_value)
	proto.RegisterEnum("dota.DOTA_ABILITY_PING_TYPE", DOTA_ABILITY_PING_TYPE_name, DOTA_ABILITY_PING_TYPE_value)
	proto.RegisterEnum("dota.DOTA_COMBATLOG_TYPES", DOTA_COMBATLOG_TYPES_name, DOTA_COMBATLOG_TYPES_value)
	proto.RegisterEnum("dota.EDotaEntityMessages", EDotaEntityMessages_name, EDotaEntityMessages_value)
	proto.RegisterEnum("dota.DOTA_PARTICLE_MESSAGE", DOTA_PARTICLE_MESSAGE_name, DOTA_PARTICLE_MESSAGE_value)
	proto.RegisterEnum("dota.DOTA_OVERHEAD_ALERT", DOTA_OVERHEAD_ALERT_name, DOTA_OVERHEAD_ALERT_value)
	proto.RegisterEnum("dota.CDOTAResponseQuerySerialized_Fact_ValueType", CDOTAResponseQuerySerialized_Fact_ValueType_name, CDOTAResponseQuerySerialized_Fact_ValueType_value)
}
