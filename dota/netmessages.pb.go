// Code generated by protoc-gen-gogo.
// source: netmessages.proto
// DO NOT EDIT!

package dota

import proto "code.google.com/p/gogoprotobuf/proto"
import json "encoding/json"
import math "math"

// discarding unused import google_protobuf "github.com/dotabuff/sange/dota/google/protobuf/descriptor.pb"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Bidirectional_Messages int32

const (
	Bidirectional_Messages_bi_RebroadcastGameEvent Bidirectional_Messages = 16
	Bidirectional_Messages_bi_RebroadcastSource    Bidirectional_Messages = 17
	Bidirectional_Messages_bi_GameEvent            Bidirectional_Messages = 18
)

var Bidirectional_Messages_name = map[int32]string{
	16: "bi_RebroadcastGameEvent",
	17: "bi_RebroadcastSource",
	18: "bi_GameEvent",
}
var Bidirectional_Messages_value = map[string]int32{
	"bi_RebroadcastGameEvent": 16,
	"bi_RebroadcastSource":    17,
	"bi_GameEvent":            18,
}

func (x Bidirectional_Messages) Enum() *Bidirectional_Messages {
	p := new(Bidirectional_Messages)
	*p = x
	return p
}
func (x Bidirectional_Messages) String() string {
	return proto.EnumName(Bidirectional_Messages_name, int32(x))
}
func (x *Bidirectional_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Bidirectional_Messages_value, data, "Bidirectional_Messages")
	if err != nil {
		return err
	}
	*x = Bidirectional_Messages(value)
	return nil
}

type CLC_Messages int32

const (
	CLC_Messages_clc_ClientInfo            CLC_Messages = 20
	CLC_Messages_clc_Move                  CLC_Messages = 21
	CLC_Messages_clc_VoiceData             CLC_Messages = 22
	CLC_Messages_clc_BaselineAck           CLC_Messages = 23
	CLC_Messages_clc_ListenEvents          CLC_Messages = 24
	CLC_Messages_clc_RespondCvarValue      CLC_Messages = 25
	CLC_Messages_clc_FileCRCCheck          CLC_Messages = 26
	CLC_Messages_clc_LoadingProgress       CLC_Messages = 27
	CLC_Messages_clc_SplitPlayerConnect    CLC_Messages = 28
	CLC_Messages_clc_ClientMessage         CLC_Messages = 29
	CLC_Messages_clc_SplitPlayerDisconnect CLC_Messages = 30
	CLC_Messages_clc_ServerStatus          CLC_Messages = 31
	CLC_Messages_clc_ServerPing            CLC_Messages = 32
	CLC_Messages_clc_RequestPause          CLC_Messages = 33
	CLC_Messages_clc_CmdKeyValues          CLC_Messages = 34
)

var CLC_Messages_name = map[int32]string{
	20: "clc_ClientInfo",
	21: "clc_Move",
	22: "clc_VoiceData",
	23: "clc_BaselineAck",
	24: "clc_ListenEvents",
	25: "clc_RespondCvarValue",
	26: "clc_FileCRCCheck",
	27: "clc_LoadingProgress",
	28: "clc_SplitPlayerConnect",
	29: "clc_ClientMessage",
	30: "clc_SplitPlayerDisconnect",
	31: "clc_ServerStatus",
	32: "clc_ServerPing",
	33: "clc_RequestPause",
	34: "clc_CmdKeyValues",
}
var CLC_Messages_value = map[string]int32{
	"clc_ClientInfo":            20,
	"clc_Move":                  21,
	"clc_VoiceData":             22,
	"clc_BaselineAck":           23,
	"clc_ListenEvents":          24,
	"clc_RespondCvarValue":      25,
	"clc_FileCRCCheck":          26,
	"clc_LoadingProgress":       27,
	"clc_SplitPlayerConnect":    28,
	"clc_ClientMessage":         29,
	"clc_SplitPlayerDisconnect": 30,
	"clc_ServerStatus":          31,
	"clc_ServerPing":            32,
	"clc_RequestPause":          33,
	"clc_CmdKeyValues":          34,
}

func (x CLC_Messages) Enum() *CLC_Messages {
	p := new(CLC_Messages)
	*p = x
	return p
}
func (x CLC_Messages) String() string {
	return proto.EnumName(CLC_Messages_name, int32(x))
}
func (x *CLC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CLC_Messages_value, data, "CLC_Messages")
	if err != nil {
		return err
	}
	*x = CLC_Messages(value)
	return nil
}

type SVC_Messages int32

const (
	SVC_Messages_svc_ServerInfo           SVC_Messages = 40
	SVC_Messages_svc_SendTable            SVC_Messages = 41
	SVC_Messages_svc_ClassInfo            SVC_Messages = 42
	SVC_Messages_svc_SetPause             SVC_Messages = 43
	SVC_Messages_svc_CreateStringTable    SVC_Messages = 44
	SVC_Messages_svc_UpdateStringTable    SVC_Messages = 45
	SVC_Messages_svc_VoiceInit            SVC_Messages = 46
	SVC_Messages_svc_VoiceData            SVC_Messages = 47
	SVC_Messages_svc_Print                SVC_Messages = 48
	SVC_Messages_svc_Sounds               SVC_Messages = 49
	SVC_Messages_svc_SetView              SVC_Messages = 50
	SVC_Messages_svc_ClearAllStringTables SVC_Messages = 51
	SVC_Messages_svc_CmdKeyValues         SVC_Messages = 52
	SVC_Messages_svc_BSPDecal             SVC_Messages = 53
	SVC_Messages_svc_SplitScreen          SVC_Messages = 54
	SVC_Messages_svc_PacketEntities       SVC_Messages = 55
	SVC_Messages_svc_Prefetch             SVC_Messages = 56
	SVC_Messages_svc_Menu                 SVC_Messages = 57
	SVC_Messages_svc_GetCvarValue         SVC_Messages = 58
	SVC_Messages_svc_StopSound            SVC_Messages = 59
	SVC_Messages_svc_PeerList             SVC_Messages = 60
	SVC_Messages_svc_PacketReliable       SVC_Messages = 61
)

var SVC_Messages_name = map[int32]string{
	40: "svc_ServerInfo",
	41: "svc_SendTable",
	42: "svc_ClassInfo",
	43: "svc_SetPause",
	44: "svc_CreateStringTable",
	45: "svc_UpdateStringTable",
	46: "svc_VoiceInit",
	47: "svc_VoiceData",
	48: "svc_Print",
	49: "svc_Sounds",
	50: "svc_SetView",
	51: "svc_ClearAllStringTables",
	52: "svc_CmdKeyValues",
	53: "svc_BSPDecal",
	54: "svc_SplitScreen",
	55: "svc_PacketEntities",
	56: "svc_Prefetch",
	57: "svc_Menu",
	58: "svc_GetCvarValue",
	59: "svc_StopSound",
	60: "svc_PeerList",
	61: "svc_PacketReliable",
}
var SVC_Messages_value = map[string]int32{
	"svc_ServerInfo":           40,
	"svc_SendTable":            41,
	"svc_ClassInfo":            42,
	"svc_SetPause":             43,
	"svc_CreateStringTable":    44,
	"svc_UpdateStringTable":    45,
	"svc_VoiceInit":            46,
	"svc_VoiceData":            47,
	"svc_Print":                48,
	"svc_Sounds":               49,
	"svc_SetView":              50,
	"svc_ClearAllStringTables": 51,
	"svc_CmdKeyValues":         52,
	"svc_BSPDecal":             53,
	"svc_SplitScreen":          54,
	"svc_PacketEntities":       55,
	"svc_Prefetch":             56,
	"svc_Menu":                 57,
	"svc_GetCvarValue":         58,
	"svc_StopSound":            59,
	"svc_PeerList":             60,
	"svc_PacketReliable":       61,
}

func (x SVC_Messages) Enum() *SVC_Messages {
	p := new(SVC_Messages)
	*p = x
	return p
}
func (x SVC_Messages) String() string {
	return proto.EnumName(SVC_Messages_name, int32(x))
}
func (x *SVC_Messages) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_value, data, "SVC_Messages")
	if err != nil {
		return err
	}
	*x = SVC_Messages(value)
	return nil
}

type SVC_Messages_LowFrequency int32

const (
	SVC_Messages_LowFrequency_svc_dummy SVC_Messages_LowFrequency = 600
)

var SVC_Messages_LowFrequency_name = map[int32]string{
	600: "svc_dummy",
}
var SVC_Messages_LowFrequency_value = map[string]int32{
	"svc_dummy": 600,
}

func (x SVC_Messages_LowFrequency) Enum() *SVC_Messages_LowFrequency {
	p := new(SVC_Messages_LowFrequency)
	*p = x
	return p
}
func (x SVC_Messages_LowFrequency) String() string {
	return proto.EnumName(SVC_Messages_LowFrequency_name, int32(x))
}
func (x *SVC_Messages_LowFrequency) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SVC_Messages_LowFrequency_value, data, "SVC_Messages_LowFrequency")
	if err != nil {
		return err
	}
	*x = SVC_Messages_LowFrequency(value)
	return nil
}

type VoiceDataFormatT int32

const (
	VoiceDataFormatT_VOICEDATA_FORMAT_STEAM  VoiceDataFormatT = 0
	VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE VoiceDataFormatT = 1
)

var VoiceDataFormatT_name = map[int32]string{
	0: "VOICEDATA_FORMAT_STEAM",
	1: "VOICEDATA_FORMAT_ENGINE",
}
var VoiceDataFormatT_value = map[string]int32{
	"VOICEDATA_FORMAT_STEAM":  0,
	"VOICEDATA_FORMAT_ENGINE": 1,
}

func (x VoiceDataFormatT) Enum() *VoiceDataFormatT {
	p := new(VoiceDataFormatT)
	*p = x
	return p
}
func (x VoiceDataFormatT) String() string {
	return proto.EnumName(VoiceDataFormatT_name, int32(x))
}
func (x *VoiceDataFormatT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VoiceDataFormatT_value, data, "VoiceDataFormatT")
	if err != nil {
		return err
	}
	*x = VoiceDataFormatT(value)
	return nil
}

type EQueryCvarValueStatus int32

const (
	EQueryCvarValueStatus_eQueryCvarValueStatus_ValueIntact   EQueryCvarValueStatus = 0
	EQueryCvarValueStatus_eQueryCvarValueStatus_CvarNotFound  EQueryCvarValueStatus = 1
	EQueryCvarValueStatus_eQueryCvarValueStatus_NotACvar      EQueryCvarValueStatus = 2
	EQueryCvarValueStatus_eQueryCvarValueStatus_CvarProtected EQueryCvarValueStatus = 3
)

var EQueryCvarValueStatus_name = map[int32]string{
	0: "eQueryCvarValueStatus_ValueIntact",
	1: "eQueryCvarValueStatus_CvarNotFound",
	2: "eQueryCvarValueStatus_NotACvar",
	3: "eQueryCvarValueStatus_CvarProtected",
}
var EQueryCvarValueStatus_value = map[string]int32{
	"eQueryCvarValueStatus_ValueIntact":   0,
	"eQueryCvarValueStatus_CvarNotFound":  1,
	"eQueryCvarValueStatus_NotACvar":      2,
	"eQueryCvarValueStatus_CvarProtected": 3,
}

func (x EQueryCvarValueStatus) Enum() *EQueryCvarValueStatus {
	p := new(EQueryCvarValueStatus)
	*p = x
	return p
}
func (x EQueryCvarValueStatus) String() string {
	return proto.EnumName(EQueryCvarValueStatus_name, int32(x))
}
func (x *EQueryCvarValueStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EQueryCvarValueStatus_value, data, "EQueryCvarValueStatus")
	if err != nil {
		return err
	}
	*x = EQueryCvarValueStatus(value)
	return nil
}

type RequestPauseT int32

const (
	RequestPauseT_RP_PAUSE       RequestPauseT = 0
	RequestPauseT_RP_UNPAUSE     RequestPauseT = 1
	RequestPauseT_RP_TOGGLEPAUSE RequestPauseT = 2
	RequestPauseT_RP_BUGPAUSE    RequestPauseT = 3
)

var RequestPauseT_name = map[int32]string{
	0: "RP_PAUSE",
	1: "RP_UNPAUSE",
	2: "RP_TOGGLEPAUSE",
	3: "RP_BUGPAUSE",
}
var RequestPauseT_value = map[string]int32{
	"RP_PAUSE":       0,
	"RP_UNPAUSE":     1,
	"RP_TOGGLEPAUSE": 2,
	"RP_BUGPAUSE":    3,
}

func (x RequestPauseT) Enum() *RequestPauseT {
	p := new(RequestPauseT)
	*p = x
	return p
}
func (x RequestPauseT) String() string {
	return proto.EnumName(RequestPauseT_name, int32(x))
}
func (x *RequestPauseT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RequestPauseT_value, data, "RequestPauseT")
	if err != nil {
		return err
	}
	*x = RequestPauseT(value)
	return nil
}

type PrefetchType int32

const (
	PrefetchType_PFT_SOUND PrefetchType = 0
)

var PrefetchType_name = map[int32]string{
	0: "PFT_SOUND",
}
var PrefetchType_value = map[string]int32{
	"PFT_SOUND": 0,
}

func (x PrefetchType) Enum() *PrefetchType {
	p := new(PrefetchType)
	*p = x
	return p
}
func (x PrefetchType) String() string {
	return proto.EnumName(PrefetchType_name, int32(x))
}
func (x *PrefetchType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PrefetchType_value, data, "PrefetchType")
	if err != nil {
		return err
	}
	*x = PrefetchType(value)
	return nil
}

type ESplitScreenMessageType int32

const (
	ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER    ESplitScreenMessageType = 0
	ESplitScreenMessageType_MSG_SPLITSCREEN_REMOVEUSER ESplitScreenMessageType = 1
)

var ESplitScreenMessageType_name = map[int32]string{
	0: "MSG_SPLITSCREEN_ADDUSER",
	1: "MSG_SPLITSCREEN_REMOVEUSER",
}
var ESplitScreenMessageType_value = map[string]int32{
	"MSG_SPLITSCREEN_ADDUSER":    0,
	"MSG_SPLITSCREEN_REMOVEUSER": 1,
}

func (x ESplitScreenMessageType) Enum() *ESplitScreenMessageType {
	p := new(ESplitScreenMessageType)
	*p = x
	return p
}
func (x ESplitScreenMessageType) String() string {
	return proto.EnumName(ESplitScreenMessageType_name, int32(x))
}
func (x *ESplitScreenMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ESplitScreenMessageType_value, data, "ESplitScreenMessageType")
	if err != nil {
		return err
	}
	*x = ESplitScreenMessageType(value)
	return nil
}

type DIALOG_TYPE int32

const (
	DIALOG_TYPE_DIALOG_MSG        DIALOG_TYPE = 0
	DIALOG_TYPE_DIALOG_MENU       DIALOG_TYPE = 1
	DIALOG_TYPE_DIALOG_TEXT       DIALOG_TYPE = 2
	DIALOG_TYPE_DIALOG_ENTRY      DIALOG_TYPE = 3
	DIALOG_TYPE_DIALOG_ASKCONNECT DIALOG_TYPE = 4
)

var DIALOG_TYPE_name = map[int32]string{
	0: "DIALOG_MSG",
	1: "DIALOG_MENU",
	2: "DIALOG_TEXT",
	3: "DIALOG_ENTRY",
	4: "DIALOG_ASKCONNECT",
}
var DIALOG_TYPE_value = map[string]int32{
	"DIALOG_MSG":        0,
	"DIALOG_MENU":       1,
	"DIALOG_TEXT":       2,
	"DIALOG_ENTRY":      3,
	"DIALOG_ASKCONNECT": 4,
}

func (x DIALOG_TYPE) Enum() *DIALOG_TYPE {
	p := new(DIALOG_TYPE)
	*p = x
	return p
}
func (x DIALOG_TYPE) String() string {
	return proto.EnumName(DIALOG_TYPE_name, int32(x))
}
func (x *DIALOG_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DIALOG_TYPE_value, data, "DIALOG_TYPE")
	if err != nil {
		return err
	}
	*x = DIALOG_TYPE(value)
	return nil
}

type CBidirMsg_RebroadcastGameEvent struct {
	Posttoserver     *bool   `protobuf:"varint,1,opt,name=posttoserver" json:"posttoserver,omitempty"`
	Buftype          *int32  `protobuf:"varint,2,opt,name=buftype" json:"buftype,omitempty"`
	Clientbitcount   *uint32 `protobuf:"varint,3,opt,name=clientbitcount" json:"clientbitcount,omitempty"`
	Receivingclients *uint64 `protobuf:"varint,4,opt,name=receivingclients" json:"receivingclients,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CBidirMsg_RebroadcastGameEvent) Reset()         { *m = CBidirMsg_RebroadcastGameEvent{} }
func (m *CBidirMsg_RebroadcastGameEvent) String() string { return proto.CompactTextString(m) }
func (*CBidirMsg_RebroadcastGameEvent) ProtoMessage()    {}

func (m *CBidirMsg_RebroadcastGameEvent) GetPosttoserver() bool {
	if m != nil && m.Posttoserver != nil {
		return *m.Posttoserver
	}
	return false
}

func (m *CBidirMsg_RebroadcastGameEvent) GetBuftype() int32 {
	if m != nil && m.Buftype != nil {
		return *m.Buftype
	}
	return 0
}

func (m *CBidirMsg_RebroadcastGameEvent) GetClientbitcount() uint32 {
	if m != nil && m.Clientbitcount != nil {
		return *m.Clientbitcount
	}
	return 0
}

func (m *CBidirMsg_RebroadcastGameEvent) GetReceivingclients() uint64 {
	if m != nil && m.Receivingclients != nil {
		return *m.Receivingclients
	}
	return 0
}

type CBidirMsg_RebroadcastSource struct {
	Eventsource      *int32 `protobuf:"varint,1,opt,name=eventsource" json:"eventsource,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CBidirMsg_RebroadcastSource) Reset()         { *m = CBidirMsg_RebroadcastSource{} }
func (m *CBidirMsg_RebroadcastSource) String() string { return proto.CompactTextString(m) }
func (*CBidirMsg_RebroadcastSource) ProtoMessage()    {}

func (m *CBidirMsg_RebroadcastSource) GetEventsource() int32 {
	if m != nil && m.Eventsource != nil {
		return *m.Eventsource
	}
	return 0
}

type CCLCMsg_ClientInfo struct {
	ServerCount      *uint32  `protobuf:"varint,1,opt,name=server_count" json:"server_count,omitempty"`
	IsHltv           *bool    `protobuf:"varint,2,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay         *bool    `protobuf:"varint,3,opt,name=is_replay" json:"is_replay,omitempty"`
	FriendsId        *uint32  `protobuf:"varint,4,opt,name=friends_id" json:"friends_id,omitempty"`
	CustomFiles      []uint32 `protobuf:"fixed32,5,rep,name=custom_files" json:"custom_files,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCLCMsg_ClientInfo) Reset()         { *m = CCLCMsg_ClientInfo{} }
func (m *CCLCMsg_ClientInfo) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientInfo) ProtoMessage()    {}

func (m *CCLCMsg_ClientInfo) GetServerCount() uint32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CCLCMsg_ClientInfo) GetFriendsId() uint32 {
	if m != nil && m.FriendsId != nil {
		return *m.FriendsId
	}
	return 0
}

func (m *CCLCMsg_ClientInfo) GetCustomFiles() []uint32 {
	if m != nil {
		return m.CustomFiles
	}
	return nil
}

type CCLCMsg_Move struct {
	NumBackupCommands *uint32 `protobuf:"varint,1,opt,name=num_backup_commands" json:"num_backup_commands,omitempty"`
	NumNewCommands    *uint32 `protobuf:"varint,2,opt,name=num_new_commands" json:"num_new_commands,omitempty"`
	Data              []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CCLCMsg_Move) Reset()         { *m = CCLCMsg_Move{} }
func (m *CCLCMsg_Move) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_Move) ProtoMessage()    {}

func (m *CCLCMsg_Move) GetNumBackupCommands() uint32 {
	if m != nil && m.NumBackupCommands != nil {
		return *m.NumBackupCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetNumNewCommands() uint32 {
	if m != nil && m.NumNewCommands != nil {
		return *m.NumNewCommands
	}
	return 0
}

func (m *CCLCMsg_Move) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CCLCMsg_VoiceData struct {
	Data             []byte            `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Xuid             *uint64           `protobuf:"fixed64,2,opt,name=xuid" json:"xuid,omitempty"`
	Format           *VoiceDataFormatT `protobuf:"varint,3,opt,name=format,enum=dota.VoiceDataFormatT,def=0" json:"format,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CCLCMsg_VoiceData) Reset()         { *m = CCLCMsg_VoiceData{} }
func (m *CCLCMsg_VoiceData) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_VoiceData) ProtoMessage()    {}

const Default_CCLCMsg_VoiceData_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_STEAM

func (m *CCLCMsg_VoiceData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CCLCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CCLCMsg_VoiceData) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CCLCMsg_VoiceData_Format
}

type CCLCMsg_BaselineAck struct {
	BaselineTick     *int32 `protobuf:"varint,1,opt,name=baseline_tick" json:"baseline_tick,omitempty"`
	BaselineNr       *int32 `protobuf:"varint,2,opt,name=baseline_nr" json:"baseline_nr,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_BaselineAck) Reset()         { *m = CCLCMsg_BaselineAck{} }
func (m *CCLCMsg_BaselineAck) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_BaselineAck) ProtoMessage()    {}

func (m *CCLCMsg_BaselineAck) GetBaselineTick() int32 {
	if m != nil && m.BaselineTick != nil {
		return *m.BaselineTick
	}
	return 0
}

func (m *CCLCMsg_BaselineAck) GetBaselineNr() int32 {
	if m != nil && m.BaselineNr != nil {
		return *m.BaselineNr
	}
	return 0
}

type CCLCMsg_ListenEvents struct {
	EventMask        []uint32 `protobuf:"fixed32,1,rep,name=event_mask" json:"event_mask,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CCLCMsg_ListenEvents) Reset()         { *m = CCLCMsg_ListenEvents{} }
func (m *CCLCMsg_ListenEvents) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ListenEvents) ProtoMessage()    {}

func (m *CCLCMsg_ListenEvents) GetEventMask() []uint32 {
	if m != nil {
		return m.EventMask
	}
	return nil
}

type CCLCMsg_RespondCvarValue struct {
	Cookie           *int32                 `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	StatusCode       *EQueryCvarValueStatus `protobuf:"varint,2,opt,name=status_code,enum=dota.EQueryCvarValueStatus,def=0" json:"status_code,omitempty"`
	Name             *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Value            *string                `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CCLCMsg_RespondCvarValue) Reset()         { *m = CCLCMsg_RespondCvarValue{} }
func (m *CCLCMsg_RespondCvarValue) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_RespondCvarValue) ProtoMessage()    {}

const Default_CCLCMsg_RespondCvarValue_StatusCode EQueryCvarValueStatus = EQueryCvarValueStatus_eQueryCvarValueStatus_ValueIntact

func (m *CCLCMsg_RespondCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CCLCMsg_RespondCvarValue) GetStatusCode() EQueryCvarValueStatus {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return Default_CCLCMsg_RespondCvarValue_StatusCode
}

func (m *CCLCMsg_RespondCvarValue) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CCLCMsg_RespondCvarValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CCLCMsg_FileCRCCheck struct {
	Path             *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Filename         *string `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	Crc              *uint32 `protobuf:"fixed32,5,opt,name=crc" json:"crc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CCLCMsg_FileCRCCheck) Reset()         { *m = CCLCMsg_FileCRCCheck{} }
func (m *CCLCMsg_FileCRCCheck) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_FileCRCCheck) ProtoMessage()    {}

func (m *CCLCMsg_FileCRCCheck) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CCLCMsg_FileCRCCheck) GetCrc() uint32 {
	if m != nil && m.Crc != nil {
		return *m.Crc
	}
	return 0
}

type CCLCMsg_LoadingProgress struct {
	Progress         *int32 `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_LoadingProgress) Reset()         { *m = CCLCMsg_LoadingProgress{} }
func (m *CCLCMsg_LoadingProgress) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_LoadingProgress) ProtoMessage()    {}

func (m *CCLCMsg_LoadingProgress) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

type CCLCMsg_SplitPlayerConnect struct {
	Playername       *string     `protobuf:"bytes,1,opt,name=playername" json:"playername,omitempty"`
	Convars          *CMsg_CVars `protobuf:"bytes,2,opt,name=convars" json:"convars,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CCLCMsg_SplitPlayerConnect) Reset()         { *m = CCLCMsg_SplitPlayerConnect{} }
func (m *CCLCMsg_SplitPlayerConnect) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_SplitPlayerConnect) ProtoMessage()    {}

func (m *CCLCMsg_SplitPlayerConnect) GetPlayername() string {
	if m != nil && m.Playername != nil {
		return *m.Playername
	}
	return ""
}

func (m *CCLCMsg_SplitPlayerConnect) GetConvars() *CMsg_CVars {
	if m != nil {
		return m.Convars
	}
	return nil
}

type CCLCMsg_ClientMessage struct {
	MsgType          *int32 `protobuf:"varint,1,opt,name=msg_type" json:"msg_type,omitempty"`
	Data             []byte `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ClientMessage) Reset()         { *m = CCLCMsg_ClientMessage{} }
func (m *CCLCMsg_ClientMessage) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ClientMessage) ProtoMessage()    {}

func (m *CCLCMsg_ClientMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CCLCMsg_ClientMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CCLCMsg_SplitPlayerDisconnect struct {
	Slot             *int32 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_SplitPlayerDisconnect) Reset()         { *m = CCLCMsg_SplitPlayerDisconnect{} }
func (m *CCLCMsg_SplitPlayerDisconnect) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_SplitPlayerDisconnect) ProtoMessage()    {}

func (m *CCLCMsg_SplitPlayerDisconnect) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type CCLCMsg_ServerStatus struct {
	Simplified       *bool  `protobuf:"varint,1,opt,name=simplified" json:"simplified,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ServerStatus) Reset()         { *m = CCLCMsg_ServerStatus{} }
func (m *CCLCMsg_ServerStatus) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ServerStatus) ProtoMessage()    {}

func (m *CCLCMsg_ServerStatus) GetSimplified() bool {
	if m != nil && m.Simplified != nil {
		return *m.Simplified
	}
	return false
}

type CCLCMsg_ServerPing struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_ServerPing) Reset()         { *m = CCLCMsg_ServerPing{} }
func (m *CCLCMsg_ServerPing) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_ServerPing) ProtoMessage()    {}

type CCLCMsg_RequestPause struct {
	PauseType        *RequestPauseT `protobuf:"varint,1,opt,name=pause_type,enum=dota.RequestPauseT,def=0" json:"pause_type,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *CCLCMsg_RequestPause) Reset()         { *m = CCLCMsg_RequestPause{} }
func (m *CCLCMsg_RequestPause) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_RequestPause) ProtoMessage()    {}

const Default_CCLCMsg_RequestPause_PauseType RequestPauseT = RequestPauseT_RP_PAUSE

func (m *CCLCMsg_RequestPause) GetPauseType() RequestPauseT {
	if m != nil && m.PauseType != nil {
		return *m.PauseType
	}
	return Default_CCLCMsg_RequestPause_PauseType
}

type CCLCMsg_CmdKeyValues struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CCLCMsg_CmdKeyValues) Reset()         { *m = CCLCMsg_CmdKeyValues{} }
func (m *CCLCMsg_CmdKeyValues) String() string { return proto.CompactTextString(m) }
func (*CCLCMsg_CmdKeyValues) ProtoMessage()    {}

func (m *CCLCMsg_CmdKeyValues) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CSVCMsg_ServerInfo struct {
	Protocol            *int32                            `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
	ServerCount         *int32                            `protobuf:"varint,2,opt,name=server_count" json:"server_count,omitempty"`
	IsDedicated         *bool                             `protobuf:"varint,3,opt,name=is_dedicated" json:"is_dedicated,omitempty"`
	IsHltv              *bool                             `protobuf:"varint,4,opt,name=is_hltv" json:"is_hltv,omitempty"`
	IsReplay            *bool                             `protobuf:"varint,5,opt,name=is_replay" json:"is_replay,omitempty"`
	COs                 *int32                            `protobuf:"varint,6,opt,name=c_os" json:"c_os,omitempty"`
	MaxClients          *int32                            `protobuf:"varint,10,opt,name=max_clients" json:"max_clients,omitempty"`
	MaxClasses          *int32                            `protobuf:"varint,11,opt,name=max_classes" json:"max_classes,omitempty"`
	PlayerSlot          *int32                            `protobuf:"varint,12,opt,name=player_slot" json:"player_slot,omitempty"`
	TickInterval        *float32                          `protobuf:"fixed32,13,opt,name=tick_interval" json:"tick_interval,omitempty"`
	GameDir             *string                           `protobuf:"bytes,14,opt,name=game_dir" json:"game_dir,omitempty"`
	MapName             *string                           `protobuf:"bytes,15,opt,name=map_name" json:"map_name,omitempty"`
	SkyName             *string                           `protobuf:"bytes,16,opt,name=sky_name" json:"sky_name,omitempty"`
	HostName            *string                           `protobuf:"bytes,17,opt,name=host_name" json:"host_name,omitempty"`
	GameSessionConfig   *CSVCMsg_GameSessionConfiguration `protobuf:"bytes,18,opt,name=game_session_config" json:"game_session_config,omitempty"`
	GameSessionManifest []byte                            `protobuf:"bytes,19,opt,name=game_session_manifest" json:"game_session_manifest,omitempty"`
	AddonName           *string                           `protobuf:"bytes,20,opt,name=addon_name" json:"addon_name,omitempty"`
	XXX_unrecognized    []byte                            `json:"-"`
}

func (m *CSVCMsg_ServerInfo) Reset()         { *m = CSVCMsg_ServerInfo{} }
func (m *CSVCMsg_ServerInfo) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ServerInfo) ProtoMessage()    {}

func (m *CSVCMsg_ServerInfo) GetProtocol() int32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetServerCount() int32 {
	if m != nil && m.ServerCount != nil {
		return *m.ServerCount
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetIsDedicated() bool {
	if m != nil && m.IsDedicated != nil {
		return *m.IsDedicated
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsHltv() bool {
	if m != nil && m.IsHltv != nil {
		return *m.IsHltv
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetIsReplay() bool {
	if m != nil && m.IsReplay != nil {
		return *m.IsReplay
	}
	return false
}

func (m *CSVCMsg_ServerInfo) GetCOs() int32 {
	if m != nil && m.COs != nil {
		return *m.COs
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClients() int32 {
	if m != nil && m.MaxClients != nil {
		return *m.MaxClients
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetMaxClasses() int32 {
	if m != nil && m.MaxClasses != nil {
		return *m.MaxClasses
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetPlayerSlot() int32 {
	if m != nil && m.PlayerSlot != nil {
		return *m.PlayerSlot
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetTickInterval() float32 {
	if m != nil && m.TickInterval != nil {
		return *m.TickInterval
	}
	return 0
}

func (m *CSVCMsg_ServerInfo) GetGameDir() string {
	if m != nil && m.GameDir != nil {
		return *m.GameDir
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetMapName() string {
	if m != nil && m.MapName != nil {
		return *m.MapName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetSkyName() string {
	if m != nil && m.SkyName != nil {
		return *m.SkyName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *CSVCMsg_ServerInfo) GetGameSessionConfig() *CSVCMsg_GameSessionConfiguration {
	if m != nil {
		return m.GameSessionConfig
	}
	return nil
}

func (m *CSVCMsg_ServerInfo) GetGameSessionManifest() []byte {
	if m != nil {
		return m.GameSessionManifest
	}
	return nil
}

func (m *CSVCMsg_ServerInfo) GetAddonName() string {
	if m != nil && m.AddonName != nil {
		return *m.AddonName
	}
	return ""
}

type CSVCMsg_ClassInfo struct {
	CreateOnClient   *bool                      `protobuf:"varint,1,opt,name=create_on_client" json:"create_on_client,omitempty"`
	Classes          []*CSVCMsg_ClassInfoClassT `protobuf:"bytes,2,rep,name=classes" json:"classes,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *CSVCMsg_ClassInfo) Reset()         { *m = CSVCMsg_ClassInfo{} }
func (m *CSVCMsg_ClassInfo) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfo) ProtoMessage()    {}

func (m *CSVCMsg_ClassInfo) GetCreateOnClient() bool {
	if m != nil && m.CreateOnClient != nil {
		return *m.CreateOnClient
	}
	return false
}

func (m *CSVCMsg_ClassInfo) GetClasses() []*CSVCMsg_ClassInfoClassT {
	if m != nil {
		return m.Classes
	}
	return nil
}

type CSVCMsg_ClassInfoClassT struct {
	ClassId          *int32  `protobuf:"varint,1,opt,name=class_id" json:"class_id,omitempty"`
	ClassName        *string `protobuf:"bytes,2,opt,name=class_name" json:"class_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ClassInfoClassT) Reset()         { *m = CSVCMsg_ClassInfoClassT{} }
func (m *CSVCMsg_ClassInfoClassT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClassInfoClassT) ProtoMessage()    {}

func (m *CSVCMsg_ClassInfoClassT) GetClassId() int32 {
	if m != nil && m.ClassId != nil {
		return *m.ClassId
	}
	return 0
}

func (m *CSVCMsg_ClassInfoClassT) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

type CSVCMsg_SetPause struct {
	Paused           *bool  `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetPause) Reset()         { *m = CSVCMsg_SetPause{} }
func (m *CSVCMsg_SetPause) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SetPause) ProtoMessage()    {}

func (m *CSVCMsg_SetPause) GetPaused() bool {
	if m != nil && m.Paused != nil {
		return *m.Paused
	}
	return false
}

type CSVCMsg_VoiceInit struct {
	Quality          *int32  `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	Codec            *string `protobuf:"bytes,2,opt,name=codec" json:"codec,omitempty"`
	Version          *int32  `protobuf:"varint,3,opt,name=version,def=0" json:"version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_VoiceInit) Reset()         { *m = CSVCMsg_VoiceInit{} }
func (m *CSVCMsg_VoiceInit) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceInit) ProtoMessage()    {}

const Default_CSVCMsg_VoiceInit_Version int32 = 0

func (m *CSVCMsg_VoiceInit) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *CSVCMsg_VoiceInit) GetCodec() string {
	if m != nil && m.Codec != nil {
		return *m.Codec
	}
	return ""
}

func (m *CSVCMsg_VoiceInit) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_CSVCMsg_VoiceInit_Version
}

type CSVCMsg_Print struct {
	Text             *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_Print) Reset()         { *m = CSVCMsg_Print{} }
func (m *CSVCMsg_Print) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Print) ProtoMessage()    {}

func (m *CSVCMsg_Print) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type CSVCMsg_StopSound struct {
	Guid             *uint32 `protobuf:"fixed32,1,opt,name=guid" json:"guid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_StopSound) Reset()         { *m = CSVCMsg_StopSound{} }
func (m *CSVCMsg_StopSound) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_StopSound) ProtoMessage()    {}

func (m *CSVCMsg_StopSound) GetGuid() uint32 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

type CSVCMsg_Sounds struct {
	ReliableSound    *bool                       `protobuf:"varint,1,opt,name=reliable_sound" json:"reliable_sound,omitempty"`
	Sounds           []*CSVCMsg_SoundsSounddataT `protobuf:"bytes,2,rep,name=sounds" json:"sounds,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *CSVCMsg_Sounds) Reset()         { *m = CSVCMsg_Sounds{} }
func (m *CSVCMsg_Sounds) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Sounds) ProtoMessage()    {}

func (m *CSVCMsg_Sounds) GetReliableSound() bool {
	if m != nil && m.ReliableSound != nil {
		return *m.ReliableSound
	}
	return false
}

func (m *CSVCMsg_Sounds) GetSounds() []*CSVCMsg_SoundsSounddataT {
	if m != nil {
		return m.Sounds
	}
	return nil
}

type CSVCMsg_SoundsSounddataT struct {
	OriginX          *int32   `protobuf:"zigzag32,1,opt,name=origin_x" json:"origin_x,omitempty"`
	OriginY          *int32   `protobuf:"zigzag32,2,opt,name=origin_y" json:"origin_y,omitempty"`
	OriginZ          *int32   `protobuf:"zigzag32,3,opt,name=origin_z" json:"origin_z,omitempty"`
	Volume           *uint32  `protobuf:"varint,4,opt,name=volume" json:"volume,omitempty"`
	DelayValue       *float32 `protobuf:"fixed32,5,opt,name=delay_value" json:"delay_value,omitempty"`
	SequenceNumber   *int32   `protobuf:"varint,6,opt,name=sequence_number" json:"sequence_number,omitempty"`
	EntityIndex      *int32   `protobuf:"varint,7,opt,name=entity_index" json:"entity_index,omitempty"`
	Channel          *int32   `protobuf:"varint,8,opt,name=channel" json:"channel,omitempty"`
	Pitch            *int32   `protobuf:"varint,9,opt,name=pitch" json:"pitch,omitempty"`
	Flags            *int32   `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SoundNum         *uint32  `protobuf:"varint,11,opt,name=sound_num" json:"sound_num,omitempty"`
	SoundNumHandle   *uint32  `protobuf:"fixed32,12,opt,name=sound_num_handle" json:"sound_num_handle,omitempty"`
	SpeakerEntity    *int32   `protobuf:"varint,13,opt,name=speaker_entity" json:"speaker_entity,omitempty"`
	RandomSeed       *int32   `protobuf:"varint,14,opt,name=random_seed" json:"random_seed,omitempty"`
	SoundLevel       *int32   `protobuf:"varint,15,opt,name=sound_level" json:"sound_level,omitempty"`
	IsSentence       *bool    `protobuf:"varint,16,opt,name=is_sentence" json:"is_sentence,omitempty"`
	IsAmbient        *bool    `protobuf:"varint,17,opt,name=is_ambient" json:"is_ambient,omitempty"`
	Guid             *uint32  `protobuf:"varint,18,opt,name=guid" json:"guid,omitempty"`
	SoundResourceId  *uint64  `protobuf:"fixed64,19,opt,name=sound_resource_id" json:"sound_resource_id,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CSVCMsg_SoundsSounddataT) Reset()         { *m = CSVCMsg_SoundsSounddataT{} }
func (m *CSVCMsg_SoundsSounddataT) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SoundsSounddataT) ProtoMessage()    {}

func (m *CSVCMsg_SoundsSounddataT) GetOriginX() int32 {
	if m != nil && m.OriginX != nil {
		return *m.OriginX
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginY() int32 {
	if m != nil && m.OriginY != nil {
		return *m.OriginY
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetOriginZ() int32 {
	if m != nil && m.OriginZ != nil {
		return *m.OriginZ
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetDelayValue() float32 {
	if m != nil && m.DelayValue != nil {
		return *m.DelayValue
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSequenceNumber() int32 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetChannel() int32 {
	if m != nil && m.Channel != nil {
		return *m.Channel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetPitch() int32 {
	if m != nil && m.Pitch != nil {
		return *m.Pitch
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNum() uint32 {
	if m != nil && m.SoundNum != nil {
		return *m.SoundNum
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundNumHandle() uint32 {
	if m != nil && m.SoundNumHandle != nil {
		return *m.SoundNumHandle
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSpeakerEntity() int32 {
	if m != nil && m.SpeakerEntity != nil {
		return *m.SpeakerEntity
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetRandomSeed() int32 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundLevel() int32 {
	if m != nil && m.SoundLevel != nil {
		return *m.SoundLevel
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetIsSentence() bool {
	if m != nil && m.IsSentence != nil {
		return *m.IsSentence
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetIsAmbient() bool {
	if m != nil && m.IsAmbient != nil {
		return *m.IsAmbient
	}
	return false
}

func (m *CSVCMsg_SoundsSounddataT) GetGuid() uint32 {
	if m != nil && m.Guid != nil {
		return *m.Guid
	}
	return 0
}

func (m *CSVCMsg_SoundsSounddataT) GetSoundResourceId() uint64 {
	if m != nil && m.SoundResourceId != nil {
		return *m.SoundResourceId
	}
	return 0
}

type CSVCMsg_Prefetch struct {
	ResourceType     *PrefetchType `protobuf:"varint,1,opt,name=resource_type,enum=dota.PrefetchType,def=0" json:"resource_type,omitempty"`
	StringNumber     *int32        `protobuf:"varint,2,opt,name=string_number" json:"string_number,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CSVCMsg_Prefetch) Reset()         { *m = CSVCMsg_Prefetch{} }
func (m *CSVCMsg_Prefetch) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Prefetch) ProtoMessage()    {}

const Default_CSVCMsg_Prefetch_ResourceType PrefetchType = PrefetchType_PFT_SOUND

func (m *CSVCMsg_Prefetch) GetResourceType() PrefetchType {
	if m != nil && m.ResourceType != nil {
		return *m.ResourceType
	}
	return Default_CSVCMsg_Prefetch_ResourceType
}

func (m *CSVCMsg_Prefetch) GetStringNumber() int32 {
	if m != nil && m.StringNumber != nil {
		return *m.StringNumber
	}
	return 0
}

type CSVCMsg_SetView struct {
	EntityIndex      *int32 `protobuf:"varint,1,opt,name=entity_index" json:"entity_index,omitempty"`
	Slot             *int32 `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_SetView) Reset()         { *m = CSVCMsg_SetView{} }
func (m *CSVCMsg_SetView) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SetView) ProtoMessage()    {}

func (m *CSVCMsg_SetView) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_SetView) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

type CSVCMsg_CrosshairAngle struct {
	Angle            *CMsgQAngle `protobuf:"bytes,1,opt,name=angle" json:"angle,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CSVCMsg_CrosshairAngle) Reset()         { *m = CSVCMsg_CrosshairAngle{} }
func (m *CSVCMsg_CrosshairAngle) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CrosshairAngle) ProtoMessage()    {}

func (m *CSVCMsg_CrosshairAngle) GetAngle() *CMsgQAngle {
	if m != nil {
		return m.Angle
	}
	return nil
}

type CSVCMsg_BSPDecal struct {
	Pos               *CMsgVector `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	DecalTextureIndex *int32      `protobuf:"varint,2,opt,name=decal_texture_index" json:"decal_texture_index,omitempty"`
	EntityIndex       *int32      `protobuf:"varint,3,opt,name=entity_index" json:"entity_index,omitempty"`
	ModelIndex        *int32      `protobuf:"varint,4,opt,name=model_index" json:"model_index,omitempty"`
	LowPriority       *bool       `protobuf:"varint,5,opt,name=low_priority" json:"low_priority,omitempty"`
	XXX_unrecognized  []byte      `json:"-"`
}

func (m *CSVCMsg_BSPDecal) Reset()         { *m = CSVCMsg_BSPDecal{} }
func (m *CSVCMsg_BSPDecal) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_BSPDecal) ProtoMessage()    {}

func (m *CSVCMsg_BSPDecal) GetPos() *CMsgVector {
	if m != nil {
		return m.Pos
	}
	return nil
}

func (m *CSVCMsg_BSPDecal) GetDecalTextureIndex() int32 {
	if m != nil && m.DecalTextureIndex != nil {
		return *m.DecalTextureIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetEntityIndex() int32 {
	if m != nil && m.EntityIndex != nil {
		return *m.EntityIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetModelIndex() int32 {
	if m != nil && m.ModelIndex != nil {
		return *m.ModelIndex
	}
	return 0
}

func (m *CSVCMsg_BSPDecal) GetLowPriority() bool {
	if m != nil && m.LowPriority != nil {
		return *m.LowPriority
	}
	return false
}

type CSVCMsg_SplitScreen struct {
	Type             *ESplitScreenMessageType `protobuf:"varint,1,opt,name=type,enum=dota.ESplitScreenMessageType,def=0" json:"type,omitempty"`
	Slot             *int32                   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	PlayerIndex      *int32                   `protobuf:"varint,3,opt,name=player_index" json:"player_index,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *CSVCMsg_SplitScreen) Reset()         { *m = CSVCMsg_SplitScreen{} }
func (m *CSVCMsg_SplitScreen) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_SplitScreen) ProtoMessage()    {}

const Default_CSVCMsg_SplitScreen_Type ESplitScreenMessageType = ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER

func (m *CSVCMsg_SplitScreen) GetType() ESplitScreenMessageType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_CSVCMsg_SplitScreen_Type
}

func (m *CSVCMsg_SplitScreen) GetSlot() int32 {
	if m != nil && m.Slot != nil {
		return *m.Slot
	}
	return 0
}

func (m *CSVCMsg_SplitScreen) GetPlayerIndex() int32 {
	if m != nil && m.PlayerIndex != nil {
		return *m.PlayerIndex
	}
	return 0
}

type CSVCMsg_GetCvarValue struct {
	Cookie           *int32  `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	CvarName         *string `protobuf:"bytes,2,opt,name=cvar_name" json:"cvar_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_GetCvarValue) Reset()         { *m = CSVCMsg_GetCvarValue{} }
func (m *CSVCMsg_GetCvarValue) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_GetCvarValue) ProtoMessage()    {}

func (m *CSVCMsg_GetCvarValue) GetCookie() int32 {
	if m != nil && m.Cookie != nil {
		return *m.Cookie
	}
	return 0
}

func (m *CSVCMsg_GetCvarValue) GetCvarName() string {
	if m != nil && m.CvarName != nil {
		return *m.CvarName
	}
	return ""
}

type CSVCMsg_Menu struct {
	DialogType       *DIALOG_TYPE `protobuf:"varint,1,opt,name=dialog_type,enum=dota.DIALOG_TYPE,def=0" json:"dialog_type,omitempty"`
	MenuKeyValues    []byte       `protobuf:"bytes,2,opt,name=menu_key_values" json:"menu_key_values,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CSVCMsg_Menu) Reset()         { *m = CSVCMsg_Menu{} }
func (m *CSVCMsg_Menu) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_Menu) ProtoMessage()    {}

const Default_CSVCMsg_Menu_DialogType DIALOG_TYPE = DIALOG_TYPE_DIALOG_MSG

func (m *CSVCMsg_Menu) GetDialogType() DIALOG_TYPE {
	if m != nil && m.DialogType != nil {
		return *m.DialogType
	}
	return Default_CSVCMsg_Menu_DialogType
}

func (m *CSVCMsg_Menu) GetMenuKeyValues() []byte {
	if m != nil {
		return m.MenuKeyValues
	}
	return nil
}

type CSVCMsg_PacketEntities struct {
	MaxEntries             *int32  `protobuf:"varint,1,opt,name=max_entries" json:"max_entries,omitempty"`
	UpdatedEntries         *int32  `protobuf:"varint,2,opt,name=updated_entries" json:"updated_entries,omitempty"`
	IsDelta                *bool   `protobuf:"varint,3,opt,name=is_delta" json:"is_delta,omitempty"`
	UpdateBaseline         *bool   `protobuf:"varint,4,opt,name=update_baseline" json:"update_baseline,omitempty"`
	Baseline               *bool   `protobuf:"varint,5,opt,name=baseline" json:"baseline,omitempty"`
	DeltaFrom              *int32  `protobuf:"varint,6,opt,name=delta_from" json:"delta_from,omitempty"`
	ActiveSpawngroupHandle *uint32 `protobuf:"varint,7,opt,name=active_spawngroup_handle" json:"active_spawngroup_handle,omitempty"`
	EntityData             []byte  `protobuf:"bytes,8,opt,name=entity_data" json:"entity_data,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CSVCMsg_PacketEntities) Reset()         { *m = CSVCMsg_PacketEntities{} }
func (m *CSVCMsg_PacketEntities) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketEntities) ProtoMessage()    {}

func (m *CSVCMsg_PacketEntities) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetUpdatedEntries() int32 {
	if m != nil && m.UpdatedEntries != nil {
		return *m.UpdatedEntries
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetIsDelta() bool {
	if m != nil && m.IsDelta != nil {
		return *m.IsDelta
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetUpdateBaseline() bool {
	if m != nil && m.UpdateBaseline != nil {
		return *m.UpdateBaseline
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetBaseline() bool {
	if m != nil && m.Baseline != nil {
		return *m.Baseline
	}
	return false
}

func (m *CSVCMsg_PacketEntities) GetDeltaFrom() int32 {
	if m != nil && m.DeltaFrom != nil {
		return *m.DeltaFrom
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetActiveSpawngroupHandle() uint32 {
	if m != nil && m.ActiveSpawngroupHandle != nil {
		return *m.ActiveSpawngroupHandle
	}
	return 0
}

func (m *CSVCMsg_PacketEntities) GetEntityData() []byte {
	if m != nil {
		return m.EntityData
	}
	return nil
}

type CSVCMsg_ClearAllStringTables struct {
	Mapname          *string `protobuf:"bytes,1,opt,name=mapname" json:"mapname,omitempty"`
	MapCrc           *uint32 `protobuf:"varint,2,opt,name=map_crc" json:"map_crc,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CSVCMsg_ClearAllStringTables) Reset()         { *m = CSVCMsg_ClearAllStringTables{} }
func (m *CSVCMsg_ClearAllStringTables) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_ClearAllStringTables) ProtoMessage()    {}

func (m *CSVCMsg_ClearAllStringTables) GetMapname() string {
	if m != nil && m.Mapname != nil {
		return *m.Mapname
	}
	return ""
}

func (m *CSVCMsg_ClearAllStringTables) GetMapCrc() uint32 {
	if m != nil && m.MapCrc != nil {
		return *m.MapCrc
	}
	return 0
}

type CSVCMsg_CreateStringTable struct {
	Name              *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	MaxEntries        *int32  `protobuf:"varint,2,opt,name=max_entries" json:"max_entries,omitempty"`
	NumEntries        *int32  `protobuf:"varint,3,opt,name=num_entries" json:"num_entries,omitempty"`
	UserDataFixedSize *bool   `protobuf:"varint,4,opt,name=user_data_fixed_size" json:"user_data_fixed_size,omitempty"`
	DataCompressed    *bool   `protobuf:"varint,5,opt,name=data_compressed" json:"data_compressed,omitempty"`
	UserDataSize      *int32  `protobuf:"varint,6,opt,name=user_data_size" json:"user_data_size,omitempty"`
	UserDataSizeBits  *int32  `protobuf:"varint,7,opt,name=user_data_size_bits" json:"user_data_size_bits,omitempty"`
	Flags             *int32  `protobuf:"varint,8,opt,name=flags" json:"flags,omitempty"`
	StringData        []byte  `protobuf:"bytes,9,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CSVCMsg_CreateStringTable) Reset()         { *m = CSVCMsg_CreateStringTable{} }
func (m *CSVCMsg_CreateStringTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CreateStringTable) ProtoMessage()    {}

func (m *CSVCMsg_CreateStringTable) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CSVCMsg_CreateStringTable) GetMaxEntries() int32 {
	if m != nil && m.MaxEntries != nil {
		return *m.MaxEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetNumEntries() int32 {
	if m != nil && m.NumEntries != nil {
		return *m.NumEntries
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataFixedSize() bool {
	if m != nil && m.UserDataFixedSize != nil {
		return *m.UserDataFixedSize
	}
	return false
}

func (m *CSVCMsg_CreateStringTable) GetDataCompressed() bool {
	if m != nil && m.DataCompressed != nil {
		return *m.DataCompressed
	}
	return false
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSize() int32 {
	if m != nil && m.UserDataSize != nil {
		return *m.UserDataSize
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetUserDataSizeBits() int32 {
	if m != nil && m.UserDataSizeBits != nil {
		return *m.UserDataSizeBits
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetFlags() int32 {
	if m != nil && m.Flags != nil {
		return *m.Flags
	}
	return 0
}

func (m *CSVCMsg_CreateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_UpdateStringTable struct {
	TableId           *int32 `protobuf:"varint,1,opt,name=table_id" json:"table_id,omitempty"`
	NumChangedEntries *int32 `protobuf:"varint,2,opt,name=num_changed_entries" json:"num_changed_entries,omitempty"`
	StringData        []byte `protobuf:"bytes,3,opt,name=string_data" json:"string_data,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *CSVCMsg_UpdateStringTable) Reset()         { *m = CSVCMsg_UpdateStringTable{} }
func (m *CSVCMsg_UpdateStringTable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_UpdateStringTable) ProtoMessage()    {}

func (m *CSVCMsg_UpdateStringTable) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetNumChangedEntries() int32 {
	if m != nil && m.NumChangedEntries != nil {
		return *m.NumChangedEntries
	}
	return 0
}

func (m *CSVCMsg_UpdateStringTable) GetStringData() []byte {
	if m != nil {
		return m.StringData
	}
	return nil
}

type CSVCMsg_VoiceData struct {
	Client           *int32            `protobuf:"varint,1,opt,name=client" json:"client,omitempty"`
	Proximity        *bool             `protobuf:"varint,2,opt,name=proximity" json:"proximity,omitempty"`
	Xuid             *uint64           `protobuf:"fixed64,3,opt,name=xuid" json:"xuid,omitempty"`
	AudibleMask      *int32            `protobuf:"varint,4,opt,name=audible_mask" json:"audible_mask,omitempty"`
	VoiceData        []byte            `protobuf:"bytes,5,opt,name=voice_data" json:"voice_data,omitempty"`
	Format           *VoiceDataFormatT `protobuf:"varint,6,opt,name=format,enum=dota.VoiceDataFormatT,def=0" json:"format,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSVCMsg_VoiceData) Reset()         { *m = CSVCMsg_VoiceData{} }
func (m *CSVCMsg_VoiceData) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_VoiceData) ProtoMessage()    {}

const Default_CSVCMsg_VoiceData_Format VoiceDataFormatT = VoiceDataFormatT_VOICEDATA_FORMAT_STEAM

func (m *CSVCMsg_VoiceData) GetClient() int32 {
	if m != nil && m.Client != nil {
		return *m.Client
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetProximity() bool {
	if m != nil && m.Proximity != nil {
		return *m.Proximity
	}
	return false
}

func (m *CSVCMsg_VoiceData) GetXuid() uint64 {
	if m != nil && m.Xuid != nil {
		return *m.Xuid
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetAudibleMask() int32 {
	if m != nil && m.AudibleMask != nil {
		return *m.AudibleMask
	}
	return 0
}

func (m *CSVCMsg_VoiceData) GetVoiceData() []byte {
	if m != nil {
		return m.VoiceData
	}
	return nil
}

func (m *CSVCMsg_VoiceData) GetFormat() VoiceDataFormatT {
	if m != nil && m.Format != nil {
		return *m.Format
	}
	return Default_CSVCMsg_VoiceData_Format
}

type CSVCMsg_CmdKeyValues struct {
	Data             []byte `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_CmdKeyValues) Reset()         { *m = CSVCMsg_CmdKeyValues{} }
func (m *CSVCMsg_CmdKeyValues) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_CmdKeyValues) ProtoMessage()    {}

func (m *CSVCMsg_CmdKeyValues) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgIPCAddress struct {
	ComputerGuid     *uint64 `protobuf:"fixed64,1,opt,name=computer_guid" json:"computer_guid,omitempty"`
	ProcessId        *uint32 `protobuf:"varint,2,opt,name=process_id" json:"process_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CMsgIPCAddress) Reset()         { *m = CMsgIPCAddress{} }
func (m *CMsgIPCAddress) String() string { return proto.CompactTextString(m) }
func (*CMsgIPCAddress) ProtoMessage()    {}

func (m *CMsgIPCAddress) GetComputerGuid() uint64 {
	if m != nil && m.ComputerGuid != nil {
		return *m.ComputerGuid
	}
	return 0
}

func (m *CMsgIPCAddress) GetProcessId() uint32 {
	if m != nil && m.ProcessId != nil {
		return *m.ProcessId
	}
	return 0
}

type CMsgServerPeer struct {
	Clientid         *int32          `protobuf:"varint,1,opt,name=clientid" json:"clientid,omitempty"`
	Steamid          *uint64         `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	Ipc              *CMsgIPCAddress `protobuf:"bytes,3,opt,name=ipc" json:"ipc,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CMsgServerPeer) Reset()         { *m = CMsgServerPeer{} }
func (m *CMsgServerPeer) String() string { return proto.CompactTextString(m) }
func (*CMsgServerPeer) ProtoMessage()    {}

func (m *CMsgServerPeer) GetClientid() int32 {
	if m != nil && m.Clientid != nil {
		return *m.Clientid
	}
	return 0
}

func (m *CMsgServerPeer) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CMsgServerPeer) GetIpc() *CMsgIPCAddress {
	if m != nil {
		return m.Ipc
	}
	return nil
}

type CSVCMsg_PeerList struct {
	Peer             []*CMsgServerPeer `protobuf:"bytes,1,rep,name=peer" json:"peer,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CSVCMsg_PeerList) Reset()         { *m = CSVCMsg_PeerList{} }
func (m *CSVCMsg_PeerList) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PeerList) ProtoMessage()    {}

func (m *CSVCMsg_PeerList) GetPeer() []*CMsgServerPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type CSVCMsg_PacketReliable struct {
	Tick             *int32 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	State            *bool  `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSVCMsg_PacketReliable) Reset()         { *m = CSVCMsg_PacketReliable{} }
func (m *CSVCMsg_PacketReliable) String() string { return proto.CompactTextString(m) }
func (*CSVCMsg_PacketReliable) ProtoMessage()    {}

func (m *CSVCMsg_PacketReliable) GetTick() int32 {
	if m != nil && m.Tick != nil {
		return *m.Tick
	}
	return 0
}

func (m *CSVCMsg_PacketReliable) GetState() bool {
	if m != nil && m.State != nil {
		return *m.State
	}
	return false
}

func init() {
	proto.RegisterEnum("dota.Bidirectional_Messages", Bidirectional_Messages_name, Bidirectional_Messages_value)
	proto.RegisterEnum("dota.CLC_Messages", CLC_Messages_name, CLC_Messages_value)
	proto.RegisterEnum("dota.SVC_Messages", SVC_Messages_name, SVC_Messages_value)
	proto.RegisterEnum("dota.SVC_Messages_LowFrequency", SVC_Messages_LowFrequency_name, SVC_Messages_LowFrequency_value)
	proto.RegisterEnum("dota.VoiceDataFormatT", VoiceDataFormatT_name, VoiceDataFormatT_value)
	proto.RegisterEnum("dota.EQueryCvarValueStatus", EQueryCvarValueStatus_name, EQueryCvarValueStatus_value)
	proto.RegisterEnum("dota.RequestPauseT", RequestPauseT_name, RequestPauseT_value)
	proto.RegisterEnum("dota.PrefetchType", PrefetchType_name, PrefetchType_value)
	proto.RegisterEnum("dota.ESplitScreenMessageType", ESplitScreenMessageType_name, ESplitScreenMessageType_value)
	proto.RegisterEnum("dota.DIALOG_TYPE", DIALOG_TYPE_name, DIALOG_TYPE_value)
}
