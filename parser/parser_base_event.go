// NOTE: This file is generated by tool/update_pbem.rb
package parser

import (
	"github.com/golang/protobuf/proto"
	"github.com/davecgh/go-spew/spew"
	"github.com/dotabuff/sange/dota"
)

func (p *Parser) AsBaseEvent(commandName string) (proto.Message, error) {
	switch commandName {
	case "DEM_FileHeader":
		return &dota.CDemoFileHeader{}, nil
	case "DEM_SignonPacket":
		return &SignonPacket{}, nil
	default:
		return nil, spew.Errorf("BaseEvent not found: %s", commandName)
	}
}

func (p *Parser) AsBaseEventNETSVC(value int) (proto.Message, error) {
	switch value {
	default:
		return nil, spew.Errorf("BaseEventNETSVC not found: %d", value)
	}
}

func (p *Parser) AsBaseEventBUMDUM(value int) (proto.Message, error) {
	switch value {
	default:
		return nil, spew.Errorf("BaseEventBUMDUM not found: %d", value)
	}
}

/*
func (p *Parser) AsBaseEvent(commandName string) (proto.Message, error) {
		switch commandName {
		case "DEM_SignonPacket":
			return &SignonPacket{}, nil
		case "DEM_Stop":
			return &dota.CDemoStop{}, nil
		case "DEM_FileHeader":
			return &dota.CDemoFileHeader{}, nil
		case "DEM_FileInfo":
			return &dota.CDemoFileInfo{}, nil
		case "DEM_SyncTick":
			return &dota.CDemoSyncTick{}, nil
		case "DEM_SendTables":
			return &dota.CDemoSendTables{}, nil
		case "DEM_ClassInfo":
			return &dota.CDemoClassInfo{}, nil
		case "DEM_StringTables":
			return &dota.CDemoStringTables{}, nil
		case "DEM_Packet":
			return &dota.CDemoPacket{}, nil
		case "DEM_ConsoleCmd":
			return &dota.CDemoConsoleCmd{}, nil
		case "DEM_CustomData":
			return &dota.CDemoCustomData{}, nil
		case "DEM_CustomDataCallbacks":
			return &dota.CDemoCustomDataCallbacks{}, nil
		case "DEM_UserCmd":
			return &dota.CDemoUserCmd{}, nil
		case "DEM_FullPacket":
			return &dota.CDemoFullPacket{}, nil
		case "DEM_SaveGame":
			return &dota.CDemoSaveGame{}, nil
		case "DEM_SpawnGroups":
			return &dota.CDemoSpawnGroups{}, nil
		case "net_NOP":
			return &dota.CNETMsg_NOP{}, nil
		case "net_Disconnect":
			return &dota.CNETMsg_Disconnect{}, nil
		case "net_File":
			return &dota.CNETMsg_File{}, nil
		case "net_SplitScreenUser":
			return &dota.CNETMsg_SplitScreenUser{}, nil
		case "net_Tick":
			return &dota.CNETMsg_Tick{}, nil
		case "net_StringCmd":
			return &dota.CNETMsg_StringCmd{}, nil
		case "net_SetConVar":
			return &dota.CNETMsg_SetConVar{}, nil
		case "net_SignonState":
			return &dota.CNETMsg_SignonState{}, nil
		//case "net_SpawnGroup_Load":
		//	return &dota.CNETMsg_Load{}, nil
		//case "net_SpawnGroup_ManifestUpdate":
		//	return &dota.CNETMsg_ManifestUpdate{}, nil
		//case "net_SpawnGroup_ForceBlockingLoad":
		//	return &dota.CNETMsg_ForceBlockingLoad{}, nil
		//case "net_SpawnGroup_SetCreationTick":
		//	return &dota.CNETMsg_SetCreationTick{}, nil
		//case "net_SpawnGroup_Unload":
		//	return &dota.CNETMsg_Unload{}, nil
		//case "net_SpawnGroup_LoadCompleted":
		//	return &dota.CNETMsg_LoadCompleted{}, nil
		case "svc_ServerInfo":
			return &dota.CSVCMsg_ServerInfo{}, nil
		//case "svc_SendTable":
		//	return &dota.CSVCMsg_SendTable{}, nil
		case "svc_ClassInfo":
			return &dota.CSVCMsg_ClassInfo{}, nil
		case "svc_SetPause":
			return &dota.CSVCMsg_SetPause{}, nil
		case "svc_CreateStringTable":
			return &dota.CSVCMsg_CreateStringTable{}, nil
		case "svc_UpdateStringTable":
			return &dota.CSVCMsg_UpdateStringTable{}, nil
		case "svc_VoiceInit":
			return &dota.CSVCMsg_VoiceInit{}, nil
		case "svc_VoiceData":
			return &dota.CSVCMsg_VoiceData{}, nil
		case "svc_Print":
			return &dota.CSVCMsg_Print{}, nil
		case "svc_Sounds":
			return &dota.CSVCMsg_Sounds{}, nil
		case "svc_SetView":
			return &dota.CSVCMsg_SetView{}, nil
		case "svc_ClearAllStringTables":
			return &dota.CSVCMsg_ClearAllStringTables{}, nil
		case "svc_CmdKeyValues":
			return &dota.CSVCMsg_CmdKeyValues{}, nil
		case "svc_BSPDecal":
			return &dota.CSVCMsg_BSPDecal{}, nil
		case "svc_SplitScreen":
			return &dota.CSVCMsg_SplitScreen{}, nil
		case "svc_PacketEntities":
			return &dota.CSVCMsg_PacketEntities{}, nil
		case "svc_Prefetch":
			return &dota.CSVCMsg_Prefetch{}, nil
		case "svc_Menu":
			return &dota.CSVCMsg_Menu{}, nil
		case "svc_GetCvarValue":
			return &dota.CSVCMsg_GetCvarValue{}, nil
		case "svc_StopSound":
			return &dota.CSVCMsg_StopSound{}, nil
		case "svc_PeerList":
			return &dota.CSVCMsg_PeerList{}, nil
		case "svc_PacketReliable":
			return &dota.CSVCMsg_PacketReliable{}, nil
		//case "UM_AchievementEvent":
		//	return &dota.CUserMsg_AchievementEvent{}, nil
		//case "UM_CloseCaption":
		//	return &dota.CUserMsg_CloseCaption{}, nil
		//case "UM_CurrentTimescale":
		//	return &dota.CUserMsg_CurrentTimescale{}, nil
		//case "UM_DesiredTimescale":
		//	return &dota.CUserMsg_DesiredTimescale{}, nil
		//case "UM_Fade":
		//	return &dota.CUserMsg_Fade{}, nil
		//case "UM_GameTitle":
		//	return &dota.CUserMsg_GameTitle{}, nil
		//case "UM_HintText":
		//	return &dota.CUserMsg_HintText{}, nil
		//case "UM_HudMsg":
		//	return &dota.CUserMsg_HudMsg{}, nil
		//case "UM_HudText":
		//	return &dota.CUserMsg_HudText{}, nil
		//case "UM_KeyHintText":
		//	return &dota.CUserMsg_KeyHintText{}, nil
		//case "UM_ColoredText":
		//	return &dota.CUserMsg_ColoredText{}, nil
		//case "UM_RequestState":
		//	return &dota.CUserMsg_RequestState{}, nil
		//case "UM_ResetHUD":
		//	return &dota.CUserMsg_ResetHUD{}, nil
		//case "UM_Rumble":
		//	return &dota.CUserMsg_Rumble{}, nil
		//case "UM_SayText":
		//	return &dota.CUserMsg_SayText{}, nil
		//case "UM_SayText2":
		//	return &dota.CUserMsg_SayText2{}, nil
		//case "UM_SayTextChannel":
		//	return &dota.CUserMsg_SayTextChannel{}, nil
		//case "UM_Shake":
		//	return &dota.CUserMsg_Shake{}, nil
		//case "UM_ShakeDir":
		//	return &dota.CUserMsg_ShakeDir{}, nil
		//case "UM_TextMsg":
		//	return &dota.CUserMsg_TextMsg{}, nil
		//case "UM_ScreenTilt":
		//	return &dota.CUserMsg_ScreenTilt{}, nil
		//case "UM_Train":
		//	return &dota.CUserMsg_Train{}, nil
		//case "UM_VGUIMenu":
		//	return &dota.CUserMsg_VGUIMenu{}, nil
		//case "UM_VoiceMask":
		//	return &dota.CUserMsg_VoiceMask{}, nil
		//case "UM_VoiceSubtitle":
		//	return &dota.CUserMsg_VoiceSubtitle{}, nil
		//case "UM_SendAudio":
		//	return &dota.CUserMsg_SendAudio{}, nil
		//case "UM_ItemPickup":
		//	return &dota.CUserMsg_ItemPickup{}, nil
		//case "UM_AmmoDenied":
		//	return &dota.CUserMsg_AmmoDenied{}, nil
		//case "UM_CrosshairAngle":
		//	return &dota.CUserMsg_CrosshairAngle{}, nil
		//case "UM_ShowMenu":
		//	return &dota.CUserMsg_ShowMenu{}, nil
		//case "UM_CreditsMsg":
		//	return &dota.CUserMsg_CreditsMsg{}, nil
		//case "EM_PlayJingle":
		//	return &dota.CUserMsg_PlayJingle{}, nil
		//case "EM_ScreenOverlay":
		//	return &dota.CUserMsg_ScreenOverlay{}, nil
		//case "EM_RemoveAllDecals":
		//	return &dota.CUserMsg_RemoveAllDecals{}, nil
		//case "EM_PropagateForce":
		//	return &dota.CUserMsg_PropagateForce{}, nil
		//case "EM_DoSpark":
		//	return &dota.CUserMsg_DoSpark{}, nil
		//case "EM_FixAngle":
		//	return &dota.CUserMsg_FixAngle{}, nil
		//case "UM_CloseCaptionPlaceholder":
		//	return &dota.CUserMsg_CloseCaptionPlaceholder{}, nil
		case "DOTA_UM_AIDebugLine":
			return &dota.CDOTAUserMsg_AIDebugLine{}, nil
		case "DOTA_UM_ChatEvent":
			return &dota.CDOTAUserMsg_ChatEvent{}, nil
		case "DOTA_UM_CombatHeroPositions":
			return &dota.CDOTAUserMsg_CombatHeroPositions{}, nil
		case "DOTA_UM_CombatLogData":
			return &dota.CDOTAUserMsg_CombatLogData{}, nil
		case "DOTA_UM_CombatLogShowDeath":
			return &dota.CDOTAUserMsg_CombatLogShowDeath{}, nil
		case "DOTA_UM_CreateLinearProjectile":
			return &dota.CDOTAUserMsg_CreateLinearProjectile{}, nil
		case "DOTA_UM_DestroyLinearProjectile":
			return &dota.CDOTAUserMsg_DestroyLinearProjectile{}, nil
		case "DOTA_UM_DodgeTrackingProjectiles":
			return &dota.CDOTAUserMsg_DodgeTrackingProjectiles{}, nil
		case "DOTA_UM_GlobalLightColor":
			return &dota.CDOTAUserMsg_GlobalLightColor{}, nil
		case "DOTA_UM_GlobalLightDirection":
			return &dota.CDOTAUserMsg_GlobalLightDirection{}, nil
		case "DOTA_UM_InvalidCommand":
			return &dota.CDOTAUserMsg_InvalidCommand{}, nil
		case "DOTA_UM_LocationPing":
			return &dota.CDOTAUserMsg_LocationPing{}, nil
		case "DOTA_UM_MapLine":
			return &dota.CDOTAUserMsg_MapLine{}, nil
		case "DOTA_UM_MiniKillCamInfo":
			return &dota.CDOTAUserMsg_MiniKillCamInfo{}, nil
		case "DOTA_UM_MinimapDebugPoint":
			return &dota.CDOTAUserMsg_MinimapDebugPoint{}, nil
		case "DOTA_UM_MinimapEvent":
			return &dota.CDOTAUserMsg_MinimapEvent{}, nil
		case "DOTA_UM_NevermoreRequiem":
			return &dota.CDOTAUserMsg_NevermoreRequiem{}, nil
		case "DOTA_UM_OverheadEvent":
			return &dota.CDOTAUserMsg_OverheadEvent{}, nil
		case "DOTA_UM_SetNextAutobuyItem":
			return &dota.CDOTAUserMsg_SetNextAutobuyItem{}, nil
		case "DOTA_UM_SharedCooldown":
			return &dota.CDOTAUserMsg_SharedCooldown{}, nil
		case "DOTA_UM_SpectatorPlayerClick":
			return &dota.CDOTAUserMsg_SpectatorPlayerClick{}, nil
		case "DOTA_UM_TutorialTipInfo":
			return &dota.CDOTAUserMsg_TutorialTipInfo{}, nil
		case "DOTA_UM_UnitEvent":
			return &dota.CDOTAUserMsg_UnitEvent{}, nil
		case "DOTA_UM_ParticleManager":
			return &dota.CDOTAUserMsg_ParticleManager{}, nil
		case "DOTA_UM_BotChat":
			return &dota.CDOTAUserMsg_BotChat{}, nil
		case "DOTA_UM_HudError":
			return &dota.CDOTAUserMsg_HudError{}, nil
		case "DOTA_UM_ItemPurchased":
			return &dota.CDOTAUserMsg_ItemPurchased{}, nil
		case "DOTA_UM_Ping":
			return &dota.CDOTAUserMsg_Ping{}, nil
		case "DOTA_UM_ItemFound":
			return &dota.CDOTAUserMsg_ItemFound{}, nil
		case "DOTA_UM_SwapVerify":
			return &dota.CDOTAUserMsg_SwapVerify{}, nil
		case "DOTA_UM_WorldLine":
			return &dota.CDOTAUserMsg_WorldLine{}, nil
		case "DOTA_UM_ItemAlert":
			return &dota.CDOTAUserMsg_ItemAlert{}, nil
		case "DOTA_UM_HalloweenDrops":
			return &dota.CDOTAUserMsg_HalloweenDrops{}, nil
		case "DOTA_UM_ChatWheel":
			return &dota.CDOTAUserMsg_ChatWheel{}, nil
		case "DOTA_UM_ReceivedXmasGift":
			return &dota.CDOTAUserMsg_ReceivedXmasGift{}, nil
		case "DOTA_UM_UpdateSharedContent":
			return &dota.CDOTAUserMsg_UpdateSharedContent{}, nil
		case "DOTA_UM_TutorialRequestExp":
			return &dota.CDOTAUserMsg_TutorialRequestExp{}, nil
		case "DOTA_UM_TutorialPingMinimap":
			return &dota.CDOTAUserMsg_TutorialPingMinimap{}, nil
		case "DOTA_UM_ShowSurvey":
			return &dota.CDOTAUserMsg_ShowSurvey{}, nil
		case "DOTA_UM_TutorialFade":
			return &dota.CDOTAUserMsg_TutorialFade{}, nil
		case "DOTA_UM_AddQuestLogEntry":
			return &dota.CDOTAUserMsg_AddQuestLogEntry{}, nil
		case "DOTA_UM_SendStatPopup":
			return &dota.CDOTAUserMsg_SendStatPopup{}, nil
		case "DOTA_UM_TutorialFinish":
			return &dota.CDOTAUserMsg_TutorialFinish{}, nil
		case "DOTA_UM_SendRoshanPopup":
			return &dota.CDOTAUserMsg_SendRoshanPopup{}, nil
		case "DOTA_UM_SendGenericToolTip":
			return &dota.CDOTAUserMsg_SendGenericToolTip{}, nil
		case "DOTA_UM_SendFinalGold":
			return &dota.CDOTAUserMsg_SendFinalGold{}, nil
		case "DOTA_UM_CustomMsg":
			return &dota.CDOTAUserMsg_CustomMsg{}, nil
		case "DOTA_UM_CoachHUDPing":
			return &dota.CDOTAUserMsg_CoachHUDPing{}, nil
		case "DOTA_UM_ClientLoadGridNav":
			return &dota.CDOTAUserMsg_ClientLoadGridNav{}, nil
		//case "DOTA_UM_TE_Projectile":
		//	return &dota.CDOTAUserMsg_Projectile{}, nil
		//case "DOTA_UM_TE_ProjectileLoc":
		//	return &dota.CDOTAUserMsg_ProjectileLoc{}, nil
		//case "DOTA_UM_TE_DotaBloodImpact":
		//	return &dota.CDOTAUserMsg_DotaBloodImpact{}, nil
		//case "DOTA_UM_TE_UnitAnimation":
		//	return &dota.CDOTAUserMsg_UnitAnimation{}, nil
		//case "DOTA_UM_TE_UnitAnimationEnd":
		//	return &dota.CDOTAUserMsg_UnitAnimationEnd{}, nil
		case "DOTA_UM_AbilityPing":
			return &dota.CDOTAUserMsg_AbilityPing{}, nil
		case "DOTA_UM_ShowGenericPopup":
			return &dota.CDOTAUserMsg_ShowGenericPopup{}, nil
		case "DOTA_UM_VoteStart":
			return &dota.CDOTAUserMsg_VoteStart{}, nil
		case "DOTA_UM_VoteUpdate":
			return &dota.CDOTAUserMsg_VoteUpdate{}, nil
		case "DOTA_UM_VoteEnd":
			return &dota.CDOTAUserMsg_VoteEnd{}, nil
		case "DOTA_UM_BoosterState":
			return &dota.CDOTAUserMsg_BoosterState{}, nil
		case "DOTA_UM_WillPurchaseAlert":
			return &dota.CDOTAUserMsg_WillPurchaseAlert{}, nil
		case "DOTA_UM_TutorialMinimapPosition":
			return &dota.CDOTAUserMsg_TutorialMinimapPosition{}, nil
		case "DOTA_UM_PlayerMMR":
			return &dota.CDOTAUserMsg_PlayerMMR{}, nil
		case "DOTA_UM_AbilitySteal":
			return &dota.CDOTAUserMsg_AbilitySteal{}, nil
		}
*/

/*
func (p *Parser) AsBaseEventNETSVC(value int) (proto.Message, error) {
		switch value {
		case 0:
			return &dota.CNETMsg_NOP{}, nil
		case 1:
			return &dota.CNETMsg_Disconnect{}, nil
		case 2:
			return &dota.CNETMsg_File{}, nil
		case 3:
			return &dota.CNETMsg_SplitScreenUser{}, nil
		case 4:
			return &dota.CNETMsg_Tick{}, nil
		case 5:
			return &dota.CNETMsg_StringCmd{}, nil
		case 6:
			return &dota.CNETMsg_SetConVar{}, nil
		case 7:
			return &dota.CNETMsg_SignonState{}, nil
		// case 8:
		// 	return &dota.CNETMsg_Load{}, nil
		// case 9:
		// 	return &dota.CNETMsg_ManifestUpdate{}, nil
		// case 10:
		// 	return &dota.CNETMsg_ForceBlockingLoad{}, nil
		// case 11:
		// 	return &dota.CNETMsg_SetCreationTick{}, nil
		// case 12:
		// 	return &dota.CNETMsg_Unload{}, nil
		// case 13:
		// 	return &dota.CNETMsg_LoadCompleted{}, nil
		case 40:
			return &dota.CSVCMsg_ServerInfo{}, nil
		// case 41:
		// 	return &dota.CSVCMsg_SendTable{}, nil
		case 42:
			return &dota.CSVCMsg_ClassInfo{}, nil
		case 43:
			return &dota.CSVCMsg_SetPause{}, nil
		case 44:
			return &dota.CSVCMsg_CreateStringTable{}, nil
		case 45:
			return &dota.CSVCMsg_UpdateStringTable{}, nil
		case 46:
			return &dota.CSVCMsg_VoiceInit{}, nil
		case 47:
			return &dota.CSVCMsg_VoiceData{}, nil
		case 48:
			return &dota.CSVCMsg_Print{}, nil
		case 49:
			return &dota.CSVCMsg_Sounds{}, nil
		case 50:
			return &dota.CSVCMsg_SetView{}, nil
		case 51:
			return &dota.CSVCMsg_ClearAllStringTables{}, nil
		case 52:
			return &dota.CSVCMsg_CmdKeyValues{}, nil
		case 53:
			return &dota.CSVCMsg_BSPDecal{}, nil
		case 54:
			return &dota.CSVCMsg_SplitScreen{}, nil
		case 55:
			return &dota.CSVCMsg_PacketEntities{}, nil
		case 56:
			return &dota.CSVCMsg_Prefetch{}, nil
		case 57:
			return &dota.CSVCMsg_Menu{}, nil
		case 58:
			return &dota.CSVCMsg_GetCvarValue{}, nil
		case 59:
			return &dota.CSVCMsg_StopSound{}, nil
		case 60:
			return &dota.CSVCMsg_PeerList{}, nil
		case 61:
			return &dota.CSVCMsg_PacketReliable{}, nil
		}
*/

/*
func (p *Parser) AsBaseEventBUMDUM(value int) (proto.Message, error) {
	return nil, spew.Errorf("BaseEventBUMDUM not found: %d", value)
		switch value {
		//case 101:
		//	return &dota.CUserMsg_AchievementEvent{}, nil
		//case 102:
		//	return &dota.CUserMsg_CloseCaption{}, nil
		//case 104:
		//	return &dota.CUserMsg_CurrentTimescale{}, nil
		//case 105:
		//	return &dota.CUserMsg_DesiredTimescale{}, nil
		//case 106:
		//	return &dota.CUserMsg_Fade{}, nil
		//case 107:
		//	return &dota.CUserMsg_GameTitle{}, nil
		//case 109:
		//	return &dota.CUserMsg_HintText{}, nil
		//case 110:
		//	return &dota.CUserMsg_HudMsg{}, nil
		//case 111:
		//	return &dota.CUserMsg_HudText{}, nil
		//case 112:
		//	return &dota.CUserMsg_KeyHintText{}, nil
		case 113:
			return &dota.CUserMsg_ColoredText{}, nil
		case 114:
			return &dota.CUserMsg_RequestState{}, nil
		case 115:
			return &dota.CUserMsg_ResetHUD{}, nil
		case 116:
			return &dota.CUserMsg_Rumble{}, nil
		case 117:
			return &dota.CUserMsg_SayText{}, nil
		case 118:
			return &dota.CUserMsg_SayText2{}, nil
		case 119:
			return &dota.CUserMsg_SayTextChannel{}, nil
		case 120:
			return &dota.CUserMsg_Shake{}, nil
		case 121:
			return &dota.CUserMsg_ShakeDir{}, nil
		case 124:
			return &dota.CUserMsg_TextMsg{}, nil
		case 125:
			return &dota.CUserMsg_ScreenTilt{}, nil
		case 126:
			return &dota.CUserMsg_Train{}, nil
		case 127:
			return &dota.CUserMsg_VGUIMenu{}, nil
		case 128:
			return &dota.CUserMsg_VoiceMask{}, nil
		case 129:
			return &dota.CUserMsg_VoiceSubtitle{}, nil
		case 130:
			return &dota.CUserMsg_SendAudio{}, nil
		case 131:
			return &dota.CUserMsg_ItemPickup{}, nil
		case 132:
			return &dota.CUserMsg_AmmoDenied{}, nil
		case 133:
			return &dota.CUserMsg_CrosshairAngle{}, nil
		case 134:
			return &dota.CUserMsg_ShowMenu{}, nil
		case 135:
			return &dota.CUserMsg_CreditsMsg{}, nil
		case 136:
			return &dota.CUserMsg_PlayJingle{}, nil
		case 137:
			return &dota.CUserMsg_ScreenOverlay{}, nil
		case 138:
			return &dota.CUserMsg_RemoveAllDecals{}, nil
		case 139:
			return &dota.CUserMsg_PropagateForce{}, nil
		case 140:
			return &dota.CUserMsg_DoSpark{}, nil
		case 141:
			return &dota.CUserMsg_FixAngle{}, nil
		case 142:
			return &dota.CUserMsg_CloseCaptionPlaceholder{}, nil
		case 465:
			return &dota.CDOTAUserMsg_AIDebugLine{}, nil
		case 466:
			return &dota.CDOTAUserMsg_ChatEvent{}, nil
		case 467:
			return &dota.CDOTAUserMsg_CombatHeroPositions{}, nil
		case 468:
			return &dota.CDOTAUserMsg_CombatLogData{}, nil
		case 470:
			return &dota.CDOTAUserMsg_CombatLogShowDeath{}, nil
		case 471:
			return &dota.CDOTAUserMsg_CreateLinearProjectile{}, nil
		case 472:
			return &dota.CDOTAUserMsg_DestroyLinearProjectile{}, nil
		case 473:
			return &dota.CDOTAUserMsg_DodgeTrackingProjectiles{}, nil
		case 474:
			return &dota.CDOTAUserMsg_GlobalLightColor{}, nil
		case 475:
			return &dota.CDOTAUserMsg_GlobalLightDirection{}, nil
		case 476:
			return &dota.CDOTAUserMsg_InvalidCommand{}, nil
		case 477:
			return &dota.CDOTAUserMsg_LocationPing{}, nil
		case 478:
			return &dota.CDOTAUserMsg_MapLine{}, nil
		case 479:
			return &dota.CDOTAUserMsg_MiniKillCamInfo{}, nil
		case 480:
			return &dota.CDOTAUserMsg_MinimapDebugPoint{}, nil
		case 481:
			return &dota.CDOTAUserMsg_MinimapEvent{}, nil
		case 482:
			return &dota.CDOTAUserMsg_NevermoreRequiem{}, nil
		case 483:
			return &dota.CDOTAUserMsg_OverheadEvent{}, nil
		case 484:
			return &dota.CDOTAUserMsg_SetNextAutobuyItem{}, nil
		case 485:
			return &dota.CDOTAUserMsg_SharedCooldown{}, nil
		case 486:
			return &dota.CDOTAUserMsg_SpectatorPlayerClick{}, nil
		case 487:
			return &dota.CDOTAUserMsg_TutorialTipInfo{}, nil
		case 488:
			return &dota.CDOTAUserMsg_UnitEvent{}, nil
		case 489:
			return &dota.CDOTAUserMsg_ParticleManager{}, nil
		case 490:
			return &dota.CDOTAUserMsg_BotChat{}, nil
		case 491:
			return &dota.CDOTAUserMsg_HudError{}, nil
		case 492:
			return &dota.CDOTAUserMsg_ItemPurchased{}, nil
		case 493:
			return &dota.CDOTAUserMsg_Ping{}, nil
		case 494:
			return &dota.CDOTAUserMsg_ItemFound{}, nil
		case 496:
			return &dota.CDOTAUserMsg_SwapVerify{}, nil
		case 497:
			return &dota.CDOTAUserMsg_WorldLine{}, nil
		case 499:
			return &dota.CDOTAUserMsg_ItemAlert{}, nil
		case 500:
			return &dota.CDOTAUserMsg_HalloweenDrops{}, nil
		case 501:
			return &dota.CDOTAUserMsg_ChatWheel{}, nil
		case 502:
			return &dota.CDOTAUserMsg_ReceivedXmasGift{}, nil
		case 503:
			return &dota.CDOTAUserMsg_UpdateSharedContent{}, nil
		case 504:
			return &dota.CDOTAUserMsg_TutorialRequestExp{}, nil
		case 505:
			return &dota.CDOTAUserMsg_TutorialPingMinimap{}, nil
		case 507:
			return &dota.CDOTAUserMsg_ShowSurvey{}, nil
		case 508:
			return &dota.CDOTAUserMsg_TutorialFade{}, nil
		case 509:
			return &dota.CDOTAUserMsg_AddQuestLogEntry{}, nil
		case 510:
			return &dota.CDOTAUserMsg_SendStatPopup{}, nil
		case 511:
			return &dota.CDOTAUserMsg_TutorialFinish{}, nil
		case 512:
			return &dota.CDOTAUserMsg_SendRoshanPopup{}, nil
		case 513:
			return &dota.CDOTAUserMsg_SendGenericToolTip{}, nil
		case 514:
			return &dota.CDOTAUserMsg_SendFinalGold{}, nil
		case 515:
			return &dota.CDOTAUserMsg_CustomMsg{}, nil
		case 516:
			return &dota.CDOTAUserMsg_CoachHUDPing{}, nil
		case 517:
			return &dota.CDOTAUserMsg_ClientLoadGridNav{}, nil
		case 518:
			return &dota.CDOTAUserMsg_Projectile{}, nil
		case 519:
			return &dota.CDOTAUserMsg_ProjectileLoc{}, nil
		case 520:
			return &dota.CDOTAUserMsg_DotaBloodImpact{}, nil
		case 521:
			return &dota.CDOTAUserMsg_UnitAnimation{}, nil
		case 522:
			return &dota.CDOTAUserMsg_UnitAnimationEnd{}, nil
		case 523:
			return &dota.CDOTAUserMsg_AbilityPing{}, nil
		case 524:
			return &dota.CDOTAUserMsg_ShowGenericPopup{}, nil
		case 525:
			return &dota.CDOTAUserMsg_VoteStart{}, nil
		case 526:
			return &dota.CDOTAUserMsg_VoteUpdate{}, nil
		case 527:
			return &dota.CDOTAUserMsg_VoteEnd{}, nil
		case 528:
			return &dota.CDOTAUserMsg_BoosterState{}, nil
		case 529:
			return &dota.CDOTAUserMsg_WillPurchaseAlert{}, nil
		case 530:
			return &dota.CDOTAUserMsg_TutorialMinimapPosition{}, nil
		case 531:
			return &dota.CDOTAUserMsg_PlayerMMR{}, nil
		case 532:
			return &dota.CDOTAUserMsg_AbilitySteal{}, nil
		}
*/
